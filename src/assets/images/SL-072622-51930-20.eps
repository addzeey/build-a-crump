%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 27.7
%%For: Akash Gupta
%%CreationDate: 10/14/2023
%%BoundingBox: 0 0 2599 1733
%%HiResBoundingBox: 0 0 2599 1733
%%CropBox: 0 0 2599 1733
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 27.7.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 27.7.0 x421 R agm 7.1 ct 8.513%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.a8d4753, 2023/03/23-08:56:37        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract curved perspective grid lines layout design </rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Akash Gupta</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>grid</rdf:li>
               <rdf:li>lines</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>perspective</rdf:li>
               <rdf:li>surface</rdf:li>
               <rdf:li>dimension</rdf:li>
               <rdf:li>geometric</rdf:li>
               <rdf:li>square</rdf:li>
               <rdf:li>mesh</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>architecture</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>pattern</rdf:li>
               <rdf:li>shape</rdf:li>
               <rdf:li>structure</rdf:li>
               <rdf:li>infinity</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>area</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>guide</rdf:li>
               <rdf:li>network</rdf:li>
               <rdf:li>texture</rdf:li>
               <rdf:li>wire</rdf:li>
               <rdf:li>wireframe</rdf:li>
               <rdf:li>virtual</rdf:li>
               <rdf:li>cyber</rdf:li>
               <rdf:li>space</rdf:li>
               <rdf:li>curve</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">abstract curved perspective grid lines layout design </rdf:li>
            </rdf:Alt>
         </dc:description>
         <xmp:MetadataDate>2022-08-19T17:12:03+05:30</xmp:MetadataDate>
         <xmp:ModifyDate>2022-07-26T19:05:02+05:30</xmp:ModifyDate>
         <xmp:CreateDate>2022-07-26T19:05:01+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator 25.4 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qh7IUjkWlOMsn/DOW&#xA;/wCNsVRGKoe3qLm6FKVdWr41jUf8a4qiMVQ61GoPts0Sb/6rN/zViqIxVDysRfW9OjJID/wp/hiq&#xA;IxVD3bFXtiP9/AfejDFURiqH1BitqWHUPGR9Ei4qiMVUb3/eOf8A4xv/AMROKr4f7mP/AFR+rFV+&#xA;KobTP94IP9XFUTiqGsAeE3vNJT/gjiqJxVD26n61dt2LqB9Ea/1xVEYqh1U/pB27CFB97N/TFURi&#xA;qHlDG9godgkhI/4EfxxVEYqh7qpe2UGlZR9NEZv4YqiMVQ9/X6sQDQs8a1P+U6j+OKojFVG9fhZz&#xA;vWnGNzX5KTiqpGvCNU/lAG3sMVUP0db/AM83/I+b/mvFVC20+D1bkVmAWUAfv5t6xoa/a8Tiqv8A&#xA;o63/AJ5v+R83/NeKoeOwt/r06c5v7uNv76XuXHXn/k4qiP0db/zzf8j5v+a8VUG0+EXyDnNxaJzT&#xA;15q1Vl/y/wDKxVX/AEdb/wA83/I+b/mvFUPPYRC5tgGm4szBj6838hP8/tiqI/R1v/PN/wAj5v8A&#xA;mvFVC7sbdRES0xrKg/v5j1NO74qr/o63/nm/5Hzf814qoXmnW/1dvim2od55j0YeL4qr/o63/nm/&#xA;5Hzf814qo3mnwC0nIaaojY7zzEfZPYviq+HT4DCh5zfZH+75vD/XxVf+jrf+eb/kfN/zXiqG06wg&#xA;ayhJaapXtNMB9wfFUT+jrf8Anm/5Hzf814qo2unwGJvim/vJBtPMOkjf5eKq36Ot/wCeb/kfN/zX&#xA;iqhbWUDTXQ5TDhKF/v5t/wB0h/n98VV/0db/AM83/I+b/mvFUOlhF9emBabgIoiP383UtJXfnXwx&#xA;VEfo63/nm/5Hzf8ANeKod9Pt/r0Pxy/3Uu3rS1+1H351xVEfo63/AJ5v+R83/NeKoe5sLcTWg5Tf&#xA;FKQP38x/3U57v7YqiP0db/zzf8j5v+a8VUL3T4BCtDM372LYzzHrKu+79sVV/wBHW/8APN/yPm/5&#xA;rxVD39hALG4IeWvptTlNMRUg0qC+Koj9HW/883/I+b/mvFUTiqHthS5uxQ7yK1fnGq/8a4qiMVUE&#xA;r9fmqRT0oqDv9qSv8MVV8VQ78f0hB/N6MtPlyjriqIxVD3PL17SnT1Ty+XpSfxxVEYqoXoX0kJNO&#xA;MsRHzMij+OKq+KofUSRYzEbELUH6cVRGKqdwoa3lU9CjA/dircH9zH/qj9WKr8VQ2mf7wQf6uKon&#xA;FUPYMWgYn/f04+6ZxiqIxVQtlAmuz/NKCf8AkUg/hiqviqHQn9ITL2EURH0tJ/TFURiqHfidQi3+&#xA;JYZNvZmj/wCacVRGKqE/I3NsB0DMx+hCP44qr4qh7yh9BTX4plpT2q38MVRGKoe//wB5iNvjeNN+&#xA;nxOq/wAcVRGKqP8Apn/Ff/DYqh4/rYvpwOFTHEx+1TcuNv8AgcVRH+mf8V/8NiqH/wBLF+No+TRH&#xA;4vipRWG3/DYqiP8ATP8Aiv8A4bFVCT64LyA0j3SRa/F34n/jXFVf/TP+K/8AhsVQ9z9d9a1p6f8A&#xA;emvX/fT4qiP9M/4r/wCGxVD3q3jQqP3f97Cf2u0qnFUR/pn/ABX/AMNiqhfLdmznDenTgx/a7CuK&#xA;q/8Apn/Ff/DYqsm+uei/939k/wA3hirofrnop/d/ZH83hiq//TP+K/8AhsVQ+ni8FjCP3dOIIrXo&#xA;d8VRH+mf8V/8NiqG0/636DU9P++n68v9/PiqJ/0z/iv/AIbFUPam8M92P3e0oHf/AH1GcVRH+mf8&#xA;V/8ADYqoRtdm9nH7uqpGD9rxY/xxVX/0z/iv/hsVQ/8ApRv/APdfNYuvxUozf824qiP9M/4r/wCG&#xA;xVDyfWjfQAmPkI5GA+LsUB/4liqI/wBM/wCK/wDhsVQ9z9c9a13jH700Hxb/ALp8VRH+mf8AFf8A&#xA;w2KqF79b9JQfS3lipWvaRTiqv/pn/Ff/AA2Kq2KodDTUJRXrFHQfJnr+vFURiqHf/joQ7/7ql+Hx&#xA;+KPfFURiqhcA/WLVgdubKR41Rj/DFVfFUPdhuVuR2lFfkVYfxxVEYqh78kQLTr60H3eslcVRGKof&#xA;UiRp10RsRDIQf9icVRGKrJ/7mT/VP6sVW2jFrSFj1Mak/SBiqriqjZf7xwf8Y0/4iMVVsVUbMARN&#xA;T/fkv/JxsVVsVUbcAS3PvIK/8i0xVWxVQhKm6uKdRwB/4Gv8cVV8VQ6EHUJhTdYojX5tJ/TFURiq&#xA;Hf8A46EIp/uqX4vD4o9sVRGKoe4qbm1FK0dmr4UjYf8AG2KojFUPd7tbrQHlKOv+SrN/xriqIxVD&#xA;V1P+WH/gn/5pxVQZtRF8m0PJ4moOTdFZf8n/ACsVV66n/LD/AME//NOKqEh1EXkJKQ8ikig8mpuV&#xA;Ph/k4qr11P8Alh/4J/8AmnFUPcm/9a05LCCJTwozbn0n6/D4VxVEV1P+WH/gn/5pxVQuzqXCM8YR&#xA;SWPozd2A8PfFVeup/wAsP/BP/wA04qoXr6isHJkhorxnZm7OvtiqvXU/5Yf+Cf8A5pxVQvv0g1lc&#xA;K6Q8DG4ajPWnE17Yqr11P+WH/gn/AOacVWTHUvReqw04mvxN4f6uKrLM6j9Ug4rDT01pVmrTiPbF&#xA;Vaup/wAsP/BP/wA04qo2Z1H6pBxWGnprSrNWnEe2Kq1dT/lh/wCCf/mnFVCzfUGiYqsJHqSjdm6i&#xA;Rgf2fHFVeup/yw/8E/8AzTiqGtDqPK4osP8AfGtWbrxXptiqJrqf8sP/AAT/APNOKqEH6Q9e5YLD&#xA;yLqG+Ju0a/5PviqvXU/5Yf8Agn/5pxVQR9Q+vTKEh5CKIn4mpQtJTt7HFVeup/yw/wDBP/zTiqgT&#xA;qRvVPGH4Ym25NT4mH+T/AJOKq9dT/lh/4J/+acVQ8h1A30AKw8gkjKOTUoCgNfh/ysVRFdT/AJYf&#xA;+Cf/AJpxVQuDqPrWtUhJEp4/E2x9J/bFVeup/wAsP/BP/wA04qicVQ8n/HRg2/3TL8Xh8Ue2KojF&#xA;UPcbXNq1aVdlp41jY/8AGuKojFUPdlRLaEitJtvmY3H8cVRGKoe/5egvHr60H3eslfwxVEYqoX4B&#xA;tXr0BU/cwOKq+KobU2K6bdsOqwyEfQpxVE4qtkXlGy9OQI+8Yqp2P+8Vv/xiT/iIxVWxVRsf94rf&#xA;/jEn/ERiqtiqF03/AHnf/jPcf8n3xVFYqoWpr63/ABlbFVfFUNaKRPeE/tTAj/kTGP4YqicVQ8TV&#xA;v7gU+ykQ/Fz/ABxVEYqh1AOoyGu6wx7f6zP/AM04qiMVQ78v0hDt8PpS1PvyjpiqIxVDTkG8tV3q&#xA;PUYeGy03/wCCxVE4qhfqVz/y3z/8DB/1SxVDTWk4vLat/PVg6j4Ya9Af990/ZxVE/Urn/lvn/wCB&#xA;g/6pYqhrq0mE9mGvpyTMQhpDsfRkNdo/CuKon6lc/wDLfP8A8DB/1SxVDXtrOghJvZ2/fIBVYNix&#xA;pX+798VRP1K5/wCW+f8A4GD/AKpYqhtQtrlIFP16Y1mgWhWH9qZB2j98VRP1K5/5b5/+Bg/6pYqh&#xA;tSs7kWE5+uzvRCSpWGlB8oxiqJ+pXP8Ay3z/APAwf9UsVQ+oWVwbC5BvpiDE9QVhofhPWkYP44qi&#xA;PqVz/wAt8/8AwMH/AFSxV31K5/5b5/8AgYP+qWKqFlZ3Bsrci+nAMaGgWCg+EeMeKq/1K5/5b5/+&#xA;Bg/6pYqoWVncGytyL6cAxoaBYKD4R4x4qr/Urn/lvn/4GD/qliqG0+yufQb/AE2Zf30+wEP+/n33&#xA;jPXriqJ+pXP/AC3z/wDAwf8AVLFULYWlwUmpezLSaQbCHejdd4ziqK+pXP8Ay3z/APAwf9UsVQ1r&#xA;bXLT3g+vTDhMFqFh3/cxmp/d++Kon6lc/wDLfP8A8DB/1SxVDQWs7XdyBezgoUUtxgqfhr/vv3xV&#xA;E/Urn/lvn/4GD/qliqGS0m/SEwF9PzEMRY8Ya0LSU/3XTxxVE/Urn/lvn/4GD/qliqHNncHUAPr8&#xA;1ViPaGvxMP8Aiun7PhiqI+pXP/LfP/wMH/VLFUO9pc/X4V+vTUMUprSGuzR9P3dKb4qiPqVz/wAt&#xA;8/8AwMH/AFSxVf8AXof5Zf8AkTL/AM04qhbq+gFxZHhLUysK+lKP91Of5fbFUV9eh/ll/wCRMv8A&#xA;zTiqGu76AS2jFJTSbasMneN12qvviqJ+vQ/yy/8AImX/AJpxVDX99biFCVl/voaVhl7yqO64qifr&#xA;0P8ALL/yJl/5pxVDX9/ALcMVloJIif3Uo2EinuuKon69D/LL/wAiZf8AmnFUPqF9ALC5JEoAiepM&#xA;UoH2T/k4qiPr0P8ALL/yJl/5pxVD397CbG4HGXeJ+sMo/ZP+TiqI+vQ/yy/8iZf+acVd9eh/ll/5&#xA;Ey/804qh7C9hFjbjjLtEnSGU/sj/ACcVRH16H+WX/kTL/wA04qh7C9hFjbjjLtEnSGU/sj/JxVEf&#xA;Xof5Zf8AkTL/AM04qh7K9hELfDL/AHsv+6Zf9+t/k4qiPr0P8sv/ACJl/wCacVQ9lewiFvhl3llO&#xA;0Mv+/W/ycVRH16H+WX/kTL/zTiqHtryATXZ4S/FKCaQy/wC+kG/w+2Koj69D/LL/AMiZf+acVQ1t&#xA;dwC4u24y1Mij+6l6CNP8n3xVE/Xof5Zf+RMv/NOKoaO8t/0jOwWWvpRKf3UvZpD04/5WKon69D/L&#xA;L/yJl/5pxVDJeW51KVuMvIQxinpS1oWftx9sVRP16H+WX/kTL/zTiqFe8tzqULUl5LDKKelL0Zo+&#xA;3H/JxVFfXof5Zf8AkTL/AM04qr4qhbxlFxYgjdpyB8/RkP8ADFUViqGveP8Ao5PaZKE+JqP44qic&#xA;VQ2oqGt0B/39AfumQ4qicVQuqKWsnA7Mh+51OKorFUHrP/HHvv8AmHl/4gcVRmKofUf+Ofdf8Yn/&#xA;AOInFVS3/wB54v8AUX9WKqmKofTSDp1qQagwxkEf6oxVEYqh9O/459r/AMYk/wCIjFURiqHsf7hv&#xA;+Ms3/J1sVRGKobTnD27kdppx/wADM4/hiqJxVCaexMl4Sa/6QR9yIMVReKoOx/3q1H/mIX/qHixV&#xA;GYqhYFP6Qu27FYh9wb+uKorFUNGoGp3DdzDCD9Dy/wBcVROKob4Dqf8AlrD+Bf8AsxVE4qh/qEH8&#xA;03/I6X/mrFUHfWUIutOHKX4rhgf30p/495T/ADYqjPqEH803/I6X/mrFUHqdlCEt6NLvcRDeaU9X&#xA;Hi2Koz6hB/NN/wAjpf8AmrFUPfWMIhX4pf72Ef30p6yr/lYqiPqEH803/I6X/mrFUPf2MItJDyl7&#xA;dZpT+0P8rFUR9Qg/mm/5HS/81YqhtU0+A6ZdjlLvDIP76U/sHsWpiqJ+oQfzTf8AI6X/AJqxVD6j&#xA;YwjT7k8pdonO80p/ZP8AlYqqW9jAbeI8pfsL/u6Xw/1sVVPqEH803/I6X/mrFUHo1lC2j2LFpam3&#xA;iJpNKBug7BsVRn1CD+ab/kdL/wA1Yqh9OsYTp9seUu8SHaaUfsj/ACsVRH1CD+ab/kdL/wA1Yqh7&#xA;GxhMLfFL/ezD++lHSVv8rFUR9Qg/mm/5HS/81Yqg9KsoWtXJaX/ei5G00o6XEg7NiqM+oQfzTf8A&#xA;I6X/AJqxVB6dZQl7yrS7XDDaaUfsL/lYqjPqEH803/I6X/mrFUPa2MBnu/il2lH+7pf99R/5WKoj&#xA;6hB/NN/yOl/5qxVDw2MP1u5HKXbh/u6X+X/WxVEfUIP5pv8AkdL/AM1YqhIrSI6tcpzl4rBAw/fS&#xA;9WeYHfl7Yqi/qEH803/I6X/mrFUGtlD+mHXlLT6uh/vpa/bbvyxVGfUIP5pv+R0v/NWKqnG5/wB+&#xA;J/wB/wCasVQd+lybrTvjU0uGP2Dt/o8v+ViqM43P+/E/4A/81YqhNRjuWW3HNP8AeiI/YPZq/wA3&#xA;tiqL43P+/E/4A/8ANWKoa/W49Baun99B+wf9/J/lYqieNz/vxP8AgD/zViqF1L11spC0iAfCPsHq&#xA;WAH7WKorjc/78T/gD/zViqD1n6ymj3zCRKrbynZD2Q/5WKozjc/78T/gD/zViqG1Jbj9HXVXSnoy&#xA;fsH+U/5WKqtstz9Xi+NPsL+wfD/WxVU43P8AvxP+AP8AzViqD0eO5TSLFeafDbxD7JPRB/lYqjON&#xA;z/vxP+AP/NWKobTVuP0da0dKejH+wf5R/lYqieNz/vxP+AP/ADViqGsFuPQajp/fT/sH/fz/AOVi&#xA;qJ43P+/E/wCAP/NWKoPSUuRav8aj/SLk7oe9xJ/lYqjONz/vxP8AgD/zViqC00XHqXtHT/elq/Af&#xA;5E/ysVRvG5/34n/AH/mrFUJZG4a5vwHQcJ1U/Ad/3ER/m98VRfG5/wB+J/wB/wCasVQsHr/XbpfU&#xA;TkPTJHA9CDT9r2xVFcbn/fif8Af+asVQscc41S4bmnIwQA/AaUDy0/a98VRXG5/34n/AH/mrFUGI&#xA;7kauzc0obdQDxPZ2/wAr3xVGcbn/AH4n/AH/AJqxV3G5/wB+J/wB/wCasVQd4Ln63YKJUr6zMRwO&#xA;4EMg/m8WGKozjc/78T/gD/zViqDvxcGaxQyqOdxtRDvxikeh+L/JxVGcbn/fif8AAH/mrFUHqqzm&#xA;3jVpUFbi340Q7lZ0b+b2xVGcbn/fif8AAH/mrFUHqyTmz4tKgDywJXgerTIB+174qjONz/vxP+AP&#xA;/NWKoPWI520m9V5ECtBIp+AjqhH82Kozjc/78T/gD/zViqG1Nbn9G3dXSnoyfsH+U/5WKq6R3CIq&#xA;K6cVAA+A9B/ssVXcbn/fif8AAH/mrFUNpi3P6NtKOlPRj/YP8o/ysVRPG5/34n/AH/mrFUNpi3P6&#xA;NtKOlPRj/YP8o/ysVRPG5/34n/AH/mrFULpwuDbvSRP76f8AYPaZ/wDKxVFcbn/fif8AAH/mrFUL&#xA;p3rtBIFkT4Z5w3wHr6rH+b3xVFcbn/fif8Af+asVQdiJvrF+qOg4zgN8B6mGNv5vfFUZxuf9+J/w&#xA;B/5qxVB2QmF3qCq6cjMjP8B7wxgftf5OKozjc/78T/gD/wA1YqgoVnGrXYDryMMDsShpu0qinxf5&#xA;OKo3jc/78T/gD/zViqDjScaxOea8nt4d+BpRHl/yv8vFUZxuf9+J/wAAf+asVQbrcjVof3i/Hby1&#xA;+A8fgeP/ACuvx4qjONz/AL8T/gD/AM1Yq70ZP9/v9yf804qgpYpG1e2X1nISCZzsmxLRqv7PccsV&#xA;Rvoyf7/f7k/5pxVBXcUrX9jGJ3qrSTH7H2VjMf8AL4yjFUb6Mn+/3+5P+acVQWoRyevYR+u9JLih&#xA;/u/2YpJP5fFMVRvoyf7/AH+5P+acVQWqxP8AV4l9ZiWuLegIU9JkY9F7AVxVG+jJ/v8Af7k/5pxV&#xA;BaxC50+RDLIwkKR8QE35uF/l98VRvoyf7/f7k/5pxVBa1DIdHvh9YcVt5dzwoPgP+TiqN9GT/f7/&#xA;AHJ/zTiqyZZY4XcTOSilqUTsK/y4qoaXFIdMtD6zj9zHtRP5B/k4qivRk/3+/wByf804qhdLikOm&#xA;Wh9Zx+5j2on8g/ycVRXoyf7/AH+5P+acVQOkQSi0kBlcH6zdGnwdDcyEH7PfFUd6Mn+/3+5P+acV&#xA;QWmRH/S1WZxwuJOWydWox/Z/ysVRvoyf7/f7k/5pxVBWMUn1vUR6zA+up2CVIMEW5+H2piqN9GT/&#xA;AH+/3J/zTiqCgjkGq3cfrvT0oJOidWMi/wAv/FeKo30ZP9/v9yf804qglikXWJAZ3/e26Ffs/wC6&#xA;nav7NP8AdoxVG+jJ/v8Af7k/5pxVBSxOusW/75/3kEwJonVXiKjp7t2xVG+jJ/v9/uT/AJpxVBXc&#xA;TpqNjJ6z1cy24NEr8aer/L/xRiqN9GT/AH+/3J/zTiqjSx/3x/yRb/mnFUFaCyl1G9n9D4E9O2Qe&#xA;kxFYwXY/Z8ZeJ/1cVRtLH/fH/JFv+acVQSiyk1hz6Hw20AUUianKZqsCOPUCJfvxVG0sf98f8kW/&#xA;5pxVBTfUn1a1jEHwRRSyuBE2zEqiVHHuGf7sVRtLH/fH/JFv+acVQV+LJrvT4xB1mZ3X0m+wkL7/&#xA;AGezlcVRtLH/AHx/yRb/AJpxVBasLEwQxiD4nubfj+5b9iVZD2H7KHFUbSx/3x/yRb/mnFUFrIsf&#xA;0VdL6ArJGYxWJhvJ8HXj/lYqjaWP++P+SLf804qo3rWCWVw5g2WNyf3LdlJ/lxVuzSwW0gUW+wjU&#xA;D9y38o/ycVVaWP8Avj/ki3/NOKoLRWs30m1LQVb01FfRbtt/LiqNpY/74/5It/zTiqD0kWn1aQPD&#xA;yYXFz0iY0HruVH2f5aYqjKWP++P+SLf804qg7H6n9a1EGEmlwvEGE7D6vF0+HxriqMpY/wC+P+SL&#xA;f804qg4BZLq12nofC0UEgHot1JkU/s+CDFUZSx/3x/yRb/mnFUERZJrKUg2nt25fuT1hcU/Zr/u4&#xA;4qjaWP8Avj/ki3/NOKoK6FkmpWMvofC/q25Hot1dRKD9n/iin04qjaWP++P+SLf804qgtS+pRvZ3&#xA;HoUWK4USfuW3WUGED7P88in6MVRtLH/fH/JFv+acVQWrizSz+sLBQ2rpOx9Fh8CMDJ+z/vvliqNp&#xA;Y/74/wCSLf8ANOKrb29uLW2eYwo7CixxhzV3Y8UQfB+0xpirWn293a2kcLLG8gq0snNhykcl3anH&#xA;bk7E4qrSTTxxtJIsaogLOxkIAAFST8GKoTSlvfQe5kiVZbyQ3DqzsCoYBY1I47FY1UH3xVG8rr/f&#xA;af8ABn/mjFUDYNczXV3eiNKOwt4zzO6QFgf2f9+M+Ko7ldf77T/gz/zRiqBVrmbWWYRpS0g9P7Zp&#xA;ynYMw+x1VYlP+yxVHcrr/faf8Gf+aMVQN41zJqVhD6aVQy3J+M7hE9Kn2fGcYqjuV1/vtP8Agz/z&#xA;RiqC1ZrowQxhEDSXNvx+M78JVkYfZ/lQ4qjeV1/vtP8Agz/zRiqD1p7oaPfHhGtLeU8i7UHwHf7G&#xA;KowG5AoI4wB0HM/80Yq7ldf77T/gz/zRiqA0E3I0e1AjSnAdXPj/AKuKo/ldf77T/gz/AM0YqgtM&#xA;a5WS+iEcf7u5avxt1kRJf5f8vFUbyuv99p/wZ/5oxVAwNdJrF2ojQCSGGT7Z3asiN+x4KuKo7ldf&#xA;77T/AIM/80Yqgp2uY9WtZTGgE0ckB+M7sKSJX4eyo+Ko3ldf77T/AIM/80YqgdUa5ia0uzGgFvOv&#xA;qUc7pKDEa/B0BcMfliqO5XX++0/4M/8ANGKoPVo76WyZookaaFlniUOas0TB+I+H9unH6cVRMFxN&#xA;PDHPEsbRSqHjbm26sKg/Y8MVWXkFxdWs1uyIolQpyDmoqKch8HUdRiqzTry8ubVWeOMToTHcKHPw&#xA;yoeLj7PSu49t8VRDfWGUq0UZUihBckEH/YYqgtLku4kewkVDLZ0VSzmrQn+6f7O+w4k/zA4q3BFe&#xA;Xdwt3KypDET9UiZDU1FDKw5bEgkKOw67mgVR3G5/34n/AAB/5rxVL7lbm+uPqYdDbRENdvwNGIoV&#xA;h+1vXq/tt3xVMONz/vxP+AP/ADXiqE1Ca+RFgglT61cEpEeB+EftSGrHZBv7mg74qrW1rLbW8cET&#xA;oI4lCIOBOwFN/jxVu4llt4JJ5ZUWONSzngx2G/QNiqhpttexwGSVkW4uGM04KkkM1KLUNvwUBPox&#xA;VF8bn/fif8Af+a8VQNotxNf3V1zTilLaI8DQ+mSZCPi/nbif9XFUdxuf9+J/wB/5rxVA3S3Emp2U&#xA;PNP3QluahDtxX0gD8Xf1j92Ko7jc/wC/E/4A/wDNeKoLWFuTp0sfNP3xSHZCP75xH/Mf5sVRvG5/&#xA;34n/AAB/5rxV3G5/34n/AAB/5rxVB6TFcR6dBGJEogKglD2JH82Kozjc/wC/E/4A/wDNeKoK0W5T&#xA;Ub6LmlXMVx9g/tp6X8//ABTiqN43P+/E/wCAP/NeKoG6W4j1GynMifH6lsfgIA5gSAn4vGGg+eKo&#xA;7jc/78T/AIA/814qg9UgvHtfUjZWmtmWeJQhqTGalR8X7a1X6cVRMTzSxJLHLG0cihkYIaFWFQft&#xA;Yq1cW0txBJBKyNFKpR14MKqwof28VUNNlvpIDFPIn1m3b0piUPxEfZfZh9taN+HbFUXxuf8Afif8&#xA;Af8AmvFUBarc2d01m0iCCYtLaMUNKklpIvtdvtL7dPs4qj+Nz/vxP+AP/NeKpfdLdWVw18rKYJaC&#xA;8UI3w8RRZgOXYbP/AJNP5cVR4FyQCJIyD0PA/wDNeKoW8s7x3S5geP63ACI6qyq6tTlGx5HZqDem&#xA;xxVd6Fh/v9/+kmX/AJrxVCTfVZpTbWtw4ptPcfWJKR/5K1ejP+A6nsCqiIbHSoIxHFKyIKmguJep&#xA;NST8fUnc4qtuTplvEZHnlbsqLcSlmY9FUc+pxVTs7G1Ba4ubhjcydQLiSiJ2jU86mnc9z9ACqJ9C&#xA;w/3+/wD0ky/814qgmhsby79P1n+qWzAyE3EhEkwNVUVfpGdyf5qeBxVG+hYf7/f/AKSZf+a8VQ9+&#xA;bOG3JhmdriQiOBTcS0MjbCtH+yOre2KqltY6bBAkK3DngN2+sSDkTuzGj9WO5xVU9Cw/3+//AEky&#xA;/wDNeKoOzgsZbu6uDM4UMIIj9Yk3WKvI151/vGYfRiqM9Cw/3+//AEky/wDNeKoTUILFmtIhO5Et&#xA;wnKtxIR+7DTd3PePFUX6Fh/v9/8ApJl/5rxV3oWH+/3/AOkmX/mvFUHpMNibFOU715Sf8fEg/wB2&#xA;N/l4qjPQsP8Af7/9JMv/ADXiqDeCxTVoyJ34Twurt9Yk+1EwKCvPwkfFUZ6Fh/v9/wDpJl/5rxVD&#xA;6hY2k1pIsU7eutHh5XElPUQ8krV/5hiqpb/o2eCOZJ5AsihgDcSgiorQjn1xVU9Cw/3+/wD0ky/8&#xA;14qgrSGxt7mSzadxGay2pFxIBwP2k2f9hj9xHviqN9Cw/wB/v/0ky/8ANeKoO8tbSKRb2CV2dBxu&#xA;IxPJykiG+3x15JUlR8x3xVFRx6ZIiuly7IwBVhcy0IP+zxVZcWGmTxFHncHqji4kqrD7LLVzuMVU&#xA;rQ2hY21zO4uoxUsLiUJIv86Vc/SOx9qEqor0LD/f7/8ASTL/AM14qgTb2lgapNI9iesazycoRT9k&#xA;B6snt1HbboqjVi011DLcsysKhhcyEEH/AGeKqTalb3bFY7pIbYbNLzCu/sm/wj/K+7xxVExXelwx&#xA;rFFPCkaiiqHUAfjirU+r6dDGXa4jY9FRWUsx8AK4qo21zbF/rF1cwmc/YjEilYlP7I33Pi38MVRX&#xA;6QsP+WmL/g1/riqEu9Ut3cWtvdRpI4rJPyUiNOldzTkf2R9PbFVeC60uCJYop4ljQUUeop+8k7nF&#xA;VT9IWH/LTF/wa/1xVBW99ZXN2129xEIoqx2ql137PJ1/apRfbf8AaxVG/pCw/wCWmL/g1/riqhe6&#xA;tZw2skkc8TygUiTmu7tsoO/Tkd8VbtJ9OtraKBbqJhGoBYutWPdjv1J3OKq36QsP+WmL/g1/riqD&#xA;lvrJ9Ut/9IiKRRSOTzXZ2Kqvfw5YqjP0hYf8tMX/AAa/1xV36QsP+WmL/g1/riqE0y/sRbMDcRLS&#xA;acAc1HwiZ+PfwxVF/pCw/wCWmL/g1/riqD1G+sgLadbiImCdGIDr9l6xN37CSv0YqjP0hYf8tMX/&#xA;AAa/1xV36QsP+WmL/g1/riqDtL6ygup7b6xH6TEzwHmtPjP7xevZ/i/2WKoz9IWH/LTF/wAGv9cV&#xA;Q97PZTxD07uFLiI+pBIXWgceO/2WGzexxVfa6vYTwrIZo426PGzrVWGxB37Hv3xVV/SFh/y0xf8A&#xA;Br/XFUCb2ysZjIlxGbOZqyoHU+k56uAP2WP2vA7+OKo79IWH/LTF/wAGv9cVUbmfTJ1Aa5jV0PKK&#xA;VXTkjUpyWv8AtHviqy21e25+hczxCZRtIrDhIPFd9j4r+sb4qif0hYf8tMX/AAa/1xVBvPa27mWz&#xA;uISrGstsZFCse5Q1+FvwPfxxVMPUf/fTfev/ADViqjcXvpcV9F3mkqI4gVq1OvfYDucVWW8Mof17&#xA;hGkuSKVHHigPVUq3Tbc9T9wCqJ9R/wDfTfev/NWKoe6vJkIhgiLXUgJjDceKgdXajdB+PTFV1rF9&#xA;XjKrG7OxLSSMU5Ox6sd/9rpiqt6j/wC+m+9f+asVQd5LLO4so0dS45XDAqCsR22IPV6UH0ntiqLV&#xA;iihFhZVUAKo4gADt1xVv1H/3033r/wA1Yqg5JHn1BE9NjHaD1HHw/wB44IQdey8jT3GKoz1H/wB9&#xA;N96/81Yq71H/AN9N96/81YqhLaRnv7yX02+H04KfD+wpk8f+LsVRfqP/AL6b71/5qxV3qP8A76b7&#xA;1/5qxVCaY7i2f92x/f3B/Z7zv74qi/Uf/fTfev8AzViqjdo1xazQGNgJUZK1XbkKV+1irrO7ee0h&#xA;mMTVdAWHw7NTcdexxVW9R/8AfTfev/NWKoW/ExRLiKFzNbN6iAcastKOnX9penvTFURHcepGskaM&#xA;yOAyMCtCCKg9cVXeo/8AvpvvX/mrFUFcs9rOb1Im9JgBdqOPQdJKV6r3/wAn5DFUYJWIqI2IPQ1X&#xA;/mrFW/Uf/fTf8L/zViqBV308hfTb6gdlqV/cnw6/3fh/L8uiqO9R/wDfTfev/NWKqc6LPGY5YGZe&#xA;o3UEEdCCGqCPEYqoJdz27LFdIzIxCxXHwip7CShore/Q+3TFUX6j/wC+m+9f+asVQs19cq/oxW/O&#xA;4Irx5iij+ZyOg/XirdvHPEWdojJO/wDeSlhU06ADso7D+OKq3q3P++P+HGKqNxe3EXFFt+U0hIiT&#xA;kNyOpPgB3OKtWsdzCGZ4uc8lDNJyAqR0AHZR2H8cVV/Vuf8AfH/DjFVK5vZoIi7QVNQqIGFWZjQK&#xA;Pniq21S6hRi8IaaU85nDDdulB7AbDFVf1bn/AHx/w4xVZNdSwxPLJDRI1LMeQ2AFTiqlYi7jhLSQ&#xA;fvpmMsvxD7Tdv9itF+jFUR6tz/vj/hxirvVuf98f8OMVQumyXBtfVEFfXd5geQ3DsSv/AAtMVRXq&#xA;3P8Avj/hxirvVuf98f8ADjFULp8lyIpV9GtJpv2h+1IW/jiqK9W5/wB8f8OMVd6tz/vj/hxiqFsZ&#xA;bhHuLf0f7uUuo5D7Mv7z/iTEYqivVuf98f8ADjFXerc/74/4cYqg7OW4t55LMw/DvNbjkPsMfiX/&#xA;AGLH7iMVRnq3P++P+HGKu9W5/wB8f8MMVQcElxaSi1MP7hyfqvxD4aCpj+jqvtt2xVGerc/74/4c&#xA;Yq0ZLggg29QdiCwxVCJNdWTBHi/0RiBExYfuyf2Sf5f5T26eGKoz1bn/AHx/w4xVp2mdSj24ZWFG&#xA;UspBB7EYqhRJeWYP7lpLQdPi5PH/ABZfxHy6Komx+r+k3o15cv33Ovqc+/Ou9f4dNsVRGKuxVDQe&#xA;h9cn+19Z+Hlz/k/Z4duNa9O/XFUTirsVQ83ofXYPV5c6N6Ffscqb/wCy49PavviqIxV2Koe+9H0V&#xA;9evpepHyp0rzHHl/k8qVxVEYq7FVsn923Xofs/a6dvfFVln6P1SD0f7n019L/V4jj+GKquKuxVQt&#xA;PS4y+nWnqvy5fzV3p7VxVXxV2KodfR/SEnHl63pJ6n8vHk/D6a8sVRGKuxVD3PofWLXly9bm3pce&#xA;tOJ5cv8AJp+NMVRGKuxVD3/ofVX9evDbjx+3yr8PD/K5dMVV1rxFa1pvWlfwxVvFVsnp+m3qU9Oh&#xA;58qceNN617Yqp2fD6uvp8/T39P1OvHt13p4V3xVWxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ee15bfbd-8d49-8a4d-8ea1-eca833e3ff8c</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:844aa445-c603-1c47-8f36-c3d941047bb2</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:84edfa5c-84ba-f042-97b9-a26fc9f16ad2</stRef:instanceID>
            <stRef:documentID>xmp.did:84edfa5c-84ba-f042-97b9-a26fc9f16ad2</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:896ab945-5ecb-2449-988c-7b1e66fb7d1b</stEvt:instanceID>
                  <stEvt:when>2021-03-06T19:27:20+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:844aa445-c603-1c47-8f36-c3d941047bb2</stEvt:instanceID>
                  <stEvt:when>2022-07-26T19:05:02+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 25.4 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:faa41302-5a31-334e-9e8e-36818bef05f9</stEvt:instanceID>
                  <stEvt:when>2022-08-15T19:54:05+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2022 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ac0564be-12df-784c-a5bc-034140db23b7</stEvt:instanceID>
                  <stEvt:when>2022-08-19T17:12:03+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2022 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>36.097222</stDim:w>
            <stDim:h>24.069444</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1733 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1733 li
2599 1733 li
2599 0 li
cp
clp
2598.08 1732.05 mo
3.63797e-12 1732.05 li
3.63797e-12 -2.72849e-12 li
2598.08 -2.72849e-12 li
2598.08 1732.05 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
gsave
2598.08 1732.05 mo
3.63797e-12 1732.05 li
3.63797e-12 -2.72849e-12 li
2598.08 -2.72849e-12 li
2598.08 1732.05 li
cp
clp
2676.6 -22.6514 mo
-61.4126 -22.6514 li
-59.345 8.09734 -58.8344 15.6733 -58.3286 23.1866 cv
-56.3265 52.8985 -55.8334 60.2116 -55.3444 67.4598 cv
-43.4107 244.593 -33.268 395.134 -25.9074 523.269 cv
-18.6286 649.983 -14.0104 755.816 -13.0433 844.893 cv
-12.0786 933.837 -14.7429 1007.07 -22.1432 1068.59 cv
-29.6283 1130.81 -42.0684 1181.97 -60.8708 1226.03 cv
-73.4263 1255.45 -88.9925 1282.09 -108.085 1307.11 cv
-127.716 1332.84 -151.271 1357.12 -179.469 1381.21 cv
-208.795 1406.25 -243.505 1431.41 -284.676 1458.15 cv
-328.125 1486.37 -379.454 1516.8 -440.445 1551.39 cv
-458.1 1561.4 -476.627 1571.8 -496.078 1582.63 cv
-515.963 1593.7 -536.847 1605.24 -558.794 1617.32 cv
-581.277 1629.69 -604.916 1642.64 -629.79 1656.24 cv
-655.327 1670.2 -682.217 1684.88 -710.555 1700.34 cv
-718.123 1704.47 -725.804 1708.66 -733.597 1712.92 cv
-741.452 1717.2 -749.423 1721.55 -757.512 1725.97 cv
-765.666 1730.43 -773.942 1734.95 -782.341 1739.55 cv
-790.809 1744.18 -799.405 1748.89 -808.13 1753.67 cv
3447.16 1753.67 li
3438.15 1748.89 3429.28 1744.18 3420.54 1739.55 cv
3411.88 1734.95 3403.34 1730.43 3394.92 1725.97 cv
3386.57 1721.55 3378.35 1717.2 3370.24 1712.92 cv
3362.2 1708.66 3354.28 1704.47 3346.46 1700.34 cv
3317.22 1684.88 3289.47 1670.2 3263.12 1656.24 cv
3237.45 1642.64 3213.06 1629.69 3189.86 1617.32 cv
3167.21 1605.24 3145.66 1593.7 3125.14 1582.63 cv
3105.07 1571.8 3085.95 1561.4 3067.73 1551.39 cv
3004.79 1516.8 2951.83 1486.37 2906.99 1458.15 cv
2864.5 1431.41 2828.69 1406.25 2798.42 1381.21 cv
2769.33 1357.12 2745.02 1332.84 2724.76 1307.11 cv
2705.06 1282.09 2689 1255.45 2676.04 1226.03 cv
2656.64 1181.97 2643.8 1130.81 2636.07 1068.59 cv
2628.44 1007.07 2625.69 933.837 2626.69 844.893 cv
2627.68 755.816 2632.45 649.983 2639.96 523.269 cv
2647.56 395.134 2658.02 244.593 2670.34 67.4598 cv
2672.38 38.14 2672.89 30.6946 2673.42 23.1866 cv
2675.53 -7.1826 2676.06 -14.8872 2676.6 -22.6514 cv
98.0443 -21.4822 mo
98.0996 -20.5422 98.105 -20.4484 98.1111 -20.3546 cv
267.284 -20.354 li
267.236 -21.294 267.231 -21.3878 267.227 -21.4822 cv
271.098 -21.4816 li
271.146 -20.5422 271.151 -20.4484 271.156 -20.3546 cv
440.329 -20.354 li
440.289 -21.294 440.285 -21.3878 440.281 -21.4822 cv
444.153 -21.4816 li
444.192 -20.5422 444.196 -20.4484 444.2 -20.3546 cv
613.377 -20.354 li
613.346 -21.294 613.343 -21.3878 613.339 -21.4822 cv
617.279 -21.4816 li
617.311 -20.5422 617.314 -20.4484 617.317 -20.3546 cv
786.421 -20.354 li
786.398 -21.294 786.396 -21.3878 786.394 -21.4822 cv
790.334 -21.4816 li
790.357 -20.5422 790.359 -20.4484 790.362 -20.3546 cv
959.539 -20.354 li
959.524 -21.294 959.522 -21.3878 959.521 -21.4822 cv
963.388 -21.4816 li
963.403 -20.5422 963.405 -20.4484 963.406 -20.3546 cv
1132.58 -20.354 li
1132.58 -21.294 1132.58 -21.3878 1132.57 -21.4822 cv
1136.45 -21.4816 li
1136.45 -20.5422 1136.45 -20.4484 1136.45 -20.3546 cv
1305.63 -20.354 li
1305.63 -21.294 1305.63 -21.3878 1305.63 -21.4822 cv
1309.57 -21.4816 li
1309.57 -20.5422 1309.57 -20.4484 1309.57 -20.3546 cv
1478.68 -20.354 li
1478.69 -21.294 1478.69 -21.3878 1478.69 -21.4822 cv
1482.63 -21.4816 li
1482.62 -20.5422 1482.62 -20.4484 1482.62 -20.3546 cv
1651.79 -20.354 li
1651.81 -21.294 1651.81 -21.3878 1651.81 -21.4822 cv
1655.68 -21.4816 li
1655.66 -20.5422 1655.66 -20.4484 1655.66 -20.3546 cv
1824.84 -20.354 li
1824.86 -21.294 1824.87 -21.3878 1824.87 -21.4822 cv
1828.74 -21.4816 li
1828.71 -20.5422 1828.71 -20.4484 1828.71 -20.3546 cv
1997.88 -20.354 li
1997.92 -21.294 1997.92 -21.3878 1997.92 -21.4822 cv
2001.86 -21.4816 li
2001.83 -20.5422 2001.83 -20.4484 2001.82 -20.3546 cv
2170.93 -20.354 li
2170.97 -21.294 2170.97 -21.3878 2170.98 -21.4822 cv
2174.92 -21.4816 li
2174.88 -20.5422 2174.87 -20.4484 2174.87 -20.3546 cv
2344.04 -20.354 li
2344.09 -21.294 2344.1 -21.3878 2344.1 -21.4822 cv
2347.98 -21.4816 li
2347.93 -20.5422 2347.92 -20.4484 2347.92 -20.3546 cv
2517.09 -20.354 li
2517.15 -21.294 2517.15 -21.3878 2517.16 -21.4822 cv
2521.03 -21.4816 li
2520.97 -20.5422 2520.97 -20.4484 2520.96 -20.3546 cv
2676.44 -20.354 li
2674.36 9.59484 2673.85 16.9759 2673.34 24.298 cv
2671.32 53.2594 2670.83 60.3902 2670.34 67.4598 cv
2658.02 244.593 2647.56 395.134 2639.96 523.269 cv
2632.45 649.983 2627.68 755.816 2626.69 844.893 cv
2625.69 933.837 2628.44 1007.07 2636.07 1068.59 cv
2643.8 1130.81 2656.64 1181.97 2676.04 1226.03 cv
2689 1255.45 2705.06 1282.09 2724.76 1307.11 cv
2745.02 1332.84 2769.33 1357.12 2798.42 1381.21 cv
2828.69 1406.25 2864.5 1431.41 2906.99 1458.15 cv
2951.83 1486.37 3004.79 1516.8 3067.73 1551.39 cv
3085.95 1561.4 3105.07 1571.8 3125.14 1582.63 cv
3145.66 1593.7 3167.21 1605.24 3189.86 1617.32 cv
3213.06 1629.69 3237.45 1642.64 3263.12 1656.24 cv
3289.47 1670.2 3317.22 1684.88 3346.46 1700.34 cv
3354.04 1704.34 3361.71 1708.4 3369.5 1712.52 cv
3377.35 1716.67 3385.31 1720.88 3393.38 1725.16 cv
3401.52 1729.47 3409.78 1733.84 3418.15 1738.28 cv
3426.59 1742.75 3435.15 1747.3 3443.84 1751.91 cv
3202.55 1751.91 li
3203.77 1752.64 3203.89 1752.72 3204.02 1752.79 cv
3198 1752.79 li
3196.78 1752.06 3196.66 1751.98 3196.54 1751.91 cv
2933.99 1751.91 li
2935.04 1752.64 2935.15 1752.72 2935.26 1752.79 cv
2929.24 1752.79 li
2928.19 1752.06 2928.09 1751.98 2927.98 1751.91 cv
2665.43 1751.91 li
2666.31 1752.64 2666.4 1752.72 2666.49 1752.79 cv
2660.37 1752.79 li
2659.49 1752.06 2659.4 1751.98 2659.31 1751.91 cv
2396.87 1751.91 li
2397.58 1752.64 2397.65 1752.72 2397.73 1752.79 cv
2391.61 1752.79 li
2390.9 1752.06 2390.83 1751.98 2390.76 1751.91 cv
2128.21 1751.91 li
2128.74 1752.64 2128.8 1752.72 2128.85 1752.79 cv
2122.84 1752.79 li
2122.31 1752.06 2122.26 1751.98 2122.2 1751.91 cv
1859.65 1751.91 li
1860.02 1752.64 1860.05 1752.72 1860.09 1752.79 cv
1854.08 1752.79 li
1853.71 1752.06 1853.68 1751.98 1853.64 1751.91 cv
1591.09 1751.91 li
1591.29 1752.64 1591.31 1752.72 1591.33 1752.79 cv
1585.21 1752.79 li
1585.02 1752.06 1585 1751.98 1584.98 1751.91 cv
1322.53 1751.91 li
1322.55 1752.64 1322.56 1752.72 1322.56 1752.79 cv
1316.44 1752.79 li
1316.42 1752.06 1316.42 1751.98 1316.42 1751.91 cv
1053.87 1751.91 li
1053.72 1752.64 1053.7 1752.72 1053.69 1752.79 cv
1047.68 1752.79 li
1047.83 1752.06 1047.84 1751.98 1047.86 1751.91 cv
785.306 1751.91 li
784.986 1752.64 784.954 1752.72 784.922 1752.79 cv
778.915 1752.79 li
779.239 1752.06 779.271 1751.98 779.304 1751.91 cv
516.75 1751.91 li
516.258 1752.64 516.209 1752.72 516.16 1752.79 cv
510.04 1752.79 li
510.536 1752.06 510.585 1751.98 510.635 1751.91 cv
248.193 1751.91 li
247.531 1752.64 247.464 1752.72 247.398 1752.79 cv
241.278 1752.79 li
241.945 1752.06 242.012 1751.98 242.079 1751.91 cv
-20.4755 1751.91 li
-21.3096 1752.64 -21.3932 1752.72 -21.4768 1752.79 cv
-27.4897 1752.79 li
-26.6507 1752.06 -26.5671 1751.98 -26.4835 1751.91 cv
-289.032 1751.91 li
-290.037 1752.64 -290.138 1752.72 -290.239 1752.79 cv
-296.252 1752.79 li
-295.241 1752.06 -295.14 1751.98 -295.04 1751.91 cv
-557.588 1751.91 li
-558.765 1752.64 -558.883 1752.72 -559.001 1752.79 cv
-565.127 1752.79 li
-563.944 1752.06 -563.826 1751.98 -563.709 1751.91 cv
-804.921 1751.91 li
-796.5 1747.3 -788.202 1742.75 -780.022 1738.28 cv
-771.907 1733.84 -763.908 1729.47 -756.023 1725.16 cv
-748.198 1720.88 -740.484 1716.67 -732.88 1712.52 cv
-725.332 1708.4 -717.891 1704.34 -710.555 1700.34 cv
-682.217 1684.88 -655.327 1670.2 -629.79 1656.24 cv
-604.916 1642.64 -581.277 1629.69 -558.794 1617.32 cv
-536.847 1605.24 -515.963 1593.7 -496.078 1582.63 cv
-476.627 1571.8 -458.1 1561.4 -440.445 1551.39 cv
-379.454 1516.8 -328.125 1486.37 -284.676 1458.15 cv
-243.505 1431.41 -208.795 1406.25 -179.469 1381.21 cv
-151.271 1357.12 -127.716 1332.84 -108.085 1307.11 cv
-88.9925 1282.09 -73.4263 1255.45 -60.8708 1226.03 cv
-42.0684 1181.97 -29.6283 1130.81 -22.1432 1068.59 cv
-14.7429 1007.07 -12.0786 933.837 -13.0433 844.893 cv
-14.0104 755.816 -18.6286 649.983 -25.9074 523.269 cv
-33.268 395.134 -43.4107 244.593 -55.3444 67.4598 cv
-57.2719 38.8713 -57.7609 31.6141 -58.2534 24.298 cv
-60.2453 -5.28997 -60.7505 -12.7937 -61.2581 -20.3546 cv
94.167 -20.354 li
94.1111 -21.294 94.1057 -21.3878 94.0997 -21.4822 cv
98.0437 -21.4816 li
level3{
gsave
clp
[7.36771e-14 1203.24 -1203.24 7.36771e-14 1319.51 450.87 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .701961 .701961 ]
/C1 [.501961 .501961 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .501961 .501961 ]
/C1 [.701961 .701961 .701961 ]
/N 1 
>>
]
/Bounds [.649758 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36771e-14 1203.24 -1203.24 7.36771e-14 1319.51 450.87 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za-mBZ*CR<Yct=7YHP+3Y-"h.XK8M(X/i;$WiE%tWMlboVl-GjVP^5eV59u`Una][US=KWTqS0QTV.pL
T:_^HSt2FCS=H+>S"#n9R[TY4R@'A/R$X/+QBmi%Q'ISuPa%AqPEM)lOcbcfOH>QbO,o<]NfB$XN/W^S
Mi3LNMMd7IM26tDLkgb@L5(G:KnY56KS4u1K7\],JUrB'J:N0#J:W<(K7ei1Knb>;LPUbCMMd=MN/WaV
NfT6_OHG]hPEV5qQ'IZ%Q^F/.R@9V7S=H.@StDXJTV8'RUSFW\V5:&eVl6PnWN*#"XK8P+Y-5%5Yd(I=
~>
<~Za-mBZ*CR<Yct=7YHP+3Y-"h.XK8M(X/i;$WiE%tWMlboVl-GjVP^5eV59u`Una][US=KWTqS0QTV.pL
T:_^HSt2FCS=H+>S"#n9R[TY4R@'A/R$X/+QBmi%Q'ISuPa%AqPEM)lOcbcfOH>QbO,o<]NfB$XN/W^S
Mi3LNMMd7IM26tDLkgb@L5(G:KnY56KS4u1K7\],JUrB'J:N0#J:W<(K7ei1Knb>;LPUbCMMd=MN/WaV
NfT6_OHG]hPEV5qQ'IZ%Q^F/.R@9V7S=H.@StDXJTV8'RUSFW\V5:&eVl6PnWN*#"XK8P+Y-5%5Yd(I=
~>
<~Za-mBZ*CR<Yct=7YHP+3Y-"h.XK8M(X/i;$WiE%tWMlboVl-GjVP^5eV59u`Una][US=KWTqS0QTV.pL
T:_^HSt2FCS=H+>S"#n9R[TY4R@'A/R$X/+QBmi%Q'ISuPa%AqPEM)lOcbcfOH>QbO,o<]NfB$XN/W^S
Mi3LNMMd7IM26tDLkgb@L5(G:KnY56KS4u1K7\],JUrB'J:N0#J:W<(K7ei1Knb>;LPUbCMMd=MN/WaV
NfT6_OHG]hPEV5qQ'IZ%Q^F/.R@9V7S=H.@StDXJTV8'RUSFW\V5:&eVl6PnWN*#"XK8P+Y-5%5Yd(I=
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
2517.16 -21.4822 mo
2517.15 -21.3878 2517.15 -21.294 2517.14 -21.2002 cv
2517.14 -21.1058 2517.13 -21.0119 2517.12 -20.9181 cv
2517.12 -20.8243 2517.11 -20.7299 2517.11 -20.6361 cv
2517.1 -20.5422 2517.09 -20.4484 2517.09 -20.3546 cv
2516.62 -12.7937 2516.16 -5.28997 2515.71 2.15484 cv
2515.25 9.59484 2514.79 16.9759 2514.34 24.298 cv
2513.89 31.6141 2513.45 38.8713 2513 46.0677 cv
2512.56 53.2594 2512.12 60.3902 2511.69 67.4598 cv
2511.54 69.7848 2511.4 72.105 2511.26 74.421 cv
2511.11 76.7359 2510.97 79.0465 2510.83 81.3523 cv
2510.69 83.658 2510.55 85.9584 2510.41 88.2546 cv
2510.26 90.5502 2510.12 92.8415 2509.98 95.1275 cv
2513.83 95.1281 li
2513.97 92.8415 2514.11 90.5502 2514.26 88.2546 cv
2514.4 85.9584 2514.54 83.658 2514.68 81.3523 cv
2514.82 79.0465 2514.97 76.7359 2515.11 74.421 cv
2515.25 72.105 2515.4 69.7848 2515.54 67.4598 cv
2515.98 60.3902 2516.42 53.2594 2516.86 46.0677 cv
2517.31 38.8713 2517.75 31.6141 2518.21 24.298 cv
2518.66 16.9759 2519.11 9.59484 2519.57 2.15484 cv
2520.03 -5.28997 2520.49 -12.7937 2520.96 -20.3546 cv
2520.97 -20.4484 2520.97 -20.5422 2520.98 -20.6361 cv
2520.98 -20.7299 2520.99 -20.8243 2521 -20.9181 cv
2521 -21.0119 2521.01 -21.1058 2521.01 -21.2002 cv
2521.02 -21.294 2521.02 -21.3878 2521.03 -21.4822 cv
2517.16 -21.4816 li
2509.72 99.4191 mo
2508.73 115.562 2507.75 131.475 2506.78 147.162 cv
2505.82 162.824 2504.88 178.26 2503.95 193.475 cv
2503.02 208.667 2502.1 223.638 2501.21 238.392 cv
2500.31 253.125 2499.44 267.641 2498.58 281.945 cv
2502.39 281.945 li
2503.25 267.641 2504.13 253.125 2505.03 238.392 cv
2505.93 223.638 2506.84 208.667 2507.78 193.475 cv
2508.71 178.26 2509.66 162.824 2510.62 147.162 cv
2511.59 131.475 2512.57 115.562 2513.57 99.4191 cv
2509.72 99.4191 li
2498.35 285.731 mo
2497.49 299.976 2496.65 314.011 2495.83 327.837 cv
2495.01 341.645 2494.21 355.247 2493.43 368.646 cv
2492.64 382.028 2491.88 395.208 2491.14 408.19 cv
2490.39 421.157 2489.67 433.926 2488.96 446.501 cv
2492.75 446.502 li
2493.45 433.926 2494.18 421.157 2494.93 408.19 cv
2495.67 395.208 2496.44 382.028 2497.22 368.646 cv
2498.01 355.247 2498.81 341.645 2499.64 327.837 cv
2500.46 314.011 2501.3 299.976 2502.16 285.731 cv
2498.35 285.732 li
2488.78 449.769 mo
2488.08 462.3 2487.4 474.639 2486.74 486.789 cv
2486.08 498.926 2485.44 510.875 2484.82 522.64 cv
2484.21 534.392 2483.61 545.962 2483.04 557.352 cv
2482.46 568.731 2481.91 579.931 2481.38 590.955 cv
2485.14 590.956 li
2485.67 579.931 2486.22 568.731 2486.8 557.352 cv
2487.38 545.962 2487.97 534.392 2488.59 522.64 cv
2489.21 510.875 2489.85 498.926 2490.52 486.789 cv
2491.18 474.639 2491.86 462.3 2492.56 449.769 cv
2488.78 449.769 li
2481.24 593.822 mo
2480.72 604.801 2480.21 615.607 2479.73 626.242 cv
2479.25 636.869 2478.8 647.326 2478.36 657.616 cv
2477.93 667.9 2477.52 678.018 2477.14 687.975 cv
2476.75 697.924 2476.39 707.714 2476.06 717.345 cv
2479.8 717.345 li
2480.14 707.714 2480.5 697.924 2480.88 687.975 cv
2481.27 678.018 2481.68 667.9 2482.11 657.616 cv
2482.55 647.326 2483.01 636.869 2483.49 626.242 cv
2483.97 615.607 2484.47 604.801 2485 593.822 cv
2481.24 593.823 li
2475.97 719.895 mo
2475.64 729.493 2475.33 738.935 2475.05 748.223 cv
2474.77 757.508 2474.52 766.639 2474.29 775.622 cv
2474.06 784.602 2473.86 793.434 2473.69 802.12 cv
2473.51 810.804 2473.36 819.345 2473.25 827.744 cv
2476.98 827.745 li
2477.1 819.345 2477.25 810.804 2477.42 802.12 cv
2477.6 793.434 2477.8 784.602 2478.03 775.622 cv
2478.26 766.639 2478.51 757.508 2478.79 748.223 cv
2479.07 738.935 2479.38 729.493 2479.71 719.895 cv
2475.97 719.895 li
2473.21 829.928 mo
2473.1 838.304 2473.01 846.541 2472.95 854.641 cv
2472.89 862.741 2472.86 870.705 2472.86 878.536 cv
2472.86 886.367 2472.89 894.067 2472.95 901.638 cv
2473.01 909.209 2473.09 916.653 2473.21 923.973 cv
2476.95 923.973 li
2476.83 916.653 2476.74 909.209 2476.68 901.638 cv
2476.62 894.067 2476.59 886.367 2476.6 878.536 cv
2476.6 870.705 2476.63 862.741 2476.69 854.641 cv
2476.74 846.541 2476.83 838.304 2476.95 829.928 cv
2473.21 829.928 li
2473.25 925.877 mo
2473.37 933.173 2473.53 940.345 2473.71 947.397 cv
2473.9 954.452 2474.12 961.387 2474.37 968.205 cv
2474.62 975.026 2474.9 981.731 2475.22 988.324 cv
2475.54 994.919 2475.89 1001.4 2476.27 1007.78 cv
2480.01 1007.78 li
2479.63 1001.4 2479.28 994.919 2478.96 988.324 cv
2478.64 981.731 2478.36 975.026 2478.11 968.205 cv
2477.85 961.387 2477.63 954.452 2477.45 947.397 cv
2477.26 940.345 2477.1 933.173 2476.98 925.877 cv
2473.25 925.877 li
2476.38 1009.47 mo
2476.77 1015.83 2477.19 1022.08 2477.65 1028.22 cv
2478.11 1034.38 2478.61 1040.42 2479.14 1046.37 cv
2479.67 1052.32 2480.24 1058.17 2480.85 1063.92 cv
2481.46 1069.68 2482.1 1075.34 2482.78 1080.91 cv
2486.54 1080.91 li
2485.86 1075.34 2485.21 1069.68 2484.61 1063.92 cv
2484 1058.17 2483.43 1052.32 2482.89 1046.37 cv
2482.36 1040.42 2481.86 1034.38 2481.4 1028.22 cv
2480.94 1022.08 2480.51 1015.83 2480.12 1009.47 cv
2476.38 1009.47 li
2482.96 1082.38 mo
2483.65 1087.94 2484.38 1093.4 2485.15 1098.78 cv
2485.92 1104.16 2486.73 1109.45 2487.57 1114.65 cv
2488.42 1119.86 2489.31 1124.99 2490.25 1130.03 cv
2491.18 1135.08 2492.16 1140.05 2493.17 1144.93 cv
2496.97 1144.93 li
2495.95 1140.05 2494.97 1135.08 2494.03 1130.03 cv
2493.1 1124.99 2492.21 1119.86 2491.35 1114.65 cv
2490.5 1109.45 2489.69 1104.16 2488.92 1098.78 cv
2488.15 1093.4 2487.42 1087.94 2486.73 1082.38 cv
2482.96 1082.38 li
2493.44 1146.21 mo
2494.47 1151.09 2495.54 1155.89 2496.65 1160.62 cv
2497.77 1165.36 2498.93 1170.02 2500.14 1174.61 cv
2501.35 1179.21 2502.61 1183.73 2503.91 1188.19 cv
2505.21 1192.66 2506.57 1197.06 2507.97 1201.39 cv
2511.81 1201.39 li
2510.41 1197.06 2509.05 1192.66 2507.74 1188.19 cv
2506.43 1183.73 2505.17 1179.21 2503.96 1174.61 cv
2502.75 1170.02 2501.58 1165.36 2500.46 1160.62 cv
2499.34 1155.89 2498.27 1151.09 2497.24 1146.21 cv
2493.44 1146.21 li
2508.34 1202.54 mo
2509 1204.55 2509.66 1206.54 2510.34 1208.52 cv
2511.02 1210.51 2511.71 1212.47 2512.4 1214.43 cv
2513.1 1216.39 2513.81 1218.33 2514.53 1220.27 cv
2515.26 1222.2 2515.99 1224.12 2516.73 1226.03 cv
2518.01 1229.3 2519.32 1232.53 2520.66 1235.73 cv
2522 1238.94 2523.38 1242.11 2524.8 1245.25 cv
2526.21 1248.39 2527.66 1251.51 2529.15 1254.59 cv
2530.64 1257.68 2532.17 1260.75 2533.74 1263.78 cv
2537.66 1263.78 li
2536.09 1260.75 2534.56 1257.68 2533.06 1254.59 cv
2531.57 1251.51 2530.11 1248.39 2528.69 1245.25 cv
2527.27 1242.11 2525.89 1238.94 2524.54 1235.73 cv
2523.2 1232.53 2521.88 1229.3 2520.6 1226.03 cv
2519.86 1224.12 2519.12 1222.2 2518.4 1220.27 cv
2517.67 1218.33 2516.96 1216.39 2516.26 1214.43 cv
2515.56 1212.47 2514.87 1210.51 2514.19 1208.52 cv
2513.51 1206.54 2512.84 1204.55 2512.19 1202.54 cv
2508.34 1202.54 li
2534.51 1265.28 mo
2537.47 1270.94 2540.55 1276.51 2543.76 1281.98 cv
2547 1287.49 2550.36 1292.91 2553.88 1298.25 cv
2557.41 1303.63 2561.08 1308.93 2564.91 1314.17 cv
2568.76 1319.44 2572.76 1324.65 2576.92 1329.82 cv
2580.98 1329.82 li
2576.81 1324.65 2572.79 1319.44 2568.93 1314.17 cv
2565.09 1308.93 2561.41 1303.63 2557.86 1298.25 cv
2554.34 1292.91 2550.96 1287.49 2547.72 1281.98 cv
2544.49 1276.51 2541.4 1270.94 2538.44 1265.28 cv
2534.51 1265.28 li
2578.01 1331.17 mo
2582.23 1336.36 2586.62 1341.5 2591.17 1346.61 cv
2595.75 1351.75 2600.51 1356.86 2605.45 1361.95 cv
2610.42 1367.08 2615.58 1372.18 2620.94 1377.28 cv
2626.33 1382.43 2631.93 1387.56 2637.73 1392.71 cv
2641.98 1392.71 li
2636.16 1387.56 2630.55 1382.43 2625.14 1377.28 cv
2619.77 1372.18 2614.59 1367.08 2609.6 1361.95 cv
2604.64 1356.86 2599.87 1351.75 2595.27 1346.61 cv
2590.71 1341.5 2586.31 1336.36 2582.08 1331.17 cv
2578.01 1331.17 li
2639.28 1394.08 mo
2645.17 1399.27 2651.28 1404.48 2657.61 1409.71 cv
2663.99 1414.99 2670.61 1420.3 2677.46 1425.65 cv
2684.39 1431.06 2691.56 1436.51 2698.99 1442.02 cv
2706.49 1447.59 2714.27 1453.22 2722.32 1458.93 cv
2726.84 1458.94 li
2718.76 1453.22 2710.96 1447.59 2703.43 1442.02 cv
2695.98 1436.51 2688.79 1431.06 2681.84 1425.65 cv
2674.96 1420.3 2668.33 1414.99 2661.92 1409.71 cv
2655.57 1404.48 2649.45 1399.27 2643.54 1394.08 cv
2639.28 1394.08 li
2724.48 1460.46 mo
2732.68 1466.26 2741.18 1472.15 2749.98 1478.14 cv
2758.89 1484.2 2768.11 1490.38 2777.67 1496.68 cv
2787.35 1503.06 2797.38 1509.57 2807.77 1516.24 cv
2818.3 1523 2829.22 1529.93 2840.54 1537.03 cv
2845.42 1537.03 li
2834.07 1529.93 2823.12 1523 2812.55 1516.24 cv
2802.13 1509.57 2792.07 1503.06 2782.36 1496.68 cv
2772.77 1490.38 2763.52 1484.2 2754.58 1478.14 cv
2745.75 1472.15 2737.23 1466.26 2729 1460.46 cv
2724.48 1460.46 li
2843.52 1538.9 mo
2845.15 1539.93 2846.78 1540.95 2848.43 1541.98 cv
2850.08 1543.01 2851.74 1544.05 2853.4 1545.09 cv
2855.07 1546.13 2856.75 1547.17 2858.44 1548.22 cv
2860.13 1549.27 2861.83 1550.33 2863.54 1551.39 cv
2869.79 1555.27 2876.15 1559.21 2882.64 1563.2 cv
2889.19 1567.23 2895.86 1571.32 2902.65 1575.48 cv
2909.5 1579.67 2916.49 1583.92 2923.61 1588.25 cv
2930.79 1592.62 2938.11 1597.05 2945.57 1601.57 cv
2950.79 1601.57 li
2943.3 1597.05 2935.96 1592.62 2928.76 1588.25 cv
2921.61 1583.92 2914.61 1579.67 2907.73 1575.48 cv
2900.92 1571.32 2894.23 1567.23 2887.67 1563.2 cv
2881.16 1559.21 2874.77 1555.27 2868.5 1551.39 cv
2866.78 1550.33 2865.08 1549.27 2863.38 1548.22 cv
2861.69 1547.17 2860.01 1546.13 2858.33 1545.09 cv
2856.66 1544.05 2855 1543.01 2853.34 1541.98 cv
2851.69 1540.95 2850.05 1539.93 2848.42 1538.9 cv
2843.52 1538.9 li
2947.85 1602.95 mo
2956.67 1608.28 2965.69 1613.72 2974.91 1619.27 cv
2984.24 1624.89 2993.78 1630.62 3003.54 1636.48 cv
3013.42 1642.4 3023.52 1648.45 3033.87 1654.64 cv
3044.33 1660.91 3055.04 1667.31 3066.01 1673.87 cv
3071.61 1673.87 li
3060.61 1667.31 3049.86 1660.91 3039.36 1654.64 cv
3028.99 1648.45 3018.85 1642.4 3008.95 1636.48 cv
2999.15 1630.62 2989.58 1624.89 2980.22 1619.27 cv
2970.97 1613.72 2961.92 1608.28 2953.08 1602.95 cv
2947.85 1602.95 li
3068.95 1675.62 mo
3072.28 1677.61 3075.63 1679.62 3079.01 1681.64 cv
3082.4 1683.66 3085.82 1685.7 3089.26 1687.76 cv
3092.71 1689.82 3096.19 1691.9 3099.7 1693.99 cv
3103.21 1696.09 3106.75 1698.21 3110.32 1700.34 cv
3117.03 1704.34 3123.82 1708.4 3130.72 1712.52 cv
3137.67 1716.67 3144.72 1720.88 3151.86 1725.16 cv
3159.07 1729.47 3166.38 1733.84 3173.79 1738.28 cv
3181.26 1742.75 3188.85 1747.3 3196.54 1751.91 cv
3196.66 1751.98 3196.78 1752.06 3196.91 1752.13 cv
3197.03 1752.2 3197.15 1752.28 3197.27 1752.35 cv
3197.39 1752.42 3197.52 1752.5 3197.64 1752.57 cv
3197.76 1752.64 3197.88 1752.72 3198 1752.79 cv
3204.02 1752.79 li
3203.89 1752.72 3203.77 1752.64 3203.65 1752.57 cv
3203.53 1752.5 3203.41 1752.42 3203.28 1752.35 cv
3203.16 1752.28 3203.04 1752.2 3202.92 1752.13 cv
3202.79 1752.06 3202.67 1751.98 3202.55 1751.91 cv
3194.83 1747.3 3187.23 1742.75 3179.73 1738.28 cv
3172.29 1733.84 3164.96 1729.47 3157.73 1725.16 cv
3150.56 1720.88 3143.49 1716.67 3136.52 1712.52 cv
3129.6 1708.4 3122.78 1704.34 3116.06 1700.34 cv
3112.48 1698.21 3108.93 1696.09 3105.4 1693.99 cv
3101.88 1691.9 3098.4 1689.82 3094.93 1687.76 cv
3091.48 1685.7 3088.05 1683.66 3084.65 1681.64 cv
3081.26 1679.62 3077.89 1677.61 3074.55 1675.62 cv
3068.95 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2838.44 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2838.44 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2344.1 -21.4822 mo
2344.1 -21.3878 2344.09 -21.294 2344.09 -21.2002 cv
2344.08 -21.1058 2344.08 -21.0119 2344.07 -20.9181 cv
2344.07 -20.8243 2344.06 -20.7299 2344.06 -20.6361 cv
2344.05 -20.5422 2344.05 -20.4484 2344.04 -20.3546 cv
2343.65 -12.7937 2343.25 -5.28997 2342.86 2.15484 cv
2342.46 9.59484 2342.07 16.9759 2341.69 24.298 cv
2341.3 31.6141 2340.91 38.8713 2340.53 46.0677 cv
2340.15 53.2594 2339.78 60.3902 2339.4 67.4598 cv
2339.28 69.7848 2339.16 72.105 2339.03 74.421 cv
2338.91 76.7359 2338.79 79.0465 2338.67 81.3523 cv
2338.54 83.658 2338.42 85.9584 2338.3 88.2546 cv
2338.18 90.5502 2338.06 92.8415 2337.94 95.1275 cv
2341.79 95.1281 li
2341.91 92.8415 2342.03 90.5502 2342.15 88.2546 cv
2342.27 85.9584 2342.39 83.658 2342.52 81.3523 cv
2342.64 79.0465 2342.76 76.7359 2342.89 74.421 cv
2343.01 72.105 2343.13 69.7848 2343.25 67.4598 cv
2343.63 60.3902 2344.01 53.2594 2344.39 46.0677 cv
2344.77 38.8713 2345.16 31.6141 2345.55 24.298 cv
2345.94 16.9759 2346.33 9.59484 2346.72 2.15484 cv
2347.12 -5.28997 2347.52 -12.7937 2347.92 -20.3546 cv
2347.92 -20.4484 2347.93 -20.5422 2347.93 -20.6361 cv
2347.94 -20.7299 2347.94 -20.8243 2347.95 -20.9181 cv
2347.95 -21.0119 2347.96 -21.1058 2347.96 -21.2002 cv
2347.97 -21.294 2347.97 -21.3878 2347.98 -21.4822 cv
2344.1 -21.4816 li
2337.71 99.4191 mo
2336.86 115.562 2336.02 131.475 2335.19 147.162 cv
2334.36 162.824 2333.55 178.26 2332.75 193.475 cv
2331.95 208.667 2331.17 223.638 2330.4 238.392 cv
2329.63 253.125 2328.87 267.641 2328.13 281.945 cv
2331.95 281.945 li
2332.69 267.641 2333.45 253.125 2334.22 238.392 cv
2334.99 223.638 2335.78 208.667 2336.58 193.475 cv
2337.38 178.26 2338.2 162.824 2339.03 147.162 cv
2339.86 131.475 2340.7 115.562 2341.56 99.4191 cv
2337.71 99.4191 li
2327.94 285.731 mo
2327.2 299.976 2326.48 314.011 2325.78 327.837 cv
2325.07 341.645 2324.38 355.247 2323.71 368.646 cv
2323.04 382.028 2322.38 395.208 2321.74 408.19 cv
2321.1 421.157 2320.48 433.926 2319.87 446.501 cv
2323.66 446.502 li
2324.26 433.926 2324.89 421.157 2325.53 408.19 cv
2326.17 395.208 2326.83 382.028 2327.51 368.646 cv
2328.18 355.247 2328.87 341.645 2329.58 327.837 cv
2330.29 314.011 2331.01 299.976 2331.75 285.731 cv
2327.94 285.732 li
2319.72 449.769 mo
2319.11 462.3 2318.53 474.639 2317.96 486.789 cv
2317.39 498.926 2316.85 510.875 2316.31 522.64 cv
2315.78 534.392 2315.27 545.962 2314.78 557.352 cv
2314.28 568.731 2313.81 579.931 2313.35 590.955 cv
2317.11 590.956 li
2317.57 579.931 2318.05 568.731 2318.54 557.352 cv
2319.04 545.962 2319.55 534.392 2320.08 522.64 cv
2320.62 510.875 2321.17 498.926 2321.74 486.789 cv
2322.31 474.639 2322.89 462.3 2323.5 449.769 cv
2319.72 449.769 li
2313.24 593.822 mo
2312.79 604.801 2312.35 615.607 2311.94 626.242 cv
2311.53 636.869 2311.14 647.326 2310.76 657.616 cv
2310.39 667.9 2310.04 678.018 2309.71 687.975 cv
2309.38 697.924 2309.07 707.714 2308.78 717.345 cv
2312.52 717.345 li
2312.81 707.714 2313.12 697.924 2313.46 687.975 cv
2313.79 678.018 2314.14 667.9 2314.51 657.616 cv
2314.89 647.326 2315.28 636.869 2315.69 626.242 cv
2316.11 615.607 2316.54 604.801 2317 593.822 cv
2313.24 593.823 li
2308.71 719.895 mo
2308.42 729.493 2308.16 738.935 2307.92 748.223 cv
2307.68 757.508 2307.46 766.639 2307.26 775.622 cv
2307.07 784.602 2306.89 793.434 2306.74 802.12 cv
2306.59 810.804 2306.47 819.345 2306.36 827.744 cv
2310.1 827.745 li
2310.2 819.345 2310.33 810.804 2310.48 802.12 cv
2310.63 793.434 2310.8 784.602 2311 775.622 cv
2311.2 766.639 2311.42 757.508 2311.66 748.223 cv
2311.9 738.935 2312.16 729.493 2312.45 719.895 cv
2308.71 719.895 li
2306.34 829.928 mo
2306.24 838.304 2306.16 846.541 2306.11 854.641 cv
2306.06 862.741 2306.04 870.705 2306.04 878.536 cv
2306.03 886.367 2306.06 894.067 2306.11 901.638 cv
2306.16 909.209 2306.23 916.653 2306.34 923.973 cv
2310.07 923.973 li
2309.97 916.653 2309.89 909.209 2309.84 901.638 cv
2309.79 894.067 2309.77 886.367 2309.77 878.536 cv
2309.77 870.705 2309.79 862.741 2309.85 854.641 cv
2309.9 846.541 2309.97 838.304 2310.07 829.928 cv
2306.34 829.928 li
2306.36 925.877 mo
2306.47 933.173 2306.6 940.345 2306.77 947.397 cv
2306.93 954.452 2307.11 961.387 2307.33 968.205 cv
2307.55 975.026 2307.79 981.731 2308.06 988.324 cv
2308.33 994.919 2308.63 1001.4 2308.97 1007.78 cv
2312.71 1007.78 li
2312.38 1001.4 2312.07 994.919 2311.8 988.324 cv
2311.53 981.731 2311.28 975.026 2311.07 968.205 cv
2310.85 961.387 2310.66 954.452 2310.5 947.397 cv
2310.34 940.345 2310.21 933.173 2310.1 925.877 cv
2306.36 925.877 li
2309.05 1009.47 mo
2309.39 1015.83 2309.75 1022.08 2310.15 1028.22 cv
2310.55 1034.38 2310.97 1040.42 2311.43 1046.37 cv
2311.89 1052.32 2312.38 1058.17 2312.9 1063.92 cv
2313.42 1069.68 2313.97 1075.34 2314.56 1080.91 cv
2318.32 1080.91 li
2317.73 1075.34 2317.18 1069.68 2316.66 1063.92 cv
2316.13 1058.17 2315.64 1052.32 2315.18 1046.37 cv
2314.72 1040.42 2314.3 1034.38 2313.9 1028.22 cv
2313.5 1022.08 2313.13 1015.83 2312.8 1009.47 cv
2309.05 1009.47 li
2314.72 1082.38 mo
2315.31 1087.94 2315.93 1093.4 2316.59 1098.78 cv
2317.25 1104.16 2317.95 1109.45 2318.68 1114.65 cv
2319.41 1119.86 2320.17 1124.99 2320.98 1130.03 cv
2321.78 1135.08 2322.62 1140.05 2323.49 1144.93 cv
2327.29 1144.93 li
2326.41 1140.05 2325.57 1135.08 2324.76 1130.03 cv
2323.96 1124.99 2323.19 1119.86 2322.46 1114.65 cv
2321.73 1109.45 2321.03 1104.16 2320.37 1098.78 cv
2319.7 1093.4 2319.07 1087.94 2318.48 1082.38 cv
2314.72 1082.38 li
2323.72 1146.21 mo
2324.6 1151.09 2325.52 1155.89 2326.48 1160.62 cv
2327.44 1165.36 2328.44 1170.02 2329.48 1174.61 cv
2330.52 1179.21 2331.6 1183.73 2332.72 1188.19 cv
2333.84 1192.66 2335 1197.06 2336.21 1201.39 cv
2340.05 1201.39 li
2338.84 1197.06 2337.67 1192.66 2336.55 1188.19 cv
2335.42 1183.73 2334.34 1179.21 2333.3 1174.61 cv
2332.25 1170.02 2331.25 1165.36 2330.29 1160.62 cv
2329.33 1155.89 2328.4 1151.09 2327.52 1146.21 cv
2323.72 1146.21 li
2336.53 1202.54 mo
2337.09 1204.55 2337.66 1206.54 2338.24 1208.52 cv
2338.83 1210.51 2339.42 1212.47 2340.02 1214.43 cv
2340.62 1216.39 2341.23 1218.33 2341.85 1220.27 cv
2342.47 1222.2 2343.1 1224.12 2343.74 1226.03 cv
2344.84 1229.3 2345.96 1232.53 2347.11 1235.73 cv
2348.27 1238.94 2349.45 1242.11 2350.67 1245.25 cv
2351.89 1248.39 2353.13 1251.51 2354.41 1254.59 cv
2355.69 1257.68 2357.01 1260.75 2358.35 1263.78 cv
2362.27 1263.78 li
2360.93 1260.75 2359.61 1257.68 2358.32 1254.59 cv
2357.04 1251.51 2355.79 1248.39 2354.56 1245.25 cv
2353.34 1242.11 2352.15 1238.94 2350.99 1235.73 cv
2349.84 1232.53 2348.71 1229.3 2347.61 1226.03 cv
2346.97 1224.12 2346.34 1222.2 2345.71 1220.27 cv
2345.09 1218.33 2344.48 1216.39 2343.87 1214.43 cv
2343.27 1212.47 2342.68 1210.51 2342.09 1208.52 cv
2341.51 1206.54 2340.94 1204.55 2340.37 1202.54 cv
2336.53 1202.54 li
2359.02 1265.28 mo
2361.56 1270.94 2364.2 1276.51 2366.97 1281.98 cv
2369.75 1287.49 2372.64 1292.91 2375.66 1298.25 cv
2378.7 1303.63 2381.85 1308.93 2385.14 1314.17 cv
2388.45 1319.44 2391.89 1324.65 2395.47 1329.82 cv
2399.53 1329.82 li
2395.94 1324.65 2392.48 1319.44 2389.16 1314.17 cv
2385.86 1308.93 2382.69 1303.63 2379.65 1298.25 cv
2376.62 1292.91 2373.71 1287.49 2370.92 1281.98 cv
2368.15 1276.51 2365.49 1270.94 2362.95 1265.28 cv
2359.02 1265.28 li
2396.41 1331.17 mo
2400.03 1336.36 2403.8 1341.5 2407.71 1346.61 cv
2411.65 1351.75 2415.74 1356.86 2419.98 1361.95 cv
2424.26 1367.08 2428.69 1372.18 2433.29 1377.28 cv
2437.93 1382.43 2442.74 1387.56 2447.73 1392.71 cv
2451.98 1392.71 li
2446.97 1387.56 2442.15 1382.43 2437.49 1377.28 cv
2432.88 1372.18 2428.42 1367.08 2424.13 1361.95 cv
2419.87 1356.86 2415.77 1351.75 2411.81 1346.61 cv
2407.89 1341.5 2404.11 1336.36 2400.47 1331.17 cv
2396.41 1331.17 li
2449.06 1394.08 mo
2454.12 1399.27 2459.37 1404.48 2464.81 1409.71 cv
2470.3 1414.99 2475.98 1420.3 2481.88 1425.65 cv
2487.83 1431.06 2493.99 1436.51 2500.37 1442.02 cv
2506.82 1447.59 2513.51 1453.22 2520.43 1458.93 cv
2524.94 1458.94 li
2518 1453.22 2511.29 1447.59 2504.82 1442.02 cv
2498.41 1436.51 2492.22 1431.06 2486.25 1425.65 cv
2480.34 1420.3 2474.63 1414.99 2469.12 1409.71 cv
2463.66 1404.48 2458.4 1399.27 2453.31 1394.08 cv
2449.06 1394.08 li
2522.28 1460.46 mo
2529.33 1466.26 2536.63 1472.15 2544.2 1478.14 cv
2551.85 1484.2 2559.78 1490.38 2567.99 1496.68 cv
2576.31 1503.06 2584.93 1509.57 2593.86 1516.24 cv
2602.92 1523 2612.3 1529.93 2622.02 1537.03 cv
2626.91 1537.03 li
2617.15 1529.93 2607.74 1523 2598.65 1516.24 cv
2589.68 1509.57 2581.03 1503.06 2572.68 1496.68 cv
2564.44 1490.38 2556.48 1484.2 2548.8 1478.14 cv
2541.21 1472.15 2533.88 1466.26 2526.8 1460.46 cv
2522.28 1460.46 li
2624.59 1538.9 mo
2625.99 1539.93 2627.39 1540.95 2628.81 1541.98 cv
2630.23 1543.01 2631.65 1544.05 2633.08 1545.09 cv
2634.52 1546.13 2635.96 1547.17 2637.41 1548.22 cv
2638.86 1549.27 2640.32 1550.33 2641.79 1551.39 cv
2647.16 1555.27 2652.64 1559.21 2658.21 1563.2 cv
2663.84 1567.23 2669.57 1571.32 2675.41 1575.48 cv
2681.3 1579.67 2687.3 1583.92 2693.42 1588.25 cv
2699.59 1592.62 2705.88 1597.05 2712.29 1601.57 cv
2717.51 1601.57 li
2711.08 1597.05 2704.76 1592.62 2698.57 1588.25 cv
2692.43 1583.92 2686.4 1579.67 2680.49 1575.48 cv
2674.63 1571.32 2668.88 1567.23 2663.23 1563.2 cv
2657.64 1559.21 2652.14 1555.27 2646.75 1551.39 cv
2645.28 1550.33 2643.81 1549.27 2642.35 1548.22 cv
2640.9 1547.17 2639.45 1546.13 2638.01 1545.09 cv
2636.57 1544.05 2635.14 1543.01 2633.72 1541.98 cv
2632.3 1540.95 2630.89 1539.93 2629.48 1538.9 cv
2624.59 1538.9 li
2714.25 1602.95 mo
2721.83 1608.28 2729.58 1613.72 2737.51 1619.27 cv
2745.53 1624.89 2753.73 1630.62 2762.12 1636.48 cv
2770.6 1642.4 2779.29 1648.45 2788.18 1654.64 cv
2797.17 1660.91 2806.38 1667.31 2815.8 1673.87 cv
2821.4 1673.87 li
2811.94 1667.31 2802.7 1660.91 2793.67 1654.64 cv
2784.75 1648.45 2776.04 1642.4 2767.52 1636.48 cv
2759.1 1630.62 2750.87 1624.89 2742.82 1619.27 cv
2734.86 1613.72 2727.09 1608.28 2719.48 1602.95 cv
2714.25 1602.95 li
2818.33 1675.62 mo
2821.19 1677.61 2824.07 1679.62 2826.98 1681.64 cv
2829.89 1683.66 2832.83 1685.7 2835.78 1687.76 cv
2838.75 1689.82 2841.74 1691.9 2844.75 1693.99 cv
2847.78 1696.09 2850.82 1698.21 2853.89 1700.34 cv
2859.65 1704.34 2865.49 1708.4 2871.42 1712.52 cv
2877.39 1716.67 2883.44 1720.88 2889.59 1725.16 cv
2895.78 1729.47 2902.06 1733.84 2908.43 1738.28 cv
2914.86 1742.75 2921.37 1747.3 2927.98 1751.91 cv
2928.09 1751.98 2928.19 1752.06 2928.3 1752.13 cv
2928.4 1752.2 2928.51 1752.28 2928.61 1752.35 cv
2928.72 1752.42 2928.82 1752.5 2928.93 1752.57 cv
2929.03 1752.64 2929.14 1752.72 2929.24 1752.79 cv
2935.26 1752.79 li
2935.15 1752.72 2935.04 1752.64 2934.94 1752.57 cv
2934.83 1752.5 2934.73 1752.42 2934.62 1752.35 cv
2934.52 1752.28 2934.41 1752.2 2934.31 1752.13 cv
2934.2 1752.06 2934.1 1751.98 2933.99 1751.91 cv
2927.36 1747.3 2920.82 1742.75 2914.37 1738.28 cv
2907.97 1733.84 2901.67 1729.47 2895.46 1725.16 cv
2889.29 1720.88 2883.21 1716.67 2877.22 1712.52 cv
2871.27 1708.4 2865.41 1704.34 2859.62 1700.34 cv
2856.55 1698.21 2853.49 1696.09 2850.46 1693.99 cv
2847.43 1691.9 2844.43 1689.82 2841.46 1687.76 cv
2838.49 1685.7 2835.54 1683.66 2832.62 1681.64 cv
2829.7 1679.62 2826.81 1677.61 2823.93 1675.62 cv
2818.33 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2620.65 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2620.65 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2170.98 -21.4822 mo
2170.97 -21.3878 2170.97 -21.294 2170.96 -21.2002 cv
2170.96 -21.1058 2170.96 -21.0119 2170.95 -20.9181 cv
2170.95 -20.8243 2170.94 -20.7299 2170.94 -20.6361 cv
2170.94 -20.5422 2170.93 -20.4484 2170.93 -20.3546 cv
2170.59 -12.7937 2170.26 -5.28997 2169.93 2.15484 cv
2169.6 9.59484 2169.28 16.9759 2168.95 24.298 cv
2168.63 31.6141 2168.31 38.8713 2167.99 46.0677 cv
2167.67 53.2594 2167.36 60.3902 2167.04 67.4598 cv
2166.94 69.7848 2166.84 72.105 2166.74 74.421 cv
2166.63 76.7359 2166.53 79.0465 2166.43 81.3523 cv
2166.33 83.658 2166.22 85.9584 2166.12 88.2546 cv
2166.02 90.5502 2165.92 92.8415 2165.82 95.1275 cv
2169.74 95.1281 li
2169.84 92.8415 2169.94 90.5502 2170.04 88.2546 cv
2170.14 85.9584 2170.25 83.658 2170.35 81.3523 cv
2170.45 79.0465 2170.55 76.7359 2170.66 74.421 cv
2170.76 72.105 2170.86 69.7848 2170.97 67.4598 cv
2171.28 60.3902 2171.6 53.2594 2171.92 46.0677 cv
2172.24 38.8713 2172.56 31.6141 2172.89 24.298 cv
2173.21 16.9759 2173.54 9.59484 2173.87 2.15484 cv
2174.2 -5.28997 2174.53 -12.7937 2174.87 -20.3546 cv
2174.87 -20.4484 2174.88 -20.5422 2174.88 -20.6361 cv
2174.88 -20.7299 2174.89 -20.8243 2174.89 -20.9181 cv
2174.9 -21.0119 2174.9 -21.1058 2174.91 -21.2002 cv
2174.91 -21.294 2174.91 -21.3878 2174.92 -21.4822 cv
2170.98 -21.4816 li
2165.63 99.4191 mo
2164.92 115.562 2164.21 131.475 2163.52 147.162 cv
2162.83 162.824 2162.15 178.26 2161.48 193.475 cv
2160.81 208.667 2160.16 223.638 2159.51 238.392 cv
2158.87 253.125 2158.24 267.641 2157.62 281.945 cv
2161.5 281.945 li
2162.12 267.641 2162.76 253.125 2163.4 238.392 cv
2164.05 223.638 2164.71 208.667 2165.38 193.475 cv
2166.05 178.26 2166.73 162.824 2167.43 147.162 cv
2168.12 131.475 2168.83 115.562 2169.55 99.4191 cv
2165.63 99.4191 li
2157.46 285.731 mo
2156.84 299.976 2156.24 314.011 2155.65 327.837 cv
2155.06 341.645 2154.48 355.247 2153.92 368.646 cv
2153.36 382.028 2152.81 395.208 2152.27 408.19 cv
2151.74 421.157 2151.22 433.926 2150.71 446.501 cv
2154.56 446.502 li
2155.07 433.926 2155.59 421.157 2156.13 408.19 cv
2156.67 395.208 2157.22 382.028 2157.78 368.646 cv
2158.35 355.247 2158.93 341.645 2159.52 327.837 cv
2160.11 314.011 2160.72 299.976 2161.34 285.731 cv
2157.46 285.732 li
2150.58 449.769 mo
2150.08 462.3 2149.59 474.639 2149.11 486.789 cv
2148.64 498.926 2148.18 510.875 2147.73 522.64 cv
2147.29 534.392 2146.86 545.962 2146.45 557.352 cv
2146.04 568.731 2145.64 579.931 2145.26 590.955 cv
2149.09 590.956 li
2149.47 579.931 2149.87 568.731 2150.28 557.352 cv
2150.7 545.962 2151.13 534.392 2151.57 522.64 cv
2152.02 510.875 2152.48 498.926 2152.96 486.789 cv
2153.43 474.639 2153.92 462.3 2154.43 449.769 cv
2150.58 449.769 li
2145.16 593.822 mo
2144.78 604.801 2144.42 615.607 2144.08 626.242 cv
2143.73 636.869 2143.4 647.326 2143.09 657.616 cv
2142.78 667.9 2142.49 678.018 2142.21 687.975 cv
2141.93 697.924 2141.68 707.714 2141.43 717.345 cv
2145.24 717.345 li
2145.49 707.714 2145.75 697.924 2146.02 687.975 cv
2146.3 678.018 2146.6 667.9 2146.91 657.616 cv
2147.22 647.326 2147.55 636.869 2147.9 626.242 cv
2148.24 615.607 2148.61 604.801 2148.99 593.822 cv
2145.16 593.823 li
2141.37 719.895 mo
2141.13 729.493 2140.91 738.935 2140.71 748.223 cv
2140.51 757.508 2140.33 766.639 2140.16 775.622 cv
2140 784.602 2139.86 793.434 2139.73 802.12 cv
2139.6 810.804 2139.5 819.345 2139.41 827.744 cv
2143.21 827.745 li
2143.3 819.345 2143.41 810.804 2143.53 802.12 cv
2143.66 793.434 2143.8 784.602 2143.97 775.622 cv
2144.13 766.639 2144.32 757.508 2144.52 748.223 cv
2144.72 738.935 2144.94 729.493 2145.18 719.895 cv
2141.37 719.895 li
2139.39 829.928 mo
2139.31 838.304 2139.25 846.541 2139.2 854.641 cv
2139.16 862.741 2139.14 870.705 2139.14 878.536 cv
2139.14 886.367 2139.16 894.067 2139.2 901.638 cv
2139.24 909.209 2139.3 916.653 2139.39 923.973 cv
2143.19 923.973 li
2143.1 916.653 2143.04 909.209 2143 901.638 cv
2142.96 894.067 2142.94 886.367 2142.94 878.536 cv
2142.94 870.705 2142.96 862.741 2143 854.641 cv
2143.04 846.541 2143.11 838.304 2143.19 829.928 cv
2139.39 829.928 li
2139.41 925.877 mo
2139.5 933.173 2139.61 940.345 2139.75 947.397 cv
2139.88 954.452 2140.04 961.387 2140.22 968.205 cv
2140.4 975.026 2140.6 981.731 2140.83 988.324 cv
2141.06 994.919 2141.31 1001.4 2141.59 1007.78 cv
2145.4 1007.78 li
2145.12 1001.4 2144.87 994.919 2144.64 988.324 cv
2144.41 981.731 2144.2 975.026 2144.02 968.205 cv
2143.84 961.387 2143.68 954.452 2143.55 947.397 cv
2143.41 940.345 2143.3 933.173 2143.21 925.877 cv
2139.41 925.877 li
2141.66 1009.47 mo
2141.94 1015.83 2142.25 1022.08 2142.58 1028.22 cv
2142.91 1034.38 2143.27 1040.42 2143.65 1046.37 cv
2144.03 1052.32 2144.44 1058.17 2144.88 1063.92 cv
2145.31 1069.68 2145.78 1075.34 2146.27 1080.91 cv
2150.1 1080.91 li
2149.6 1075.34 2149.14 1069.68 2148.7 1063.92 cv
2148.26 1058.17 2147.85 1052.32 2147.47 1046.37 cv
2147.08 1040.42 2146.73 1034.38 2146.39 1028.22 cv
2146.06 1022.08 2145.75 1015.83 2145.47 1009.47 cv
2141.66 1009.47 li
2146.4 1082.38 mo
2146.89 1087.94 2147.42 1093.4 2147.97 1098.78 cv
2148.52 1104.16 2149.1 1109.45 2149.71 1114.65 cv
2150.32 1119.86 2150.96 1124.99 2151.63 1130.03 cv
2152.3 1135.08 2153 1140.05 2153.74 1144.93 cv
2157.6 1144.93 li
2156.87 1140.05 2156.16 1135.08 2155.49 1130.03 cv
2154.81 1124.99 2154.17 1119.86 2153.56 1114.65 cv
2152.95 1109.45 2152.36 1104.16 2151.81 1098.78 cv
2151.25 1093.4 2150.73 1087.94 2150.23 1082.38 cv
2146.4 1082.38 li
2153.93 1146.21 mo
2154.67 1151.09 2155.44 1155.89 2156.24 1160.62 cv
2157.04 1165.36 2157.88 1170.02 2158.74 1174.61 cv
2159.61 1179.21 2160.52 1183.73 2161.45 1188.19 cv
2162.39 1192.66 2163.36 1197.06 2164.37 1201.39 cv
2168.28 1201.39 li
2167.27 1197.06 2166.29 1192.66 2165.35 1188.19 cv
2164.41 1183.73 2163.5 1179.21 2162.63 1174.61 cv
2161.76 1170.02 2160.92 1165.36 2160.11 1160.62 cv
2159.31 1155.89 2158.53 1151.09 2157.79 1146.21 cv
2153.93 1146.21 li
2164.64 1202.54 mo
2165.11 1204.55 2165.59 1206.54 2166.08 1208.52 cv
2166.56 1210.51 2167.06 1212.47 2167.56 1214.43 cv
2168.06 1216.39 2168.57 1218.33 2169.09 1220.27 cv
2169.61 1222.2 2170.14 1224.12 2170.67 1226.03 cv
2171.59 1229.3 2172.53 1232.53 2173.49 1235.73 cv
2174.46 1238.94 2175.45 1242.11 2176.47 1245.25 cv
2177.48 1248.39 2178.53 1251.51 2179.6 1254.59 cv
2180.67 1257.68 2181.77 1260.75 2182.89 1263.78 cv
2186.89 1263.78 li
2185.76 1260.75 2184.65 1257.68 2183.58 1254.59 cv
2182.5 1251.51 2181.45 1248.39 2180.43 1245.25 cv
2179.41 1242.11 2178.42 1238.94 2177.44 1235.73 cv
2176.48 1232.53 2175.53 1229.3 2174.61 1226.03 cv
2174.07 1224.12 2173.54 1222.2 2173.02 1220.27 cv
2172.5 1218.33 2171.99 1216.39 2171.48 1214.43 cv
2170.98 1212.47 2170.48 1210.51 2170 1208.52 cv
2169.51 1206.54 2169.03 1204.55 2168.55 1202.54 cv
2164.64 1202.54 li
2183.45 1265.28 mo
2185.57 1270.94 2187.79 1276.51 2190.1 1281.98 cv
2192.42 1287.49 2194.85 1292.91 2197.37 1298.25 cv
2199.91 1303.63 2202.55 1308.93 2205.3 1314.17 cv
2208.07 1319.44 2210.94 1324.65 2213.94 1329.82 cv
2218.07 1329.82 li
2215.06 1324.65 2212.17 1319.44 2209.39 1314.17 cv
2206.63 1308.93 2203.98 1303.63 2201.43 1298.25 cv
2198.89 1292.91 2196.46 1287.49 2194.13 1281.98 cv
2191.8 1276.51 2189.58 1270.94 2187.45 1265.28 cv
2183.45 1265.28 li
2214.72 1331.17 mo
2217.75 1336.36 2220.9 1341.5 2224.18 1346.61 cv
2227.47 1351.75 2230.89 1356.86 2234.44 1361.95 cv
2238.02 1367.08 2241.73 1372.18 2245.57 1377.28 cv
2249.45 1382.43 2253.47 1387.56 2257.64 1392.71 cv
2261.97 1392.71 li
2257.78 1387.56 2253.74 1382.43 2249.85 1377.28 cv
2245.98 1372.18 2242.25 1367.08 2238.66 1361.95 cv
2235.1 1356.86 2231.66 1351.75 2228.35 1346.61 cv
2225.07 1341.5 2221.9 1336.36 2218.86 1331.17 cv
2214.72 1331.17 li
2258.76 1394.08 mo
2262.99 1399.27 2267.38 1404.48 2271.93 1409.71 cv
2276.52 1414.99 2281.28 1420.3 2286.21 1425.65 cv
2291.18 1431.06 2296.34 1436.51 2301.67 1442.02 cv
2307.07 1447.59 2312.66 1453.22 2318.45 1458.93 cv
2323.04 1458.94 li
2317.23 1453.22 2311.62 1447.59 2306.2 1442.02 cv
2300.83 1436.51 2295.66 1431.06 2290.66 1425.65 cv
2285.71 1420.3 2280.93 1414.99 2276.32 1409.71 cv
2271.75 1404.48 2267.34 1399.27 2263.09 1394.08 cv
2258.76 1394.08 li
2320 1460.46 mo
2325.9 1466.26 2332 1472.15 2338.33 1478.14 cv
2344.73 1484.2 2351.36 1490.38 2358.23 1496.68 cv
2365.19 1503.06 2372.4 1509.57 2379.87 1516.24 cv
2387.44 1523 2395.29 1529.93 2403.42 1537.03 cv
2408.4 1537.03 li
2400.23 1529.93 2392.34 1523 2384.74 1516.24 cv
2377.23 1509.57 2369.99 1503.06 2363 1496.68 cv
2356.1 1490.38 2349.44 1484.2 2343.01 1478.14 cv
2336.66 1472.15 2330.53 1466.26 2324.6 1460.46 cv
2320 1460.46 li
2405.56 1538.9 mo
2406.73 1539.93 2407.91 1540.95 2409.09 1541.98 cv
2410.28 1543.01 2411.47 1544.05 2412.67 1545.09 cv
2413.87 1546.13 2415.08 1547.17 2416.29 1548.22 cv
2417.5 1549.27 2418.72 1550.33 2419.95 1551.39 cv
2424.45 1555.27 2429.02 1559.21 2433.69 1563.2 cv
2438.39 1567.23 2443.18 1571.32 2448.07 1575.48 cv
2452.99 1579.67 2458.01 1583.92 2463.13 1588.25 cv
2468.29 1592.62 2473.55 1597.05 2478.92 1601.57 cv
2484.23 1601.57 li
2478.84 1597.05 2473.56 1592.62 2468.37 1588.25 cv
2463.23 1583.92 2458.19 1579.67 2453.24 1575.48 cv
2448.34 1571.32 2443.52 1567.23 2438.8 1563.2 cv
2434.11 1559.21 2429.51 1555.27 2425 1551.39 cv
2423.77 1550.33 2422.54 1549.27 2421.32 1548.22 cv
2420.1 1547.17 2418.89 1546.13 2417.69 1545.09 cv
2416.48 1544.05 2415.29 1543.01 2414.1 1541.98 cv
2412.91 1540.95 2411.72 1539.93 2410.55 1538.9 cv
2405.56 1538.9 li
2480.56 1602.95 mo
2486.9 1608.28 2493.38 1613.72 2500.01 1619.27 cv
2506.71 1624.89 2513.57 1630.62 2520.59 1636.48 cv
2527.69 1642.4 2534.95 1648.45 2542.39 1654.64 cv
2549.91 1660.91 2557.61 1667.31 2565.49 1673.87 cv
2571.19 1673.87 li
2563.27 1667.31 2555.54 1660.91 2547.98 1654.64 cv
2540.51 1648.45 2533.22 1642.4 2526.09 1636.48 cv
2519.04 1630.62 2512.15 1624.89 2505.42 1619.27 cv
2498.76 1613.72 2492.24 1608.28 2485.88 1602.95 cv
2480.56 1602.95 li
2567.6 1675.62 mo
2570 1677.61 2572.41 1679.62 2574.84 1681.64 cv
2577.27 1683.66 2579.73 1685.7 2582.2 1687.76 cv
2584.68 1689.82 2587.19 1691.9 2589.7 1693.99 cv
2592.23 1696.09 2594.78 1698.21 2597.34 1700.34 cv
2602.16 1704.34 2607.05 1708.4 2612 1712.52 cv
2617 1716.67 2622.06 1720.88 2627.2 1725.16 cv
2632.38 1729.47 2637.63 1733.84 2642.96 1738.28 cv
2648.34 1742.75 2653.79 1747.3 2659.31 1751.91 cv
2659.4 1751.98 2659.49 1752.06 2659.58 1752.13 cv
2659.67 1752.2 2659.75 1752.28 2659.84 1752.35 cv
2659.93 1752.42 2660.02 1752.5 2660.1 1752.57 cv
2660.19 1752.64 2660.28 1752.72 2660.37 1752.79 cv
2666.49 1752.79 li
2666.4 1752.72 2666.31 1752.64 2666.22 1752.57 cv
2666.14 1752.5 2666.05 1752.42 2665.96 1752.35 cv
2665.87 1752.28 2665.78 1752.2 2665.69 1752.13 cv
2665.61 1752.06 2665.52 1751.98 2665.43 1751.91 cv
2659.88 1747.3 2654.4 1742.75 2649.01 1738.28 cv
2643.65 1733.84 2638.38 1729.47 2633.17 1725.16 cv
2628.01 1720.88 2622.92 1716.67 2617.91 1712.52 cv
2612.93 1708.4 2608.02 1704.34 2603.18 1700.34 cv
2600.61 1698.21 2598.05 1696.09 2595.51 1693.99 cv
2592.98 1691.9 2590.47 1689.82 2587.97 1687.76 cv
2585.49 1685.7 2583.02 1683.66 2580.57 1681.64 cv
2578.13 1679.62 2575.71 1677.61 2573.31 1675.62 cv
2567.6 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2402.81 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2402.81 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1997.92 -21.4822 mo
1997.92 -21.3878 1997.92 -21.294 1997.91 -21.2002 cv
1997.91 -21.1058 1997.91 -21.0119 1997.9 -20.9181 cv
1997.9 -20.8243 1997.9 -20.7299 1997.89 -20.6361 cv
1997.89 -20.5422 1997.89 -20.4484 1997.88 -20.3546 cv
1997.61 -12.7937 1997.35 -5.28997 1997.08 2.15484 cv
1996.82 9.59484 1996.56 16.9759 1996.3 24.298 cv
1996.04 31.6141 1995.78 38.8713 1995.52 46.0677 cv
1995.26 53.2594 1995.01 60.3902 1994.76 67.4598 cv
1994.68 69.7848 1994.59 72.105 1994.51 74.421 cv
1994.43 76.7359 1994.35 79.0465 1994.26 81.3523 cv
1994.18 83.658 1994.1 85.9584 1994.02 88.2546 cv
1993.94 90.5502 1993.86 92.8415 1993.77 95.1275 cv
1997.69 95.1281 li
1997.77 92.8415 1997.86 90.5502 1997.94 88.2546 cv
1998.02 85.9584 1998.1 83.658 1998.18 81.3523 cv
1998.27 79.0465 1998.35 76.7359 1998.43 74.421 cv
1998.51 72.105 1998.6 69.7848 1998.68 67.4598 cv
1998.93 60.3902 1999.19 53.2594 1999.45 46.0677 cv
1999.7 38.8713 1999.96 31.6141 2000.23 24.298 cv
2000.49 16.9759 2000.75 9.59484 2001.02 2.15484 cv
2001.28 -5.28997 2001.55 -12.7937 2001.82 -20.3546 cv
2001.83 -20.4484 2001.83 -20.5422 2001.83 -20.6361 cv
2001.84 -20.7299 2001.84 -20.8243 2001.84 -20.9181 cv
2001.85 -21.0119 2001.85 -21.1058 2001.85 -21.2002 cv
2001.86 -21.294 2001.86 -21.3878 2001.86 -21.4822 cv
1997.92 -21.4816 li
1993.62 99.4191 mo
1993.05 115.562 1992.48 131.475 1991.92 147.162 cv
1991.37 162.824 1990.82 178.26 1990.28 193.475 cv
1989.75 208.667 1989.22 223.638 1988.7 238.392 cv
1988.18 253.125 1987.68 267.641 1987.18 281.945 cv
1991.06 281.945 li
1991.56 267.641 1992.07 253.125 1992.59 238.392 cv
1993.11 223.638 1993.64 208.667 1994.18 193.475 cv
1994.72 178.26 1995.27 162.824 1995.83 147.162 cv
1996.39 131.475 1996.96 115.562 1997.54 99.4191 cv
1993.62 99.4191 li
1987.05 285.731 mo
1986.55 299.976 1986.07 314.011 1985.59 327.837 cv
1985.12 341.645 1984.65 355.247 1984.2 368.646 cv
1983.75 382.028 1983.31 395.208 1982.88 408.19 cv
1982.45 421.157 1982.03 433.926 1981.62 446.501 cv
1985.47 446.502 li
1985.88 433.926 1986.3 421.157 1986.73 408.19 cv
1987.17 395.208 1987.61 382.028 1988.07 368.646 cv
1988.52 355.247 1988.99 341.645 1989.46 327.837 cv
1989.94 314.011 1990.43 299.976 1990.93 285.731 cv
1987.05 285.732 li
1981.51 449.769 mo
1981.11 462.3 1980.72 474.639 1980.33 486.789 cv
1979.95 498.926 1979.58 510.875 1979.23 522.64 cv
1978.87 534.392 1978.52 545.962 1978.19 557.352 cv
1977.86 568.731 1977.54 579.931 1977.23 590.955 cv
1981.06 590.956 li
1981.37 579.931 1981.69 568.731 1982.02 557.352 cv
1982.36 545.962 1982.7 534.392 1983.06 522.64 cv
1983.42 510.875 1983.79 498.926 1984.18 486.789 cv
1984.56 474.639 1984.96 462.3 1985.36 449.769 cv
1981.51 449.769 li
1977.16 593.822 mo
1976.85 604.801 1976.56 615.607 1976.28 626.242 cv
1976.01 636.869 1975.74 647.326 1975.49 657.616 cv
1975.24 667.9 1975 678.018 1974.78 687.975 cv
1974.56 697.924 1974.35 707.714 1974.16 717.345 cv
1977.97 717.345 li
1978.16 707.714 1978.37 697.924 1978.59 687.975 cv
1978.82 678.018 1979.06 667.9 1979.31 657.616 cv
1979.56 647.326 1979.82 636.869 1980.1 626.242 cv
1980.38 615.607 1980.67 604.801 1980.98 593.822 cv
1977.15 593.823 li
1974.11 719.895 mo
1973.92 729.493 1973.74 738.935 1973.58 748.223 cv
1973.42 757.508 1973.27 766.639 1973.14 775.622 cv
1973 784.602 1972.89 793.434 1972.79 802.12 cv
1972.69 810.804 1972.6 819.345 1972.53 827.744 cv
1976.33 827.745 li
1976.4 819.345 1976.49 810.804 1976.59 802.12 cv
1976.69 793.434 1976.81 784.602 1976.94 775.622 cv
1977.07 766.639 1977.22 757.508 1977.38 748.223 cv
1977.54 738.935 1977.72 729.493 1977.92 719.895 cv
1974.11 719.895 li
1972.51 829.928 mo
1972.45 838.304 1972.4 846.541 1972.36 854.641 cv
1972.33 862.741 1972.31 870.705 1972.31 878.536 cv
1972.31 886.367 1972.33 894.067 1972.36 901.638 cv
1972.39 909.209 1972.44 916.653 1972.51 923.973 cv
1976.31 923.973 li
1976.24 916.653 1976.19 909.209 1976.16 901.638 cv
1976.12 894.067 1976.11 886.367 1976.11 878.536 cv
1976.11 870.705 1976.13 862.741 1976.16 854.641 cv
1976.2 846.541 1976.25 838.304 1976.31 829.928 cv
1972.51 829.928 li
1972.53 925.877 mo
1972.6 933.173 1972.69 940.345 1972.8 947.397 cv
1972.91 954.452 1973.04 961.387 1973.18 968.205 cv
1973.33 975.026 1973.49 981.731 1973.67 988.324 cv
1973.86 994.919 1974.06 1001.4 1974.28 1007.78 cv
1978.09 1007.78 li
1977.87 1001.4 1977.66 994.919 1977.48 988.324 cv
1977.29 981.731 1977.13 975.026 1976.98 968.205 cv
1976.84 961.387 1976.71 954.452 1976.6 947.397 cv
1976.49 940.345 1976.4 933.173 1976.33 925.877 cv
1972.53 925.877 li
1974.34 1009.47 mo
1974.57 1015.83 1974.81 1022.08 1975.08 1028.22 cv
1975.35 1034.38 1975.63 1040.42 1975.94 1046.37 cv
1976.25 1052.32 1976.58 1058.17 1976.93 1063.92 cv
1977.28 1069.68 1977.65 1075.34 1978.05 1080.91 cv
1981.88 1080.91 li
1981.48 1075.34 1981.1 1069.68 1980.75 1063.92 cv
1980.4 1058.17 1980.07 1052.32 1979.76 1046.37 cv
1979.45 1040.42 1979.16 1034.38 1978.89 1028.22 cv
1978.63 1022.08 1978.38 1015.83 1978.15 1009.47 cv
1974.34 1009.47 li
1978.15 1082.38 mo
1978.55 1087.94 1978.97 1093.4 1979.41 1098.78 cv
1979.86 1104.16 1980.33 1109.45 1980.82 1114.65 cv
1981.31 1119.86 1981.82 1124.99 1982.36 1130.03 cv
1982.9 1135.08 1983.47 1140.05 1984.05 1144.93 cv
1987.92 1144.93 li
1987.33 1140.05 1986.76 1135.08 1986.22 1130.03 cv
1985.67 1124.99 1985.16 1119.86 1984.66 1114.65 cv
1984.17 1109.45 1983.7 1104.16 1983.25 1098.78 cv
1982.81 1093.4 1982.38 1087.94 1981.98 1082.38 cv
1978.15 1082.38 li
1984.21 1146.21 mo
1984.8 1151.09 1985.42 1155.89 1986.07 1160.62 cv
1986.71 1165.36 1987.38 1170.02 1988.08 1174.61 cv
1988.78 1179.21 1989.51 1183.73 1990.26 1188.19 cv
1991.02 1192.66 1991.8 1197.06 1992.61 1201.39 cv
1996.52 1201.39 li
1995.71 1197.06 1994.92 1192.66 1994.16 1188.19 cv
1993.4 1183.73 1992.67 1179.21 1991.97 1174.61 cv
1991.27 1170.02 1990.59 1165.36 1989.94 1160.62 cv
1989.29 1155.89 1988.67 1151.09 1988.07 1146.21 cv
1984.21 1146.21 li
1992.83 1202.54 mo
1993.2 1204.55 1993.59 1206.54 1993.98 1208.52 cv
1994.37 1210.51 1994.77 1212.47 1995.17 1214.43 cv
1995.58 1216.39 1995.99 1218.33 1996.41 1220.27 cv
1996.82 1222.2 1997.25 1224.12 1997.68 1226.03 cv
1998.41 1229.3 1999.17 1232.53 1999.95 1235.73 cv
2000.72 1238.94 2001.52 1242.11 2002.34 1245.25 cv
2003.16 1248.39 2004 1251.51 2004.86 1254.59 cv
2005.72 1257.68 2006.6 1260.75 2007.51 1263.78 cv
2011.5 1263.78 li
2010.59 1260.75 2009.7 1257.68 2008.84 1254.59 cv
2007.97 1251.51 2007.13 1248.39 2006.3 1245.25 cv
2005.48 1242.11 2004.68 1238.94 2003.9 1235.73 cv
2003.12 1232.53 2002.36 1229.3 2001.62 1226.03 cv
2001.18 1224.12 2000.76 1222.2 2000.34 1220.27 cv
1999.92 1218.33 1999.51 1216.39 1999.1 1214.43 cv
1998.69 1212.47 1998.29 1210.51 1997.9 1208.52 cv
1997.51 1206.54 1997.12 1204.55 1996.74 1202.54 cv
1992.83 1202.54 li
2007.96 1265.28 mo
2009.66 1270.94 2011.45 1276.51 2013.31 1281.98 cv
2015.17 1287.49 2017.12 1292.91 2019.15 1298.25 cv
2021.2 1303.63 2023.32 1308.93 2025.53 1314.17 cv
2027.76 1319.44 2030.07 1324.65 2032.48 1329.82 cv
2036.61 1329.82 li
2034.19 1324.65 2031.87 1319.44 2029.63 1314.17 cv
2027.4 1308.93 2025.27 1303.63 2023.21 1298.25 cv
2021.17 1292.91 2019.21 1287.49 2017.33 1281.98 cv
2015.46 1276.51 2013.67 1270.94 2011.95 1265.28 cv
2007.96 1265.28 li
2033.11 1331.17 mo
2035.55 1336.36 2038.08 1341.5 2040.72 1346.61 cv
2043.37 1351.75 2046.12 1356.86 2048.97 1361.95 cv
2051.85 1367.08 2054.84 1372.18 2057.93 1377.28 cv
2061.05 1382.43 2064.29 1387.56 2067.64 1392.71 cv
2071.97 1392.71 li
2068.59 1387.56 2065.34 1382.43 2062.2 1377.28 cv
2059.09 1372.18 2056.09 1367.08 2053.2 1361.95 cv
2050.33 1356.86 2047.56 1351.75 2044.89 1346.61 cv
2042.25 1341.5 2039.7 1336.36 2037.25 1331.17 cv
2033.11 1331.17 li
2068.54 1394.08 mo
2071.94 1399.27 2075.47 1404.48 2079.13 1409.71 cv
2082.83 1414.99 2086.65 1420.3 2090.62 1425.65 cv
2094.62 1431.06 2098.77 1436.51 2103.06 1442.02 cv
2107.4 1447.59 2111.9 1453.22 2116.55 1458.93 cv
2121.15 1458.94 li
2116.47 1453.22 2111.95 1447.59 2107.58 1442.02 cv
2103.26 1436.51 2099.1 1431.06 2095.07 1425.65 cv
2091.08 1420.3 2087.24 1414.99 2083.52 1409.71 cv
2079.84 1404.48 2076.29 1399.27 2072.87 1394.08 cv
2068.54 1394.08 li
2117.8 1460.46 mo
2122.54 1466.26 2127.46 1472.15 2132.54 1478.14 cv
2137.7 1484.2 2143.03 1490.38 2148.56 1496.68 cv
2154.15 1503.06 2159.95 1509.57 2165.96 1516.24 cv
2172.05 1523 2178.37 1529.93 2184.91 1537.03 cv
2189.88 1537.03 li
2183.3 1529.93 2176.96 1523 2170.83 1516.24 cv
2164.79 1509.57 2158.96 1503.06 2153.33 1496.68 cv
2147.77 1490.38 2142.41 1484.2 2137.23 1478.14 cv
2132.11 1472.15 2127.17 1466.26 2122.4 1460.46 cv
2117.8 1460.46 li
2186.63 1538.9 mo
2187.57 1539.93 2188.52 1540.95 2189.47 1541.98 cv
2190.43 1543.01 2191.38 1544.05 2192.35 1545.09 cv
2193.31 1546.13 2194.28 1547.17 2195.26 1548.22 cv
2196.24 1549.27 2197.22 1550.33 2198.21 1551.39 cv
2201.82 1555.27 2205.5 1559.21 2209.26 1563.2 cv
2213.04 1567.23 2216.9 1571.32 2220.82 1575.48 cv
2224.79 1579.67 2228.83 1583.92 2232.94 1588.25 cv
2237.09 1592.62 2241.33 1597.05 2245.64 1601.57 cv
2250.95 1601.57 li
2246.61 1597.05 2242.36 1592.62 2238.18 1588.25 cv
2234.04 1583.92 2229.98 1579.67 2226 1575.48 cv
2222.05 1571.32 2218.17 1567.23 2214.37 1563.2 cv
2210.59 1559.21 2206.89 1555.27 2203.26 1551.39 cv
2202.26 1550.33 2201.28 1549.27 2200.29 1548.22 cv
2199.31 1547.17 2198.34 1546.13 2197.36 1545.09 cv
2196.4 1544.05 2195.43 1543.01 2194.47 1541.98 cv
2193.52 1540.95 2192.56 1539.93 2191.62 1538.9 cv
2186.63 1538.9 li
2246.96 1602.95 mo
2252.06 1608.28 2257.27 1613.72 2262.61 1619.27 cv
2268 1624.89 2273.52 1630.62 2279.16 1636.48 cv
2284.87 1642.4 2290.72 1648.45 2296.7 1654.64 cv
2302.75 1660.91 2308.94 1667.31 2315.28 1673.87 cv
2320.98 1673.87 li
2314.6 1667.31 2308.38 1660.91 2302.29 1654.64 cv
2296.28 1648.45 2290.4 1642.4 2284.66 1636.48 cv
2278.98 1630.62 2273.44 1624.89 2268.01 1619.27 cv
2262.65 1613.72 2257.41 1608.28 2252.28 1602.95 cv
2246.96 1602.95 li
2316.98 1675.62 mo
2318.91 1677.61 2320.85 1679.62 2322.8 1681.64 cv
2324.76 1683.66 2326.74 1685.7 2328.73 1687.76 cv
2330.72 1689.82 2332.74 1691.9 2334.76 1693.99 cv
2336.79 1696.09 2338.84 1698.21 2340.91 1700.34 cv
2344.78 1704.34 2348.71 1708.4 2352.7 1712.52 cv
2356.72 1716.67 2360.79 1720.88 2364.93 1725.16 cv
2369.09 1729.47 2373.32 1733.84 2377.61 1738.28 cv
2381.93 1742.75 2386.31 1747.3 2390.76 1751.91 cv
2390.83 1751.98 2390.9 1752.06 2390.97 1752.13 cv
2391.04 1752.2 2391.11 1752.28 2391.18 1752.35 cv
2391.25 1752.42 2391.32 1752.5 2391.39 1752.57 cv
2391.46 1752.64 2391.54 1752.72 2391.61 1752.79 cv
2397.73 1752.79 li
2397.65 1752.72 2397.58 1752.64 2397.51 1752.57 cv
2397.44 1752.5 2397.37 1752.42 2397.3 1752.35 cv
2397.23 1752.28 2397.16 1752.2 2397.09 1752.13 cv
2397.02 1752.06 2396.94 1751.98 2396.87 1751.91 cv
2392.4 1747.3 2387.99 1742.75 2383.65 1738.28 cv
2379.34 1733.84 2375.09 1729.47 2370.9 1725.16 cv
2366.74 1720.88 2362.64 1716.67 2358.6 1712.52 cv
2354.59 1708.4 2350.64 1704.34 2346.74 1700.34 cv
2344.67 1698.21 2342.61 1696.09 2340.57 1693.99 cv
2338.53 1691.9 2336.51 1689.82 2334.5 1687.76 cv
2332.5 1685.7 2330.51 1683.66 2328.54 1681.64 cv
2326.57 1679.62 2324.62 1677.61 2322.69 1675.62 cv
2316.98 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2185.02 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 2185.02 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1824.87 -21.4822 mo
1824.87 -21.3878 1824.86 -21.294 1824.86 -21.2002 cv
1824.86 -21.1058 1824.86 -21.0119 1824.85 -20.9181 cv
1824.85 -20.8243 1824.85 -20.7299 1824.85 -20.6361 cv
1824.84 -20.5422 1824.84 -20.4484 1824.84 -20.3546 cv
1824.63 -12.7937 1824.43 -5.28997 1824.23 2.15484 cv
1824.03 9.59484 1823.83 16.9759 1823.64 24.298 cv
1823.44 31.6141 1823.24 38.8713 1823.05 46.0677 cv
1822.86 53.2594 1822.66 60.3902 1822.47 67.4598 cv
1822.41 69.7848 1822.35 72.105 1822.29 74.421 cv
1822.22 76.7359 1822.16 79.0465 1822.1 81.3523 cv
1822.04 83.658 1821.97 85.9584 1821.91 88.2546 cv
1821.85 90.5502 1821.79 92.8415 1821.73 95.1275 cv
1825.57 95.1281 li
1825.64 92.8415 1825.7 90.5502 1825.76 88.2546 cv
1825.82 85.9584 1825.88 83.658 1825.95 81.3523 cv
1826.01 79.0465 1826.07 76.7359 1826.13 74.421 cv
1826.2 72.105 1826.26 69.7848 1826.32 67.4598 cv
1826.52 60.3902 1826.71 53.2594 1826.9 46.0677 cv
1827.1 38.8713 1827.3 31.6141 1827.5 24.298 cv
1827.69 16.9759 1827.89 9.59484 1828.1 2.15484 cv
1828.3 -5.28997 1828.5 -12.7937 1828.71 -20.3546 cv
1828.71 -20.4484 1828.71 -20.5422 1828.71 -20.6361 cv
1828.72 -20.7299 1828.72 -20.8243 1828.72 -20.9181 cv
1828.72 -21.0119 1828.73 -21.1058 1828.73 -21.2002 cv
1828.73 -21.294 1828.73 -21.3878 1828.74 -21.4822 cv
1824.87 -21.4816 li
1821.61 99.4191 mo
1821.18 115.562 1820.75 131.475 1820.33 147.162 cv
1819.91 162.824 1819.49 178.26 1819.09 193.475 cv
1818.68 208.667 1818.28 223.638 1817.89 238.392 cv
1817.5 253.125 1817.11 267.641 1816.74 281.945 cv
1820.54 281.945 li
1820.92 267.641 1821.31 253.125 1821.71 238.392 cv
1822.1 223.638 1822.5 208.667 1822.91 193.475 cv
1823.32 178.26 1823.74 162.824 1824.16 147.162 cv
1824.59 131.475 1825.02 115.562 1825.46 99.4191 cv
1821.61 99.4191 li
1816.64 285.731 mo
1816.26 299.976 1815.89 314.011 1815.54 327.837 cv
1815.18 341.645 1814.83 355.247 1814.48 368.646 cv
1814.14 382.028 1813.81 395.208 1813.48 408.19 cv
1813.15 421.157 1812.84 433.926 1812.53 446.501 cv
1816.31 446.502 li
1816.62 433.926 1816.94 421.157 1817.27 408.19 cv
1817.59 395.208 1817.93 382.028 1818.28 368.646 cv
1818.62 355.247 1818.97 341.645 1819.34 327.837 cv
1819.7 314.011 1820.07 299.976 1820.44 285.731 cv
1816.64 285.732 li
1812.45 449.769 mo
1812.14 462.3 1811.84 474.639 1811.56 486.789 cv
1811.27 498.926 1810.99 510.875 1810.72 522.64 cv
1810.45 534.392 1810.19 545.962 1809.93 557.352 cv
1809.68 568.731 1809.44 579.931 1809.21 590.955 cv
1812.96 590.956 li
1813.2 579.931 1813.44 568.731 1813.69 557.352 cv
1813.95 545.962 1814.21 534.392 1814.48 522.64 cv
1814.76 510.875 1815.04 498.926 1815.33 486.789 cv
1815.62 474.639 1815.92 462.3 1816.23 449.769 cv
1812.45 449.769 li
1809.15 593.822 mo
1808.92 604.801 1808.7 615.607 1808.49 626.242 cv
1808.28 636.869 1808.08 647.326 1807.89 657.616 cv
1807.7 667.9 1807.52 678.018 1807.35 687.975 cv
1807.19 697.924 1807.03 707.714 1806.88 717.345 cv
1810.62 717.345 li
1810.77 707.714 1810.93 697.924 1811.1 687.975 cv
1811.27 678.018 1811.45 667.9 1811.64 657.616 cv
1811.83 647.326 1812.03 636.869 1812.24 626.242 cv
1812.45 615.607 1812.67 604.801 1812.9 593.822 cv
1809.15 593.823 li
1806.84 719.895 mo
1806.7 729.493 1806.56 738.935 1806.44 748.223 cv
1806.32 757.508 1806.21 766.639 1806.11 775.622 cv
1806.01 784.602 1805.92 793.434 1805.84 802.12 cv
1805.77 810.804 1805.7 819.345 1805.65 827.744 cv
1809.38 827.745 li
1809.43 819.345 1809.5 810.804 1809.57 802.12 cv
1809.65 793.434 1809.74 784.602 1809.84 775.622 cv
1809.94 766.639 1810.05 757.508 1810.18 748.223 cv
1810.3 738.935 1810.44 729.493 1810.58 719.895 cv
1806.84 719.895 li
1805.64 829.928 mo
1805.59 838.304 1805.55 846.541 1805.52 854.641 cv
1805.5 862.741 1805.48 870.705 1805.48 878.536 cv
1805.48 886.367 1805.49 894.067 1805.52 901.638 cv
1805.55 909.209 1805.58 916.653 1805.64 923.973 cv
1809.37 923.973 li
1809.31 916.653 1809.27 909.209 1809.25 901.638 cv
1809.22 894.067 1809.21 886.367 1809.21 878.536 cv
1809.21 870.705 1809.23 862.741 1809.25 854.641 cv
1809.28 846.541 1809.32 838.304 1809.37 829.928 cv
1805.64 829.928 li
1805.65 925.877 mo
1805.7 933.173 1805.77 940.345 1805.85 947.397 cv
1805.94 954.452 1806.03 961.387 1806.14 968.205 cv
1806.25 975.026 1806.38 981.731 1806.51 988.324 cv
1806.65 994.919 1806.81 1001.4 1806.97 1007.78 cv
1810.71 1007.78 li
1810.54 1001.4 1810.39 994.919 1810.25 988.324 cv
1810.11 981.731 1809.99 975.026 1809.87 968.205 cv
1809.76 961.387 1809.67 954.452 1809.59 947.397 cv
1809.5 940.345 1809.43 933.173 1809.38 925.877 cv
1805.65 925.877 li
1807.02 1009.47 mo
1807.19 1015.83 1807.38 1022.08 1807.58 1028.22 cv
1807.78 1034.38 1808 1040.42 1808.23 1046.37 cv
1808.46 1052.32 1808.71 1058.17 1808.98 1063.92 cv
1809.24 1069.68 1809.52 1075.34 1809.82 1080.91 cv
1813.58 1080.91 li
1813.28 1075.34 1813 1069.68 1812.73 1063.92 cv
1812.46 1058.17 1812.21 1052.32 1811.98 1046.37 cv
1811.74 1040.42 1811.52 1034.38 1811.32 1028.22 cv
1811.12 1022.08 1810.93 1015.83 1810.76 1009.47 cv
1807.02 1009.47 li
1809.9 1082.38 mo
1810.2 1087.94 1810.52 1093.4 1810.86 1098.78 cv
1811.2 1104.16 1811.55 1109.45 1811.92 1114.65 cv
1812.29 1119.86 1812.68 1124.99 1813.09 1130.03 cv
1813.5 1135.08 1813.93 1140.05 1814.37 1144.93 cv
1818.16 1144.93 li
1817.72 1140.05 1817.29 1135.08 1816.87 1130.03 cv
1816.46 1124.99 1816.07 1119.86 1815.7 1114.65 cv
1815.32 1109.45 1814.97 1104.16 1814.63 1098.78 cv
1814.29 1093.4 1813.97 1087.94 1813.66 1082.38 cv
1809.9 1082.38 li
1814.49 1146.21 mo
1814.94 1151.09 1815.41 1155.89 1815.89 1160.62 cv
1816.38 1165.36 1816.89 1170.02 1817.42 1174.61 cv
1817.95 1179.21 1818.5 1183.73 1819.07 1188.19 cv
1819.64 1192.66 1820.23 1197.06 1820.85 1201.39 cv
1824.69 1201.39 li
1824.07 1197.06 1823.47 1192.66 1822.9 1188.19 cv
1822.32 1183.73 1821.77 1179.21 1821.23 1174.61 cv
1820.7 1170.02 1820.19 1165.36 1819.7 1160.62 cv
1819.21 1155.89 1818.73 1151.09 1818.28 1146.21 cv
1814.49 1146.21 li
1821.01 1202.54 mo
1821.3 1204.55 1821.59 1206.54 1821.88 1208.52 cv
1822.18 1210.51 1822.48 1212.47 1822.79 1214.43 cv
1823.09 1216.39 1823.4 1218.33 1823.72 1220.27 cv
1824.04 1222.2 1824.36 1224.12 1824.68 1226.03 cv
1825.24 1229.3 1825.81 1232.53 1826.4 1235.73 cv
1826.99 1238.94 1827.59 1242.11 1828.21 1245.25 cv
1828.83 1248.39 1829.47 1251.51 1830.12 1254.59 cv
1830.77 1257.68 1831.44 1260.75 1832.12 1263.78 cv
1836.04 1263.78 li
1835.35 1260.75 1834.68 1257.68 1834.02 1254.59 cv
1833.37 1251.51 1832.73 1248.39 1832.1 1245.25 cv
1831.48 1242.11 1830.87 1238.94 1830.28 1235.73 cv
1829.69 1232.53 1829.11 1229.3 1828.55 1226.03 cv
1828.22 1224.12 1827.9 1222.2 1827.58 1220.27 cv
1827.26 1218.33 1826.95 1216.39 1826.64 1214.43 cv
1826.33 1212.47 1826.03 1210.51 1825.73 1208.52 cv
1825.43 1206.54 1825.14 1204.55 1824.85 1202.54 cv
1821.01 1202.54 li
1832.46 1265.28 mo
1833.76 1270.94 1835.1 1276.51 1836.51 1281.98 cv
1837.93 1287.49 1839.4 1292.91 1840.94 1298.25 cv
1842.48 1303.63 1844.09 1308.93 1845.77 1314.17 cv
1847.45 1319.44 1849.2 1324.65 1851.02 1329.82 cv
1855.08 1329.82 li
1853.25 1324.65 1851.48 1319.44 1849.78 1314.17 cv
1848.1 1308.93 1846.48 1303.63 1844.92 1298.25 cv
1843.37 1292.91 1841.89 1287.49 1840.46 1281.98 cv
1839.05 1276.51 1837.69 1270.94 1836.39 1265.28 cv
1832.46 1265.28 li
1851.5 1331.17 mo
1853.35 1336.36 1855.27 1341.5 1857.26 1346.61 cv
1859.27 1351.75 1861.35 1356.86 1863.51 1361.95 cv
1865.69 1367.08 1867.95 1372.18 1870.29 1377.28 cv
1872.65 1382.43 1875.1 1387.56 1877.64 1392.71 cv
1881.88 1392.71 li
1879.33 1387.56 1876.86 1382.43 1874.48 1377.28 cv
1872.12 1372.18 1869.85 1367.08 1867.65 1361.95 cv
1865.48 1356.86 1863.38 1351.75 1861.36 1346.61 cv
1859.35 1341.5 1857.42 1336.36 1855.56 1331.17 cv
1851.5 1331.17 li
1878.32 1394.08 mo
1880.89 1399.27 1883.57 1404.48 1886.34 1409.71 cv
1889.13 1414.99 1892.03 1420.3 1895.03 1425.65 cv
1898.06 1431.06 1901.2 1436.51 1904.45 1442.02 cv
1907.73 1447.59 1911.13 1453.22 1914.66 1458.93 cv
1919.17 1458.94 li
1915.62 1453.22 1912.19 1447.59 1908.89 1442.02 cv
1905.61 1436.51 1902.45 1431.06 1899.4 1425.65 cv
1896.38 1420.3 1893.46 1414.99 1890.65 1409.71 cv
1887.86 1404.48 1885.16 1399.27 1882.57 1394.08 cv
1878.32 1394.08 li
1915.6 1460.46 mo
1919.19 1466.26 1922.91 1472.15 1926.76 1478.14 cv
1930.66 1484.2 1934.7 1490.38 1938.88 1496.68 cv
1943.12 1503.06 1947.51 1509.57 1952.05 1516.24 cv
1956.67 1523 1961.44 1529.93 1966.4 1537.03 cv
1971.28 1537.03 li
1966.29 1529.93 1961.48 1523 1956.84 1516.24 cv
1952.26 1509.57 1947.83 1503.06 1943.57 1496.68 cv
1939.35 1490.38 1935.29 1484.2 1931.36 1478.14 cv
1927.48 1472.15 1923.74 1466.26 1920.12 1460.46 cv
1915.6 1460.46 li
1967.7 1538.9 mo
1968.41 1539.93 1969.13 1540.95 1969.85 1541.98 cv
1970.57 1543.01 1971.3 1544.05 1972.03 1545.09 cv
1972.76 1546.13 1973.49 1547.17 1974.23 1548.22 cv
1974.97 1549.27 1975.71 1550.33 1976.46 1551.39 cv
1979.2 1555.27 1981.98 1559.21 1984.82 1563.2 cv
1987.69 1567.23 1990.61 1571.32 1993.58 1575.48 cv
1996.58 1579.67 1999.64 1583.92 2002.75 1588.25 cv
2005.9 1592.62 2009.1 1597.05 2012.36 1601.57 cv
2017.58 1601.57 li
2014.29 1597.05 2011.06 1592.62 2007.9 1588.25 cv
2004.76 1583.92 2001.68 1579.67 1998.66 1575.48 cv
1995.66 1571.32 1992.73 1567.23 1989.84 1563.2 cv
1986.98 1559.21 1984.17 1555.27 1981.42 1551.39 cv
1980.67 1550.33 1979.92 1549.27 1979.17 1548.22 cv
1978.43 1547.17 1977.69 1546.13 1976.95 1545.09 cv
1976.22 1544.05 1975.49 1543.01 1974.76 1541.98 cv
1974.03 1540.95 1973.31 1539.93 1972.59 1538.9 cv
1967.7 1538.9 li
2013.36 1602.95 mo
2017.22 1608.28 2021.17 1613.72 2025.21 1619.27 cv
2029.29 1624.89 2033.46 1630.62 2037.74 1636.48 cv
2042.06 1642.4 2046.48 1648.45 2051.01 1654.64 cv
2055.59 1660.91 2060.28 1667.31 2065.08 1673.87 cv
2070.67 1673.87 li
2065.83 1667.31 2061.11 1660.91 2056.5 1654.64 cv
2051.94 1648.45 2047.49 1642.4 2043.13 1636.48 cv
2038.83 1630.62 2034.62 1624.89 2030.51 1619.27 cv
2026.45 1613.72 2022.47 1608.28 2018.58 1602.95 cv
2013.36 1602.95 li
2066.36 1675.62 mo
2067.82 1677.61 2069.29 1679.62 2070.77 1681.64 cv
2072.25 1683.66 2073.75 1685.7 2075.25 1687.76 cv
2076.76 1689.82 2078.28 1691.9 2079.82 1693.99 cv
2081.36 1696.09 2082.91 1698.21 2084.47 1700.34 cv
2087.4 1704.34 2090.38 1708.4 2093.4 1712.52 cv
2096.44 1716.67 2099.52 1720.88 2102.65 1725.16 cv
2105.8 1729.47 2109 1733.84 2112.25 1738.28 cv
2115.52 1742.75 2118.84 1747.3 2122.2 1751.91 cv
2122.26 1751.98 2122.31 1752.06 2122.36 1752.13 cv
2122.42 1752.2 2122.47 1752.28 2122.52 1752.35 cv
2122.58 1752.42 2122.63 1752.5 2122.68 1752.57 cv
2122.74 1752.64 2122.79 1752.72 2122.84 1752.79 cv
2128.85 1752.79 li
2128.8 1752.72 2128.74 1752.64 2128.69 1752.57 cv
2128.64 1752.5 2128.58 1752.42 2128.53 1752.35 cv
2128.47 1752.28 2128.42 1752.2 2128.37 1752.13 cv
2128.31 1752.06 2128.26 1751.98 2128.21 1751.91 cv
2124.81 1747.3 2121.47 1742.75 2118.18 1738.28 cv
2114.91 1733.84 2111.69 1729.47 2108.51 1725.16 cv
2105.36 1720.88 2102.25 1716.67 2099.19 1712.52 cv
2096.15 1708.4 2093.16 1704.34 2090.2 1700.34 cv
2088.63 1698.21 2087.07 1696.09 2085.52 1693.99 cv
2083.97 1691.9 2082.44 1689.82 2080.92 1687.76 cv
2079.4 1685.7 2077.89 1683.66 2076.4 1681.64 cv
2074.91 1679.62 2073.43 1677.61 2071.96 1675.62 cv
2066.36 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1967.17 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1967.17 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1651.81 -21.4822 mo
1651.81 -21.3878 1651.81 -21.294 1651.81 -21.2002 cv
1651.8 -21.1058 1651.8 -21.0119 1651.8 -20.9181 cv
1651.8 -20.8243 1651.8 -20.7299 1651.79 -20.6361 cv
1651.79 -20.5422 1651.79 -20.4484 1651.79 -20.3546 cv
1651.65 -12.7937 1651.51 -5.28997 1651.38 2.15484 cv
1651.24 9.59484 1651.11 16.9759 1650.97 24.298 cv
1650.84 31.6141 1650.71 38.8713 1650.58 46.0677 cv
1650.44 53.2594 1650.31 60.3902 1650.18 67.4598 cv
1650.14 69.7848 1650.1 72.105 1650.06 74.421 cv
1650.01 76.7359 1649.97 79.0465 1649.93 81.3523 cv
1649.89 83.658 1649.85 85.9584 1649.8 88.2546 cv
1649.76 90.5502 1649.72 92.8415 1649.68 95.1275 cv
1653.53 95.1281 li
1653.57 92.8415 1653.61 90.5502 1653.65 88.2546 cv
1653.7 85.9584 1653.74 83.658 1653.78 81.3523 cv
1653.82 79.0465 1653.87 76.7359 1653.91 74.421 cv
1653.95 72.105 1654 69.7848 1654.04 67.4598 cv
1654.17 60.3902 1654.3 53.2594 1654.43 46.0677 cv
1654.57 38.8713 1654.7 31.6141 1654.84 24.298 cv
1654.97 16.9759 1655.11 9.59484 1655.25 2.15484 cv
1655.38 -5.28997 1655.52 -12.7937 1655.66 -20.3546 cv
1655.66 -20.4484 1655.66 -20.5422 1655.67 -20.6361 cv
1655.67 -20.7299 1655.67 -20.8243 1655.67 -20.9181 cv
1655.67 -21.0119 1655.67 -21.1058 1655.68 -21.2002 cv
1655.68 -21.294 1655.68 -21.3878 1655.68 -21.4822 cv
1651.81 -21.4816 li
1649.6 99.4191 mo
1649.31 115.562 1649.01 131.475 1648.73 147.162 cv
1648.44 162.824 1648.16 178.26 1647.89 193.475 cv
1647.61 208.667 1647.34 223.638 1647.07 238.392 cv
1646.81 253.125 1646.55 267.641 1646.29 281.945 cv
1650.1 281.945 li
1650.36 267.641 1650.63 253.125 1650.89 238.392 cv
1651.16 223.638 1651.44 208.667 1651.71 193.475 cv
1651.99 178.26 1652.28 162.824 1652.57 147.162 cv
1652.86 131.475 1653.15 115.562 1653.45 99.4191 cv
1649.6 99.4191 li
1646.22 285.731 mo
1645.97 299.976 1645.72 314.011 1645.47 327.837 cv
1645.23 341.645 1644.99 355.247 1644.76 368.646 cv
1644.53 382.028 1644.3 395.208 1644.08 408.19 cv
1643.86 421.157 1643.64 433.926 1643.43 446.501 cv
1647.22 446.502 li
1647.43 433.926 1647.65 421.157 1647.87 408.19 cv
1648.09 395.208 1648.32 382.028 1648.56 368.646 cv
1648.79 355.247 1649.03 341.645 1649.28 327.837 cv
1649.53 314.011 1649.78 299.976 1650.03 285.731 cv
1646.22 285.732 li
1643.38 449.769 mo
1643.17 462.3 1642.97 474.639 1642.77 486.789 cv
1642.58 498.926 1642.39 510.875 1642.2 522.64 cv
1642.02 534.392 1641.84 545.962 1641.67 557.352 cv
1641.5 568.731 1641.34 579.931 1641.18 590.955 cv
1644.94 590.956 li
1645.1 579.931 1645.26 568.731 1645.44 557.352 cv
1645.61 545.962 1645.79 534.392 1645.97 522.64 cv
1646.16 510.875 1646.35 498.926 1646.55 486.789 cv
1646.75 474.639 1646.95 462.3 1647.16 449.769 cv
1643.38 449.769 li
1641.14 593.822 mo
1640.98 604.801 1640.83 615.607 1640.69 626.242 cv
1640.55 636.869 1640.41 647.326 1640.29 657.616 cv
1640.16 667.9 1640.04 678.018 1639.92 687.975 cv
1639.81 697.924 1639.7 707.714 1639.6 717.345 cv
1643.34 717.345 li
1643.44 707.714 1643.55 697.924 1643.67 687.975 cv
1643.78 678.018 1643.91 667.9 1644.03 657.616 cv
1644.16 647.326 1644.3 636.869 1644.45 626.242 cv
1644.59 615.607 1644.74 604.801 1644.9 593.822 cv
1641.14 593.823 li
1639.57 719.895 mo
1639.48 729.493 1639.38 738.935 1639.3 748.223 cv
1639.22 757.508 1639.14 766.639 1639.08 775.622 cv
1639.01 784.602 1638.95 793.434 1638.9 802.12 cv
1638.84 810.804 1638.8 819.345 1638.76 827.744 cv
1642.5 827.745 li
1642.53 819.345 1642.58 810.804 1642.63 802.12 cv
1642.68 793.434 1642.74 784.602 1642.81 775.622 cv
1642.88 766.639 1642.96 757.508 1643.04 748.223 cv
1643.13 738.935 1643.22 729.493 1643.32 719.895 cv
1639.57 719.895 li
1638.76 829.928 mo
1638.72 838.304 1638.7 846.541 1638.68 854.641 cv
1638.66 862.741 1638.65 870.705 1638.65 878.536 cv
1638.65 886.367 1638.66 894.067 1638.68 901.638 cv
1638.69 909.209 1638.72 916.653 1638.76 923.973 cv
1642.49 923.973 li
1642.45 916.653 1642.43 909.209 1642.41 901.638 cv
1642.39 894.067 1642.38 886.367 1642.38 878.536 cv
1642.38 870.705 1642.39 862.741 1642.41 854.641 cv
1642.43 846.541 1642.45 838.304 1642.49 829.928 cv
1638.76 829.928 li
1638.76 925.877 mo
1638.8 933.173 1638.85 940.345 1638.9 947.397 cv
1638.96 954.452 1639.02 961.387 1639.1 968.205 cv
1639.17 975.026 1639.26 981.731 1639.35 988.324 cv
1639.45 994.919 1639.55 1001.4 1639.66 1007.78 cv
1643.41 1007.78 li
1643.29 1001.4 1643.19 994.919 1643.09 988.324 cv
1643 981.731 1642.91 975.026 1642.84 968.205 cv
1642.76 961.387 1642.69 954.452 1642.64 947.397 cv
1642.58 940.345 1642.54 933.173 1642.5 925.877 cv
1638.76 925.877 li
1639.69 1009.47 mo
1639.81 1015.83 1639.94 1022.08 1640.07 1028.22 cv
1640.21 1034.38 1640.36 1040.42 1640.52 1046.37 cv
1640.67 1052.32 1640.84 1058.17 1641.02 1063.92 cv
1641.2 1069.68 1641.39 1075.34 1641.6 1080.91 cv
1645.36 1080.91 li
1645.16 1075.34 1644.96 1069.68 1644.78 1063.92 cv
1644.6 1058.17 1644.43 1052.32 1644.27 1046.37 cv
1644.11 1040.42 1643.96 1034.38 1643.82 1028.22 cv
1643.68 1022.08 1643.56 1015.83 1643.44 1009.47 cv
1639.69 1009.47 li
1641.65 1082.38 mo
1641.86 1087.94 1642.07 1093.4 1642.3 1098.78 cv
1642.53 1104.16 1642.77 1109.45 1643.02 1114.65 cv
1643.27 1119.86 1643.54 1124.99 1643.82 1130.03 cv
1644.09 1135.08 1644.38 1140.05 1644.69 1144.93 cv
1648.48 1144.93 li
1648.18 1140.05 1647.88 1135.08 1647.6 1130.03 cv
1647.32 1124.99 1647.06 1119.86 1646.8 1114.65 cv
1646.55 1109.45 1646.3 1104.16 1646.07 1098.78 cv
1645.84 1093.4 1645.62 1087.94 1645.42 1082.38 cv
1641.65 1082.38 li
1644.76 1146.21 mo
1645.07 1151.09 1645.39 1155.89 1645.72 1160.62 cv
1646.05 1165.36 1646.4 1170.02 1646.75 1174.61 cv
1647.11 1179.21 1647.49 1183.73 1647.87 1188.19 cv
1648.26 1192.66 1648.66 1197.06 1649.08 1201.39 cv
1652.92 1201.39 li
1652.5 1197.06 1652.1 1192.66 1651.7 1188.19 cv
1651.31 1183.73 1650.94 1179.21 1650.57 1174.61 cv
1650.21 1170.02 1649.86 1165.36 1649.53 1160.62 cv
1649.19 1155.89 1648.87 1151.09 1648.56 1146.21 cv
1644.76 1146.21 li
1649.19 1202.54 mo
1649.39 1204.55 1649.58 1206.54 1649.79 1208.52 cv
1649.99 1210.51 1650.19 1212.47 1650.4 1214.43 cv
1650.61 1216.39 1650.82 1218.33 1651.03 1220.27 cv
1651.25 1222.2 1651.46 1224.12 1651.68 1226.03 cv
1652.06 1229.3 1652.45 1232.53 1652.85 1235.73 cv
1653.25 1238.94 1653.66 1242.11 1654.08 1245.25 cv
1654.5 1248.39 1654.93 1251.51 1655.37 1254.59 cv
1655.82 1257.68 1656.27 1260.75 1656.73 1263.78 cv
1660.66 1263.78 li
1660.19 1260.75 1659.73 1257.68 1659.28 1254.59 cv
1658.84 1251.51 1658.4 1248.39 1657.97 1245.25 cv
1657.55 1242.11 1657.14 1238.94 1656.73 1235.73 cv
1656.33 1232.53 1655.94 1229.3 1655.55 1226.03 cv
1655.33 1224.12 1655.11 1222.2 1654.89 1220.27 cv
1654.68 1218.33 1654.46 1216.39 1654.25 1214.43 cv
1654.04 1212.47 1653.84 1210.51 1653.64 1208.52 cv
1653.43 1206.54 1653.23 1204.55 1653.04 1202.54 cv
1649.19 1202.54 li
1656.97 1265.28 mo
1657.84 1270.94 1658.76 1276.51 1659.71 1281.98 cv
1660.67 1287.49 1661.68 1292.91 1662.72 1298.25 cv
1663.77 1303.63 1664.86 1308.93 1666 1314.17 cv
1667.14 1319.44 1668.33 1324.65 1669.57 1329.82 cv
1673.62 1329.82 li
1672.38 1324.65 1671.17 1319.44 1670.02 1314.17 cv
1668.87 1308.93 1667.77 1303.63 1666.71 1298.25 cv
1665.65 1292.91 1664.64 1287.49 1663.67 1281.98 cv
1662.7 1276.51 1661.78 1270.94 1660.89 1265.28 cv
1656.97 1265.28 li
1669.89 1331.17 mo
1671.14 1336.36 1672.44 1341.5 1673.8 1346.61 cv
1675.16 1351.75 1676.57 1356.86 1678.04 1361.95 cv
1679.52 1367.08 1681.05 1372.18 1682.64 1377.28 cv
1684.24 1382.43 1685.91 1387.56 1687.63 1392.71 cv
1691.88 1392.71 li
1690.14 1387.56 1688.46 1382.43 1686.84 1377.28 cv
1685.23 1372.18 1683.68 1367.08 1682.19 1361.95 cv
1680.71 1356.86 1679.28 1351.75 1677.9 1346.61 cv
1676.53 1341.5 1675.22 1336.36 1673.95 1331.17 cv
1669.89 1331.17 li
1688.09 1394.08 mo
1689.84 1399.27 1691.65 1404.48 1693.53 1409.71 cv
1695.43 1414.99 1697.4 1420.3 1699.43 1425.65 cv
1701.49 1431.06 1703.62 1436.51 1705.83 1442.02 cv
1708.06 1447.59 1710.37 1453.22 1712.76 1458.93 cv
1717.28 1458.94 li
1714.86 1453.22 1712.52 1447.59 1710.27 1442.02 cv
1708.04 1436.51 1705.89 1431.06 1703.81 1425.65 cv
1701.75 1420.3 1699.77 1414.99 1697.85 1409.71 cv
1695.95 1404.48 1694.11 1399.27 1692.35 1394.08 cv
1688.09 1394.08 li
1713.4 1460.46 mo
1715.84 1466.26 1718.36 1472.15 1720.98 1478.14 cv
1723.62 1484.2 1726.36 1490.38 1729.2 1496.68 cv
1732.08 1503.06 1735.06 1509.57 1738.14 1516.24 cv
1741.27 1523 1744.52 1529.93 1747.88 1537.03 cv
1752.77 1537.03 li
1749.37 1529.93 1746.09 1523 1742.93 1516.24 cv
1739.81 1509.57 1736.8 1503.06 1733.89 1496.68 cv
1731.02 1490.38 1728.25 1484.2 1725.58 1478.14 cv
1722.94 1472.15 1720.39 1466.26 1717.92 1460.46 cv
1713.4 1460.46 li
1748.77 1538.9 mo
1749.25 1539.93 1749.74 1540.95 1750.22 1541.98 cv
1750.71 1543.01 1751.21 1544.05 1751.7 1545.09 cv
1752.2 1546.13 1752.7 1547.17 1753.2 1548.22 cv
1753.7 1549.27 1754.2 1550.33 1754.71 1551.39 cv
1756.57 1555.27 1758.46 1559.21 1760.39 1563.2 cv
1762.33 1567.23 1764.31 1571.32 1766.33 1575.48 cv
1768.37 1579.67 1770.44 1583.92 1772.56 1588.25 cv
1774.69 1592.62 1776.87 1597.05 1779.08 1601.57 cv
1784.3 1601.57 li
1782.06 1597.05 1779.86 1592.62 1777.71 1588.25 cv
1775.57 1583.92 1773.47 1579.67 1771.42 1575.48 cv
1769.38 1571.32 1767.37 1567.23 1765.41 1563.2 cv
1763.46 1559.21 1761.55 1555.27 1759.67 1551.39 cv
1759.16 1550.33 1758.65 1549.27 1758.14 1548.22 cv
1757.64 1547.17 1757.13 1546.13 1756.63 1545.09 cv
1756.13 1544.05 1755.63 1543.01 1755.14 1541.98 cv
1754.64 1540.95 1754.15 1539.93 1753.66 1538.9 cv
1748.77 1538.9 li
1779.76 1602.95 mo
1782.38 1608.28 1785.06 1613.72 1787.8 1619.27 cv
1790.57 1624.89 1793.41 1630.62 1796.31 1636.48 cv
1799.24 1642.4 1802.24 1648.45 1805.31 1654.64 cv
1808.42 1660.91 1811.61 1667.31 1814.86 1673.87 cv
1820.46 1673.87 li
1817.17 1667.31 1813.95 1660.91 1810.81 1654.64 cv
1807.71 1648.45 1804.67 1642.4 1801.71 1636.48 cv
1798.78 1630.62 1795.91 1624.89 1793.11 1619.27 cv
1790.34 1613.72 1787.63 1608.28 1784.99 1602.95 cv
1779.76 1602.95 li
1815.74 1675.62 mo
1816.72 1677.61 1817.72 1679.62 1818.73 1681.64 cv
1819.73 1683.66 1820.75 1685.7 1821.77 1687.76 cv
1822.8 1689.82 1823.83 1691.9 1824.87 1693.99 cv
1825.91 1696.09 1826.97 1698.21 1828.03 1700.34 cv
1830.02 1704.34 1832.04 1708.4 1834.09 1712.52 cv
1836.15 1716.67 1838.24 1720.88 1840.37 1725.16 cv
1842.51 1729.47 1844.68 1733.84 1846.88 1738.28 cv
1849.1 1742.75 1851.36 1747.3 1853.64 1751.91 cv
1853.68 1751.98 1853.71 1752.06 1853.75 1752.13 cv
1853.79 1752.2 1853.82 1752.28 1853.86 1752.35 cv
1853.89 1752.42 1853.93 1752.5 1853.97 1752.57 cv
1854 1752.64 1854.04 1752.72 1854.08 1752.79 cv
1860.09 1752.79 li
1860.05 1752.72 1860.02 1752.64 1859.98 1752.57 cv
1859.94 1752.5 1859.91 1752.42 1859.87 1752.35 cv
1859.83 1752.28 1859.8 1752.2 1859.76 1752.13 cv
1859.72 1752.06 1859.69 1751.98 1859.65 1751.91 cv
1857.34 1747.3 1855.06 1742.75 1852.82 1738.28 cv
1850.59 1733.84 1848.4 1729.47 1846.24 1725.16 cv
1844.09 1720.88 1841.97 1716.67 1839.89 1712.52 cv
1837.82 1708.4 1835.78 1704.34 1833.76 1700.34 cv
1832.69 1698.21 1831.63 1696.09 1830.57 1693.99 cv
1829.52 1691.9 1828.48 1689.82 1827.44 1687.76 cv
1826.41 1685.7 1825.38 1683.66 1824.36 1681.64 cv
1823.35 1679.62 1822.34 1677.61 1821.34 1675.62 cv
1815.74 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1749.37 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1749.37 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1478.69 -21.4822 mo
1478.69 -21.3878 1478.69 -21.294 1478.68 -21.2002 cv
1478.68 -21.1058 1478.68 -21.0119 1478.68 -20.9181 cv
1478.68 -20.8243 1478.68 -20.7299 1478.68 -20.6361 cv
1478.68 -20.5422 1478.68 -20.4484 1478.68 -20.3546 cv
1478.6 -12.7937 1478.53 -5.28997 1478.46 2.15484 cv
1478.39 9.59484 1478.32 16.9759 1478.25 24.298 cv
1478.18 31.6141 1478.11 38.8713 1478.04 46.0677 cv
1477.97 53.2594 1477.9 60.3902 1477.83 67.4598 cv
1477.81 69.7848 1477.79 72.105 1477.76 74.421 cv
1477.74 76.7359 1477.72 79.0465 1477.7 81.3523 cv
1477.68 83.658 1477.65 85.9584 1477.63 88.2546 cv
1477.61 90.5502 1477.59 92.8415 1477.56 95.1275 cv
1481.48 95.1281 li
1481.5 92.8415 1481.53 90.5502 1481.55 88.2546 cv
1481.57 85.9584 1481.59 83.658 1481.62 81.3523 cv
1481.64 79.0465 1481.66 76.7359 1481.69 74.421 cv
1481.71 72.105 1481.73 69.7848 1481.75 67.4598 cv
1481.82 60.3902 1481.89 53.2594 1481.96 46.0677 cv
1482.03 38.8713 1482.11 31.6141 1482.18 24.298 cv
1482.25 16.9759 1482.32 9.59484 1482.4 2.15484 cv
1482.47 -5.28997 1482.54 -12.7937 1482.62 -20.3546 cv
1482.62 -20.4484 1482.62 -20.5422 1482.62 -20.6361 cv
1482.62 -20.7299 1482.62 -20.8243 1482.62 -20.9181 cv
1482.62 -21.0119 1482.62 -21.1058 1482.62 -21.2002 cv
1482.63 -21.294 1482.63 -21.3878 1482.63 -21.4822 cv
1478.69 -21.4816 li
1477.52 99.4191 mo
1477.37 115.562 1477.21 131.475 1477.06 147.162 cv
1476.91 162.824 1476.77 178.26 1476.62 193.475 cv
1476.47 208.667 1476.33 223.638 1476.19 238.392 cv
1476.05 253.125 1475.91 267.641 1475.78 281.945 cv
1479.66 281.945 li
1479.8 267.641 1479.94 253.125 1480.08 238.392 cv
1480.22 223.638 1480.37 208.667 1480.52 193.475 cv
1480.67 178.26 1480.82 162.824 1480.97 147.162 cv
1481.12 131.475 1481.28 115.562 1481.44 99.4191 cv
1477.52 99.4191 li
1475.74 285.731 mo
1475.61 299.976 1475.48 314.011 1475.35 327.837 cv
1475.22 341.645 1475.1 355.247 1474.97 368.646 cv
1474.85 382.028 1474.73 395.208 1474.62 408.19 cv
1474.5 421.157 1474.39 433.926 1474.28 446.501 cv
1478.13 446.502 li
1478.24 433.926 1478.35 421.157 1478.47 408.19 cv
1478.59 395.208 1478.71 382.028 1478.84 368.646 cv
1478.96 355.247 1479.09 341.645 1479.22 327.837 cv
1479.35 314.011 1479.49 299.976 1479.62 285.731 cv
1475.74 285.732 li
1474.25 449.769 mo
1474.14 462.3 1474.03 474.639 1473.93 486.789 cv
1473.82 498.926 1473.73 510.875 1473.63 522.64 cv
1473.53 534.392 1473.44 545.962 1473.35 557.352 cv
1473.26 568.731 1473.17 579.931 1473.09 590.955 cv
1476.92 590.956 li
1477 579.931 1477.09 568.731 1477.18 557.352 cv
1477.27 545.962 1477.37 534.392 1477.47 522.64 cv
1477.56 510.875 1477.67 498.926 1477.77 486.789 cv
1477.88 474.639 1477.99 462.3 1478.1 449.769 cv
1474.25 449.769 li
1473.07 593.822 mo
1472.99 604.801 1472.91 615.607 1472.83 626.242 cv
1472.76 636.869 1472.69 647.326 1472.62 657.616 cv
1472.55 667.9 1472.49 678.018 1472.43 687.975 cv
1472.37 697.924 1472.31 707.714 1472.26 717.345 cv
1476.07 717.345 li
1476.12 707.714 1476.18 697.924 1476.24 687.975 cv
1476.3 678.018 1476.37 667.9 1476.43 657.616 cv
1476.5 647.326 1476.58 636.869 1476.65 626.242 cv
1476.73 615.607 1476.81 604.801 1476.89 593.822 cv
1473.07 593.823 li
1472.24 719.895 mo
1472.19 729.493 1472.14 738.935 1472.1 748.223 cv
1472.06 757.508 1472.02 766.639 1471.98 775.622 cv
1471.94 784.602 1471.91 793.434 1471.89 802.12 cv
1471.86 810.804 1471.84 819.345 1471.82 827.744 cv
1475.62 827.745 li
1475.64 819.345 1475.66 810.804 1475.69 802.12 cv
1475.72 793.434 1475.75 784.602 1475.78 775.622 cv
1475.82 766.639 1475.86 757.508 1475.91 748.223 cv
1475.95 738.935 1476 729.493 1476.05 719.895 cv
1472.24 719.895 li
1471.81 829.928 mo
1471.79 838.304 1471.78 846.541 1471.77 854.641 cv
1471.76 862.741 1471.76 870.705 1471.76 878.536 cv
1471.76 886.367 1471.76 894.067 1471.77 901.638 cv
1471.78 909.209 1471.79 916.653 1471.81 923.973 cv
1475.61 923.973 li
1475.59 916.653 1475.58 909.209 1475.57 901.638 cv
1475.56 894.067 1475.56 886.367 1475.56 878.536 cv
1475.56 870.705 1475.56 862.741 1475.57 854.641 cv
1475.58 846.541 1475.59 838.304 1475.61 829.928 cv
1471.81 829.928 li
1471.82 925.877 mo
1471.84 933.173 1471.86 940.345 1471.89 947.397 cv
1471.92 954.452 1471.95 961.387 1471.99 968.205 cv
1472.03 975.026 1472.08 981.731 1472.13 988.324 cv
1472.18 994.919 1472.23 1001.4 1472.29 1007.78 cv
1476.1 1007.78 li
1476.04 1001.4 1475.98 994.919 1475.93 988.324 cv
1475.88 981.731 1475.84 975.026 1475.8 968.205 cv
1475.76 961.387 1475.72 954.452 1475.69 947.397 cv
1475.66 940.345 1475.64 933.173 1475.62 925.877 cv
1471.82 925.877 li
1472.31 1009.47 mo
1472.37 1015.83 1472.43 1022.08 1472.51 1028.22 cv
1472.58 1034.38 1472.66 1040.42 1472.74 1046.37 cv
1472.82 1052.32 1472.91 1058.17 1473.01 1063.92 cv
1473.1 1069.68 1473.2 1075.34 1473.31 1080.91 cv
1477.14 1080.91 li
1477.03 1075.34 1476.93 1069.68 1476.83 1063.92 cv
1476.73 1058.17 1476.64 1052.32 1476.56 1046.37 cv
1476.47 1040.42 1476.39 1034.38 1476.32 1028.22 cv
1476.25 1022.08 1476.18 1015.83 1476.12 1009.47 cv
1472.31 1009.47 li
1473.34 1082.38 mo
1473.45 1087.94 1473.56 1093.4 1473.68 1098.78 cv
1473.8 1104.16 1473.93 1109.45 1474.06 1114.65 cv
1474.19 1119.86 1474.33 1124.99 1474.48 1130.03 cv
1474.62 1135.08 1474.78 1140.05 1474.93 1144.93 cv
1478.8 1144.93 li
1478.64 1140.05 1478.48 1135.08 1478.33 1130.03 cv
1478.18 1124.99 1478.04 1119.86 1477.9 1114.65 cv
1477.77 1109.45 1477.64 1104.16 1477.52 1098.78 cv
1477.39 1093.4 1477.28 1087.94 1477.17 1082.38 cv
1473.34 1082.38 li
1474.98 1146.21 mo
1475.14 1151.09 1475.3 1155.89 1475.48 1160.62 cv
1475.65 1165.36 1475.84 1170.02 1476.02 1174.61 cv
1476.21 1179.21 1476.41 1183.73 1476.61 1188.19 cv
1476.82 1192.66 1477.03 1197.06 1477.25 1201.39 cv
1481.16 1201.39 li
1480.94 1197.06 1480.72 1192.66 1480.51 1188.19 cv
1480.3 1183.73 1480.1 1179.21 1479.91 1174.61 cv
1479.72 1170.02 1479.53 1165.36 1479.35 1160.62 cv
1479.18 1155.89 1479 1151.09 1478.84 1146.21 cv
1474.98 1146.21 li
1477.31 1202.54 mo
1477.41 1204.55 1477.51 1206.54 1477.62 1208.52 cv
1477.73 1210.51 1477.83 1212.47 1477.94 1214.43 cv
1478.05 1216.39 1478.16 1218.33 1478.28 1220.27 cv
1478.39 1222.2 1478.5 1224.12 1478.62 1226.03 cv
1478.82 1229.3 1479.02 1232.53 1479.23 1235.73 cv
1479.45 1238.94 1479.66 1242.11 1479.88 1245.25 cv
1480.1 1248.39 1480.33 1251.51 1480.56 1254.59 cv
1480.8 1257.68 1481.04 1260.75 1481.28 1263.78 cv
1485.27 1263.78 li
1485.02 1260.75 1484.78 1257.68 1484.54 1254.59 cv
1484.31 1251.51 1484.07 1248.39 1483.85 1245.25 cv
1483.62 1242.11 1483.4 1238.94 1483.19 1235.73 cv
1482.97 1232.53 1482.76 1229.3 1482.56 1226.03 cv
1482.44 1224.12 1482.32 1222.2 1482.21 1220.27 cv
1482.09 1218.33 1481.98 1216.39 1481.87 1214.43 cv
1481.76 1212.47 1481.65 1210.51 1481.54 1208.52 cv
1481.43 1206.54 1481.32 1204.55 1481.22 1202.54 cv
1477.31 1202.54 li
1481.4 1265.28 mo
1481.86 1270.94 1482.35 1276.51 1482.85 1281.98 cv
1483.36 1287.49 1483.88 1292.91 1484.43 1298.25 cv
1484.98 1303.63 1485.56 1308.93 1486.16 1314.17 cv
1486.76 1319.44 1487.39 1324.65 1488.04 1329.82 cv
1492.17 1329.82 li
1491.5 1324.65 1490.87 1319.44 1490.25 1314.17 cv
1489.64 1308.93 1489.05 1303.63 1488.49 1298.25 cv
1487.93 1292.91 1487.39 1287.49 1486.87 1281.98 cv
1486.36 1276.51 1485.87 1270.94 1485.4 1265.28 cv
1481.4 1265.28 li
1488.21 1331.17 mo
1488.87 1336.36 1489.55 1341.5 1490.27 1346.61 cv
1490.98 1351.75 1491.73 1356.86 1492.5 1361.95 cv
1493.28 1367.08 1494.09 1372.18 1494.92 1377.28 cv
1495.77 1382.43 1496.64 1387.56 1497.55 1392.71 cv
1501.88 1392.71 li
1500.95 1387.56 1500.06 1382.43 1499.2 1377.28 cv
1498.34 1372.18 1497.52 1367.08 1496.72 1361.95 cv
1495.93 1356.86 1495.18 1351.75 1494.44 1346.61 cv
1493.72 1341.5 1493.02 1336.36 1492.34 1331.17 cv
1488.21 1331.17 li
1497.79 1394.08 mo
1498.72 1399.27 1499.67 1404.48 1500.66 1409.71 cv
1501.66 1414.99 1502.69 1420.3 1503.77 1425.65 cv
1504.85 1431.06 1505.97 1436.51 1507.13 1442.02 cv
1508.31 1447.59 1509.53 1453.22 1510.79 1458.93 cv
1515.38 1458.94 li
1514.1 1453.22 1512.86 1447.59 1511.66 1442.02 cv
1510.47 1436.51 1509.33 1431.06 1508.22 1425.65 cv
1507.13 1420.3 1506.07 1414.99 1505.05 1409.71 cv
1504.04 1404.48 1503.07 1399.27 1502.12 1394.08 cv
1497.79 1394.08 li
1511.12 1460.46 mo
1512.41 1466.26 1513.74 1472.15 1515.11 1478.14 cv
1516.51 1484.2 1517.95 1490.38 1519.44 1496.68 cv
1520.96 1503.06 1522.53 1509.57 1524.15 1516.24 cv
1525.8 1523 1527.51 1529.93 1529.28 1537.03 cv
1534.26 1537.03 li
1532.45 1529.93 1530.71 1523 1529.02 1516.24 cv
1527.37 1509.57 1525.76 1503.06 1524.22 1496.68 cv
1522.69 1490.38 1521.22 1484.2 1519.8 1478.14 cv
1518.39 1472.15 1517.04 1466.26 1515.73 1460.46 cv
1511.12 1460.46 li
1529.75 1538.9 mo
1530 1539.93 1530.26 1540.95 1530.52 1541.98 cv
1530.77 1543.01 1531.03 1544.05 1531.29 1545.09 cv
1531.55 1546.13 1531.82 1547.17 1532.08 1548.22 cv
1532.35 1549.27 1532.61 1550.33 1532.88 1551.39 cv
1533.86 1555.27 1534.85 1559.21 1535.87 1563.2 cv
1536.89 1567.23 1537.94 1571.32 1539 1575.48 cv
1540.07 1579.67 1541.16 1583.92 1542.28 1588.25 cv
1543.4 1592.62 1544.55 1597.05 1545.71 1601.57 cv
1551.02 1601.57 li
1549.83 1597.05 1548.66 1592.62 1547.52 1588.25 cv
1546.38 1583.92 1545.27 1579.67 1544.17 1575.48 cv
1543.09 1571.32 1542.02 1567.23 1540.98 1563.2 cv
1539.94 1559.21 1538.93 1555.27 1537.93 1551.39 cv
1537.66 1550.33 1537.38 1549.27 1537.11 1548.22 cv
1536.84 1547.17 1536.58 1546.13 1536.31 1545.09 cv
1536.04 1544.05 1535.78 1543.01 1535.52 1541.98 cv
1535.25 1540.95 1534.99 1539.93 1534.73 1538.9 cv
1529.75 1538.9 li
1546.07 1602.95 mo
1547.45 1608.28 1548.86 1613.72 1550.3 1619.27 cv
1551.76 1624.89 1553.26 1630.62 1554.78 1636.48 cv
1556.33 1642.4 1557.91 1648.45 1559.53 1654.64 cv
1561.16 1660.91 1562.84 1667.31 1564.56 1673.87 cv
1570.25 1673.87 li
1568.5 1667.31 1566.79 1660.91 1565.12 1654.64 cv
1563.47 1648.45 1561.86 1642.4 1560.28 1636.48 cv
1558.72 1630.62 1557.2 1624.89 1555.71 1619.27 cv
1554.24 1613.72 1552.8 1608.28 1551.39 1602.95 cv
1546.07 1602.95 li
1565.02 1675.62 mo
1565.54 1677.61 1566.06 1679.62 1566.59 1681.64 cv
1567.12 1683.66 1567.66 1685.7 1568.19 1687.76 cv
1568.73 1689.82 1569.28 1691.9 1569.83 1693.99 cv
1570.38 1696.09 1570.93 1698.21 1571.49 1700.34 cv
1572.54 1704.34 1573.6 1708.4 1574.68 1712.52 cv
1575.77 1716.67 1576.87 1720.88 1577.99 1725.16 cv
1579.12 1729.47 1580.26 1733.84 1581.42 1738.28 cv
1582.59 1742.75 1583.77 1747.3 1584.98 1751.91 cv
1585 1751.98 1585.02 1752.06 1585.04 1752.13 cv
1585.05 1752.2 1585.07 1752.28 1585.09 1752.35 cv
1585.11 1752.42 1585.13 1752.5 1585.15 1752.57 cv
1585.17 1752.64 1585.19 1752.72 1585.21 1752.79 cv
1591.33 1752.79 li
1591.31 1752.72 1591.29 1752.64 1591.27 1752.57 cv
1591.25 1752.5 1591.23 1752.42 1591.21 1752.35 cv
1591.19 1752.28 1591.17 1752.2 1591.15 1752.13 cv
1591.13 1752.06 1591.11 1751.98 1591.09 1751.91 cv
1589.86 1747.3 1588.65 1742.75 1587.46 1738.28 cv
1586.28 1733.84 1585.11 1729.47 1583.96 1725.16 cv
1582.82 1720.88 1581.69 1716.67 1580.58 1712.52 cv
1579.48 1708.4 1578.4 1704.34 1577.33 1700.34 cv
1576.76 1698.21 1576.19 1696.09 1575.63 1693.99 cv
1575.07 1691.9 1574.52 1689.82 1573.97 1687.76 cv
1573.42 1685.7 1572.87 1683.66 1572.33 1681.64 cv
1571.79 1679.62 1571.25 1677.61 1570.72 1675.62 cv
1565.02 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1531.54 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1531.54 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1305.63 -21.4822 mo
1305.63 -21.3878 1305.63 -21.294 1305.63 -21.2002 cv
1305.63 -21.1058 1305.63 -21.0119 1305.63 -20.9181 cv
1305.63 -20.8243 1305.63 -20.7299 1305.63 -20.6361 cv
1305.63 -20.5422 1305.63 -20.4484 1305.63 -20.3546 cv
1305.62 -12.7937 1305.61 -5.28997 1305.61 2.15484 cv
1305.6 9.59484 1305.59 16.9759 1305.58 24.298 cv
1305.58 31.6141 1305.57 38.8713 1305.56 46.0677 cv
1305.56 53.2594 1305.55 60.3902 1305.54 67.4598 cv
1305.54 69.7848 1305.54 72.105 1305.54 74.421 cv
1305.53 76.7359 1305.53 79.0465 1305.53 81.3523 cv
1305.53 83.658 1305.52 85.9584 1305.52 88.2546 cv
1305.52 90.5502 1305.52 92.8415 1305.52 95.1275 cv
1309.43 95.1281 li
1309.44 92.8415 1309.44 90.5502 1309.44 88.2546 cv
1309.44 85.9584 1309.45 83.658 1309.45 81.3523 cv
1309.45 79.0465 1309.45 76.7359 1309.46 74.421 cv
1309.46 72.105 1309.46 69.7848 1309.46 67.4598 cv
1309.47 60.3902 1309.48 53.2594 1309.49 46.0677 cv
1309.5 38.8713 1309.51 31.6141 1309.52 24.298 cv
1309.52 16.9759 1309.53 9.59484 1309.54 2.15484 cv
1309.55 -5.28997 1309.56 -12.7937 1309.57 -20.3546 cv
1309.57 -20.4484 1309.57 -20.5422 1309.57 -20.6361 cv
1309.57 -20.7299 1309.57 -20.8243 1309.57 -20.9181 cv
1309.57 -21.0119 1309.57 -21.1058 1309.57 -21.2002 cv
1309.57 -21.294 1309.57 -21.3878 1309.57 -21.4822 cv
1305.63 -21.4816 li
1305.51 99.4191 mo
1305.5 115.562 1305.48 131.475 1305.46 147.162 cv
1305.45 162.824 1305.43 178.26 1305.42 193.475 cv
1305.4 208.667 1305.39 223.638 1305.38 238.392 cv
1305.36 253.125 1305.35 267.641 1305.33 281.945 cv
1309.21 281.945 li
1309.23 267.641 1309.25 253.125 1309.27 238.392 cv
1309.28 223.638 1309.3 208.667 1309.32 193.475 cv
1309.33 178.26 1309.35 162.824 1309.37 147.162 cv
1309.39 131.475 1309.41 115.562 1309.43 99.4191 cv
1305.51 99.4191 li
1305.33 285.731 mo
1305.32 299.976 1305.3 314.011 1305.29 327.837 cv
1305.28 341.645 1305.26 355.247 1305.25 368.646 cv
1305.24 382.028 1305.23 395.208 1305.22 408.19 cv
1305.2 421.157 1305.19 433.926 1305.18 446.501 cv
1309.03 446.502 li
1309.04 433.926 1309.06 421.157 1309.07 408.19 cv
1309.09 395.208 1309.1 382.028 1309.12 368.646 cv
1309.13 355.247 1309.15 341.645 1309.16 327.837 cv
1309.18 314.011 1309.19 299.976 1309.21 285.731 cv
1305.33 285.732 li
1305.18 449.769 mo
1305.17 462.3 1305.16 474.639 1305.15 486.789 cv
1305.14 498.926 1305.13 510.875 1305.12 522.64 cv
1305.11 534.392 1305.1 545.962 1305.09 557.352 cv
1305.08 568.731 1305.07 579.931 1305.06 590.955 cv
1308.89 590.956 li
1308.9 579.931 1308.91 568.731 1308.92 557.352 cv
1308.93 545.962 1308.94 534.392 1308.95 522.64 cv
1308.96 510.875 1308.98 498.926 1308.99 486.789 cv
1309 474.639 1309.01 462.3 1309.03 449.769 cv
1305.18 449.769 li
1305.06 593.822 mo
1305.05 604.801 1305.04 615.607 1305.03 626.242 cv
1305.03 636.869 1305.02 647.326 1305.01 657.616 cv
1305.01 667.9 1305 678.018 1304.99 687.975 cv
1304.99 697.924 1304.98 707.714 1304.98 717.345 cv
1308.79 717.345 li
1308.79 707.714 1308.8 697.924 1308.81 687.975 cv
1308.81 678.018 1308.82 667.9 1308.83 657.616 cv
1308.84 647.326 1308.85 636.869 1308.86 626.242 cv
1308.86 615.607 1308.87 604.801 1308.88 593.822 cv
1305.06 593.823 li
1304.98 719.895 mo
1304.97 729.493 1304.96 738.935 1304.96 748.223 cv
1304.96 757.508 1304.95 766.639 1304.95 775.622 cv
1304.94 784.602 1304.94 793.434 1304.94 802.12 cv
1304.94 810.804 1304.93 819.345 1304.93 827.744 cv
1308.73 827.745 li
1308.73 819.345 1308.74 810.804 1308.74 802.12 cv
1308.74 793.434 1308.75 784.602 1308.75 775.622 cv
1308.76 766.639 1308.76 757.508 1308.77 748.223 cv
1308.77 738.935 1308.78 729.493 1308.78 719.895 cv
1304.98 719.895 li
1304.93 829.928 mo
1304.93 838.304 1304.93 846.541 1304.93 854.641 cv
1304.93 862.741 1304.93 870.705 1304.93 878.536 cv
1304.93 886.367 1304.93 894.067 1304.93 901.638 cv
1304.93 909.209 1304.93 916.653 1304.93 923.973 cv
1308.73 923.973 li
1308.73 916.653 1308.73 909.209 1308.73 901.638 cv
1308.72 894.067 1308.72 886.367 1308.72 878.536 cv
1308.72 870.705 1308.72 862.741 1308.73 854.641 cv
1308.73 846.541 1308.73 838.304 1308.73 829.928 cv
1304.93 829.928 li
1304.93 925.877 mo
1304.93 933.173 1304.94 940.345 1304.94 947.397 cv
1304.94 954.452 1304.95 961.387 1304.95 968.205 cv
1304.95 975.026 1304.96 981.731 1304.96 988.324 cv
1304.97 994.919 1304.97 1001.4 1304.98 1007.78 cv
1308.79 1007.78 li
1308.78 1001.4 1308.78 994.919 1308.77 988.324 cv
1308.76 981.731 1308.76 975.026 1308.75 968.205 cv
1308.75 961.387 1308.74 954.452 1308.74 947.397 cv
1308.74 940.345 1308.73 933.173 1308.73 925.877 cv
1304.93 925.877 li
1304.98 1009.47 mo
1304.99 1015.83 1304.99 1022.08 1305 1028.22 cv
1305.01 1034.38 1305.02 1040.42 1305.03 1046.37 cv
1305.03 1052.32 1305.04 1058.17 1305.05 1063.92 cv
1305.06 1069.68 1305.07 1075.34 1305.08 1080.91 cv
1308.91 1080.91 li
1308.9 1075.34 1308.89 1069.68 1308.88 1063.92 cv
1308.87 1058.17 1308.85 1052.32 1308.84 1046.37 cv
1308.83 1040.42 1308.82 1034.38 1308.82 1028.22 cv
1308.81 1022.08 1308.8 1015.83 1308.79 1009.47 cv
1304.98 1009.47 li
1305.09 1082.38 mo
1305.1 1087.94 1305.11 1093.4 1305.12 1098.78 cv
1305.13 1104.16 1305.15 1109.45 1305.16 1114.65 cv
1305.17 1119.86 1305.19 1124.99 1305.2 1130.03 cv
1305.22 1135.08 1305.23 1140.05 1305.25 1144.93 cv
1309.11 1144.93 li
1309.09 1140.05 1309.07 1135.08 1309.06 1130.03 cv
1309.04 1124.99 1309.02 1119.86 1309.01 1114.65 cv
1308.99 1109.45 1308.97 1104.16 1308.96 1098.78 cv
1308.94 1093.4 1308.93 1087.94 1308.92 1082.38 cv
1305.09 1082.38 li
1305.25 1146.21 mo
1305.27 1151.09 1305.29 1155.89 1305.3 1160.62 cv
1305.32 1165.36 1305.34 1170.02 1305.36 1174.61 cv
1305.38 1179.21 1305.4 1183.73 1305.42 1188.19 cv
1305.44 1192.66 1305.46 1197.06 1305.48 1201.39 cv
1309.39 1201.39 li
1309.37 1197.06 1309.34 1192.66 1309.32 1188.19 cv
1309.29 1183.73 1309.27 1179.21 1309.24 1174.61 cv
1309.22 1170.02 1309.2 1165.36 1309.18 1160.62 cv
1309.16 1155.89 1309.14 1151.09 1309.12 1146.21 cv
1305.25 1146.21 li
1305.49 1202.54 mo
1305.5 1204.55 1305.51 1206.54 1305.52 1208.52 cv
1305.53 1210.51 1305.54 1212.47 1305.55 1214.43 cv
1305.56 1216.39 1305.58 1218.33 1305.59 1220.27 cv
1305.6 1222.2 1305.61 1224.12 1305.62 1226.03 cv
1305.64 1229.3 1305.66 1232.53 1305.68 1235.73 cv
1305.71 1238.94 1305.73 1242.11 1305.75 1245.25 cv
1305.77 1248.39 1305.8 1251.51 1305.82 1254.59 cv
1305.84 1257.68 1305.87 1260.75 1305.89 1263.78 cv
1309.89 1263.78 li
1309.86 1260.75 1309.83 1257.68 1309.8 1254.59 cv
1309.77 1251.51 1309.74 1248.39 1309.71 1245.25 cv
1309.69 1242.11 1309.66 1238.94 1309.64 1235.73 cv
1309.61 1232.53 1309.59 1229.3 1309.56 1226.03 cv
1309.55 1224.12 1309.53 1222.2 1309.52 1220.27 cv
1309.51 1218.33 1309.49 1216.39 1309.48 1214.43 cv
1309.47 1212.47 1309.45 1210.51 1309.44 1208.52 cv
1309.43 1206.54 1309.41 1204.55 1309.4 1202.54 cv
1305.49 1202.54 li
1305.9 1265.28 mo
1305.95 1270.94 1306 1276.51 1306.05 1281.98 cv
1306.1 1287.49 1306.16 1292.91 1306.21 1298.25 cv
1306.27 1303.63 1306.33 1308.93 1306.39 1314.17 cv
1306.45 1319.44 1306.51 1324.65 1306.58 1329.82 cv
1310.71 1329.82 li
1310.63 1324.65 1310.55 1319.44 1310.48 1314.17 cv
1310.41 1308.93 1310.34 1303.63 1310.27 1298.25 cv
1310.2 1292.91 1310.14 1287.49 1310.08 1281.98 cv
1310.02 1276.51 1309.96 1270.94 1309.9 1265.28 cv
1305.9 1265.28 li
1306.6 1331.17 mo
1306.66 1336.36 1306.73 1341.5 1306.8 1346.61 cv
1306.88 1351.75 1306.95 1356.86 1307.03 1361.95 cv
1307.11 1367.08 1307.19 1372.18 1307.28 1377.28 cv
1307.36 1382.43 1307.45 1387.56 1307.54 1392.71 cv
1311.87 1392.71 li
1311.76 1387.56 1311.65 1382.43 1311.55 1377.28 cv
1311.45 1372.18 1311.35 1367.08 1311.25 1361.95 cv
1311.16 1356.86 1311.07 1351.75 1310.98 1346.61 cv
1310.89 1341.5 1310.81 1336.36 1310.73 1331.17 cv
1306.6 1331.17 li
1307.57 1394.08 mo
1307.66 1399.27 1307.76 1404.48 1307.86 1409.71 cv
1307.96 1414.99 1308.07 1420.3 1308.17 1425.65 cv
1308.28 1431.06 1308.4 1436.51 1308.52 1442.02 cv
1308.64 1447.59 1308.76 1453.22 1308.89 1458.93 cv
1313.48 1458.94 li
1313.33 1453.22 1313.18 1447.59 1313.04 1442.02 cv
1312.9 1436.51 1312.76 1431.06 1312.63 1425.65 cv
1312.5 1420.3 1312.37 1414.99 1312.25 1409.71 cv
1312.13 1404.48 1312.01 1399.27 1311.9 1394.08 cv
1307.57 1394.08 li
1308.92 1460.46 mo
1309.05 1466.26 1309.19 1472.15 1309.33 1478.14 cv
1309.47 1484.2 1309.61 1490.38 1309.77 1496.68 cv
1309.92 1503.06 1310.08 1509.57 1310.24 1516.24 cv
1310.41 1523 1310.58 1529.93 1310.76 1537.03 cv
1315.74 1537.03 li
1315.52 1529.93 1315.31 1523 1315.11 1516.24 cv
1314.92 1509.57 1314.72 1503.06 1314.54 1496.68 cv
1314.36 1490.38 1314.18 1484.2 1314.01 1478.14 cv
1313.84 1472.15 1313.68 1466.26 1313.52 1460.46 cv
1308.92 1460.46 li
1310.81 1538.9 mo
1310.84 1539.93 1310.86 1540.95 1310.89 1541.98 cv
1310.91 1543.01 1310.94 1544.05 1310.97 1545.09 cv
1310.99 1546.13 1311.02 1547.17 1311.05 1548.22 cv
1311.07 1549.27 1311.1 1550.33 1311.13 1551.39 cv
1311.23 1555.27 1311.33 1559.21 1311.43 1563.2 cv
1311.54 1567.23 1311.64 1571.32 1311.75 1575.48 cv
1311.86 1579.67 1311.97 1583.92 1312.08 1588.25 cv
1312.2 1592.62 1312.31 1597.05 1312.43 1601.57 cv
1317.74 1601.57 li
1317.6 1597.05 1317.46 1592.62 1317.32 1588.25 cv
1317.19 1583.92 1317.05 1579.67 1316.92 1575.48 cv
1316.79 1571.32 1316.67 1567.23 1316.54 1563.2 cv
1316.42 1559.21 1316.3 1555.27 1316.18 1551.39 cv
1316.15 1550.33 1316.11 1549.27 1316.08 1548.22 cv
1316.05 1547.17 1316.02 1546.13 1315.98 1545.09 cv
1315.95 1544.05 1315.92 1543.01 1315.89 1541.98 cv
1315.86 1540.95 1315.83 1539.93 1315.8 1538.9 cv
1310.81 1538.9 li
1312.47 1602.95 mo
1312.61 1608.28 1312.75 1613.72 1312.9 1619.27 cv
1313.04 1624.89 1313.2 1630.62 1313.35 1636.48 cv
1313.51 1642.4 1313.67 1648.45 1313.83 1654.64 cv
1314 1660.91 1314.17 1667.31 1314.34 1673.87 cv
1320.04 1673.87 li
1319.83 1667.31 1319.63 1660.91 1319.43 1654.64 cv
1319.23 1648.45 1319.04 1642.4 1318.85 1636.48 cv
1318.66 1630.62 1318.48 1624.89 1318.3 1619.27 cv
1318.13 1613.72 1317.95 1608.28 1317.79 1602.95 cv
1312.47 1602.95 li
1314.39 1675.62 mo
1314.44 1677.61 1314.5 1679.62 1314.55 1681.64 cv
1314.6 1683.66 1314.66 1685.7 1314.71 1687.76 cv
1314.77 1689.82 1314.82 1691.9 1314.88 1693.99 cv
1314.93 1696.09 1314.99 1698.21 1315.05 1700.34 cv
1315.15 1704.34 1315.26 1708.4 1315.37 1712.52 cv
1315.48 1716.67 1315.59 1720.88 1315.71 1725.16 cv
1315.82 1729.47 1315.94 1733.84 1316.05 1738.28 cv
1316.17 1742.75 1316.29 1747.3 1316.42 1751.91 cv
1316.42 1751.98 1316.42 1752.06 1316.42 1752.13 cv
1316.42 1752.2 1316.43 1752.28 1316.43 1752.35 cv
1316.43 1752.42 1316.43 1752.5 1316.43 1752.57 cv
1316.43 1752.64 1316.44 1752.72 1316.44 1752.79 cv
1322.56 1752.79 li
1322.56 1752.72 1322.55 1752.64 1322.55 1752.57 cv
1322.55 1752.5 1322.55 1752.42 1322.54 1752.35 cv
1322.54 1752.28 1322.54 1752.2 1322.54 1752.13 cv
1322.54 1752.06 1322.53 1751.98 1322.53 1751.91 cv
1322.38 1747.3 1322.24 1742.75 1322.1 1738.28 cv
1321.96 1733.84 1321.82 1729.47 1321.68 1725.16 cv
1321.54 1720.88 1321.41 1716.67 1321.28 1712.52 cv
1321.14 1708.4 1321.01 1704.34 1320.89 1700.34 cv
1320.82 1698.21 1320.75 1696.09 1320.68 1693.99 cv
1320.62 1691.9 1320.55 1689.82 1320.48 1687.76 cv
1320.42 1685.7 1320.35 1683.66 1320.29 1681.64 cv
1320.22 1679.62 1320.16 1677.61 1320.1 1675.62 cv
1314.39 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1313.74 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1313.74 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1132.57 -21.4822 mo
1132.58 -21.3878 1132.58 -21.294 1132.58 -21.2002 cv
1132.58 -21.1058 1132.58 -21.0119 1132.58 -20.9181 cv
1132.58 -20.8243 1132.58 -20.7299 1132.58 -20.6361 cv
1132.58 -20.5422 1132.58 -20.4484 1132.58 -20.3546 cv
1132.64 -12.7937 1132.7 -5.28997 1132.76 2.15484 cv
1132.81 9.59484 1132.87 16.9759 1132.93 24.298 cv
1132.98 31.6141 1133.04 38.8713 1133.09 46.0677 cv
1133.15 53.2594 1133.2 60.3902 1133.26 67.4598 cv
1133.27 69.7848 1133.29 72.105 1133.31 74.421 cv
1133.33 76.7359 1133.35 79.0465 1133.36 81.3523 cv
1133.38 83.658 1133.4 85.9584 1133.42 88.2546 cv
1133.43 90.5502 1133.45 92.8415 1133.47 95.1275 cv
1137.32 95.1281 li
1137.3 92.8415 1137.28 90.5502 1137.27 88.2546 cv
1137.25 85.9584 1137.23 83.658 1137.22 81.3523 cv
1137.2 79.0465 1137.18 76.7359 1137.16 74.421 cv
1137.15 72.105 1137.13 69.7848 1137.11 67.4598 cv
1137.06 60.3902 1137.01 53.2594 1136.95 46.0677 cv
1136.9 38.8713 1136.84 31.6141 1136.79 24.298 cv
1136.73 16.9759 1136.68 9.59484 1136.62 2.15484 cv
1136.57 -5.28997 1136.51 -12.7937 1136.45 -20.3546 cv
1136.45 -20.4484 1136.45 -20.5422 1136.45 -20.6361 cv
1136.45 -20.7299 1136.45 -20.8243 1136.45 -20.9181 cv
1136.45 -21.0119 1136.45 -21.1058 1136.45 -21.2002 cv
1136.45 -21.294 1136.45 -21.3878 1136.45 -21.4822 cv
1132.57 -21.4816 li
1133.5 99.4191 mo
1133.63 115.562 1133.75 131.475 1133.87 147.162 cv
1133.99 162.824 1134.11 178.26 1134.22 193.475 cv
1134.34 208.667 1134.45 223.638 1134.56 238.392 cv
1134.67 253.125 1134.78 267.641 1134.89 281.945 cv
1138.7 281.945 li
1138.6 267.641 1138.49 253.125 1138.39 238.392 cv
1138.28 223.638 1138.16 208.667 1138.05 193.475 cv
1137.94 178.26 1137.82 162.824 1137.71 147.162 cv
1137.59 131.475 1137.47 115.562 1137.35 99.4191 cv
1133.5 99.4191 li
1134.92 285.731 mo
1135.03 299.976 1135.13 314.011 1135.23 327.837 cv
1135.34 341.645 1135.44 355.247 1135.53 368.646 cv
1135.63 382.028 1135.73 395.208 1135.82 408.19 cv
1135.91 421.157 1136 433.926 1136.09 446.501 cv
1139.87 446.502 li
1139.79 433.926 1139.7 421.157 1139.61 408.19 cv
1139.52 395.208 1139.43 382.028 1139.33 368.646 cv
1139.24 355.247 1139.14 341.645 1139.04 327.837 cv
1138.94 314.011 1138.84 299.976 1138.73 285.731 cv
1134.92 285.732 li
1136.11 449.769 mo
1136.2 462.3 1136.29 474.639 1136.37 486.789 cv
1136.45 498.926 1136.53 510.875 1136.61 522.64 cv
1136.68 534.392 1136.76 545.962 1136.83 557.352 cv
1136.9 568.731 1136.97 579.931 1137.04 590.955 cv
1140.79 590.956 li
1140.73 579.931 1140.66 568.731 1140.59 557.352 cv
1140.52 545.962 1140.45 534.392 1140.38 522.64 cv
1140.3 510.875 1140.22 498.926 1140.14 486.789 cv
1140.06 474.639 1139.98 462.3 1139.9 449.769 cv
1136.11 449.769 li
1137.05 593.822 mo
1137.12 604.801 1137.18 615.607 1137.24 626.242 cv
1137.3 636.869 1137.36 647.326 1137.41 657.616 cv
1137.47 667.9 1137.52 678.018 1137.56 687.975 cv
1137.61 697.924 1137.66 707.714 1137.7 717.345 cv
1141.44 717.345 li
1141.4 707.714 1141.36 697.924 1141.31 687.975 cv
1141.26 678.018 1141.21 667.9 1141.16 657.616 cv
1141.11 647.326 1141.05 636.869 1141 626.242 cv
1140.94 615.607 1140.88 604.801 1140.81 593.822 cv
1137.05 593.823 li
1137.71 719.895 mo
1137.75 729.493 1137.79 738.935 1137.83 748.223 cv
1137.86 757.508 1137.89 766.639 1137.92 775.622 cv
1137.95 784.602 1137.97 793.434 1138 802.12 cv
1138.02 810.804 1138.04 819.345 1138.05 827.744 cv
1141.78 827.745 li
1141.77 819.345 1141.75 810.804 1141.73 802.12 cv
1141.71 793.434 1141.68 784.602 1141.66 775.622 cv
1141.63 766.639 1141.6 757.508 1141.56 748.223 cv
1141.53 738.935 1141.49 729.493 1141.45 719.895 cv
1137.71 719.895 li
1138.05 829.928 mo
1138.07 838.304 1138.08 846.541 1138.09 854.641 cv
1138.09 862.741 1138.1 870.705 1138.1 878.536 cv
1138.1 886.367 1138.09 894.067 1138.09 901.638 cv
1138.08 909.209 1138.07 916.653 1138.05 923.973 cv
1141.79 923.973 li
1141.8 916.653 1141.81 909.209 1141.82 901.638 cv
1141.83 894.067 1141.83 886.367 1141.83 878.536 cv
1141.83 870.705 1141.83 862.741 1141.82 854.641 cv
1141.81 846.541 1141.8 838.304 1141.79 829.928 cv
1138.05 829.928 li
1138.05 925.877 mo
1138.03 933.173 1138.02 940.345 1137.99 947.397 cv
1137.97 954.452 1137.94 961.387 1137.91 968.205 cv
1137.88 975.026 1137.84 981.731 1137.8 988.324 cv
1137.76 994.919 1137.72 1001.4 1137.67 1007.78 cv
1141.42 1007.78 li
1141.46 1001.4 1141.51 994.919 1141.54 988.324 cv
1141.58 981.731 1141.62 975.026 1141.65 968.205 cv
1141.68 961.387 1141.7 954.452 1141.73 947.397 cv
1141.75 940.345 1141.77 933.173 1141.78 925.877 cv
1138.05 925.877 li
1137.66 1009.47 mo
1137.61 1015.83 1137.56 1022.08 1137.5 1028.22 cv
1137.44 1034.38 1137.38 1040.42 1137.32 1046.37 cv
1137.25 1052.32 1137.18 1058.17 1137.1 1063.92 cv
1137.03 1069.68 1136.95 1075.34 1136.86 1080.91 cv
1140.62 1080.91 li
1140.71 1075.34 1140.79 1069.68 1140.86 1063.92 cv
1140.93 1058.17 1141 1052.32 1141.07 1046.37 cv
1141.13 1040.42 1141.19 1034.38 1141.25 1028.22 cv
1141.3 1022.08 1141.36 1015.83 1141.4 1009.47 cv
1137.66 1009.47 li
1136.84 1082.38 mo
1136.75 1087.94 1136.66 1093.4 1136.57 1098.78 cv
1136.47 1104.16 1136.37 1109.45 1136.26 1114.65 cv
1136.16 1119.86 1136.05 1124.99 1135.93 1130.03 cv
1135.81 1135.08 1135.69 1140.05 1135.57 1144.93 cv
1139.36 1144.93 li
1139.49 1140.05 1139.6 1135.08 1139.72 1130.03 cv
1139.83 1124.99 1139.94 1119.86 1140.04 1114.65 cv
1140.15 1109.45 1140.24 1104.16 1140.34 1098.78 cv
1140.43 1093.4 1140.52 1087.94 1140.6 1082.38 cv
1136.84 1082.38 li
1135.53 1146.21 mo
1135.4 1151.09 1135.27 1155.89 1135.13 1160.62 cv
1134.99 1165.36 1134.85 1170.02 1134.7 1174.61 cv
1134.55 1179.21 1134.39 1183.73 1134.23 1188.19 cv
1134.06 1192.66 1133.9 1197.06 1133.72 1201.39 cv
1137.56 1201.39 li
1137.73 1197.06 1137.9 1192.66 1138.06 1188.19 cv
1138.22 1183.73 1138.37 1179.21 1138.51 1174.61 cv
1138.66 1170.02 1138.8 1165.36 1138.94 1160.62 cv
1139.07 1155.89 1139.2 1151.09 1139.33 1146.21 cv
1135.53 1146.21 li
1133.67 1202.54 mo
1133.59 1204.55 1133.51 1206.54 1133.42 1208.52 cv
1133.34 1210.51 1133.25 1212.47 1133.17 1214.43 cv
1133.08 1216.39 1132.99 1218.33 1132.9 1220.27 cv
1132.81 1222.2 1132.72 1224.12 1132.63 1226.03 cv
1132.47 1229.3 1132.31 1232.53 1132.14 1235.73 cv
1131.97 1238.94 1131.8 1242.11 1131.62 1245.25 cv
1131.45 1248.39 1131.26 1251.51 1131.08 1254.59 cv
1130.89 1257.68 1130.7 1260.75 1130.51 1263.78 cv
1134.43 1263.78 li
1134.62 1260.75 1134.81 1257.68 1134.99 1254.59 cv
1135.17 1251.51 1135.35 1248.39 1135.52 1245.25 cv
1135.69 1242.11 1135.86 1238.94 1136.02 1235.73 cv
1136.18 1232.53 1136.34 1229.3 1136.5 1226.03 cv
1136.59 1224.12 1136.68 1222.2 1136.77 1220.27 cv
1136.85 1218.33 1136.94 1216.39 1137.02 1214.43 cv
1137.11 1212.47 1137.19 1210.51 1137.27 1208.52 cv
1137.36 1206.54 1137.44 1204.55 1137.52 1202.54 cv
1133.67 1202.54 li
1130.41 1265.28 mo
1130.04 1270.94 1129.66 1276.51 1129.26 1281.98 cv
1128.85 1287.49 1128.43 1292.91 1128 1298.25 cv
1127.56 1303.63 1127.1 1308.93 1126.62 1314.17 cv
1126.14 1319.44 1125.64 1324.65 1125.12 1329.82 cv
1129.18 1329.82 li
1129.69 1324.65 1130.17 1319.44 1130.64 1314.17 cv
1131.11 1308.93 1131.55 1303.63 1131.98 1298.25 cv
1132.41 1292.91 1132.82 1287.49 1133.21 1281.98 cv
1133.6 1276.51 1133.98 1270.94 1134.34 1265.28 cv
1130.41 1265.28 li
1124.99 1331.17 mo
1124.46 1336.36 1123.91 1341.5 1123.35 1346.61 cv
1122.77 1351.75 1122.18 1356.86 1121.57 1361.95 cv
1120.94 1367.08 1120.3 1372.18 1119.63 1377.28 cv
1118.96 1382.43 1118.26 1387.56 1117.54 1392.71 cv
1121.79 1392.71 li
1122.5 1387.56 1123.18 1382.43 1123.83 1377.28 cv
1124.48 1372.18 1125.11 1367.08 1125.71 1361.95 cv
1126.31 1356.86 1126.89 1351.75 1127.45 1346.61 cv
1128 1341.5 1128.54 1336.36 1129.05 1331.17 cv
1124.99 1331.17 li
1117.35 1394.08 mo
1116.61 1399.27 1115.85 1404.48 1115.06 1409.71 cv
1114.27 1414.99 1113.44 1420.3 1112.59 1425.65 cv
1111.72 1431.06 1110.83 1436.51 1109.9 1442.02 cv
1108.97 1447.59 1108 1453.22 1106.99 1458.93 cv
1111.51 1458.94 li
1112.49 1453.22 1113.43 1447.59 1114.34 1442.02 cv
1115.25 1436.51 1116.12 1431.06 1116.96 1425.65 cv
1117.79 1420.3 1118.6 1414.99 1119.38 1409.71 cv
1120.14 1404.48 1120.89 1399.27 1121.6 1394.08 cv
1117.35 1394.08 li
1106.72 1460.46 mo
1105.7 1466.26 1104.64 1472.15 1103.54 1478.14 cv
1102.43 1484.2 1101.28 1490.38 1100.09 1496.68 cv
1098.88 1503.06 1097.63 1509.57 1096.34 1516.24 cv
1095.02 1523 1093.66 1529.93 1092.25 1537.03 cv
1097.14 1537.03 li
1098.52 1529.93 1099.84 1523 1101.12 1516.24 cv
1102.39 1509.57 1103.6 1503.06 1104.78 1496.68 cv
1105.94 1490.38 1107.06 1484.2 1108.15 1478.14 cv
1109.22 1472.15 1110.25 1466.26 1111.25 1460.46 cv
1106.72 1460.46 li
1091.88 1538.9 mo
1091.68 1539.93 1091.47 1540.95 1091.27 1541.98 cv
1091.06 1543.01 1090.85 1544.05 1090.65 1545.09 cv
1090.44 1546.13 1090.23 1547.17 1090.02 1548.22 cv
1089.81 1549.27 1089.6 1550.33 1089.38 1551.39 cv
1088.6 1555.27 1087.81 1559.21 1087 1563.2 cv
1086.18 1567.23 1085.35 1571.32 1084.51 1575.48 cv
1083.65 1579.67 1082.78 1583.92 1081.89 1588.25 cv
1081 1592.62 1080.08 1597.05 1079.15 1601.57 cv
1084.37 1601.57 li
1085.28 1597.05 1086.17 1592.62 1087.04 1588.25 cv
1087.91 1583.92 1088.76 1579.67 1089.59 1575.48 cv
1090.42 1571.32 1091.23 1567.23 1092.02 1563.2 cv
1092.81 1559.21 1093.58 1555.27 1094.34 1551.39 cv
1094.55 1550.33 1094.76 1549.27 1094.96 1548.22 cv
1095.17 1547.17 1095.37 1546.13 1095.58 1545.09 cv
1095.78 1544.05 1095.98 1543.01 1096.18 1541.98 cv
1096.38 1540.95 1096.58 1539.93 1096.78 1538.9 cv
1091.88 1538.9 li
1078.87 1602.95 mo
1077.77 1608.28 1076.65 1613.72 1075.5 1619.27 cv
1074.33 1624.89 1073.14 1630.62 1071.93 1636.48 cv
1070.69 1642.4 1069.43 1648.45 1068.14 1654.64 cv
1066.84 1660.91 1065.5 1667.31 1064.14 1673.87 cv
1069.73 1673.87 li
1071.07 1667.31 1072.37 1660.91 1073.64 1654.64 cv
1074.9 1648.45 1076.13 1642.4 1077.33 1636.48 cv
1078.51 1630.62 1079.67 1624.89 1080.81 1619.27 cv
1081.93 1613.72 1083.02 1608.28 1084.1 1602.95 cv
1078.87 1602.95 li
1063.77 1675.62 mo
1063.35 1677.61 1062.94 1679.62 1062.51 1681.64 cv
1062.09 1683.66 1061.67 1685.7 1061.24 1687.76 cv
1060.81 1689.82 1060.37 1691.9 1059.94 1693.99 cv
1059.5 1696.09 1059.06 1698.21 1058.61 1700.34 cv
1057.77 1704.34 1056.93 1708.4 1056.07 1712.52 cv
1055.2 1716.67 1054.32 1720.88 1053.43 1725.16 cv
1052.53 1729.47 1051.62 1733.84 1050.7 1738.28 cv
1049.76 1742.75 1048.82 1747.3 1047.86 1751.91 cv
1047.84 1751.98 1047.83 1752.06 1047.81 1752.13 cv
1047.8 1752.2 1047.78 1752.28 1047.77 1752.35 cv
1047.75 1752.42 1047.74 1752.5 1047.72 1752.57 cv
1047.71 1752.64 1047.69 1752.72 1047.68 1752.79 cv
1053.69 1752.79 li
1053.7 1752.72 1053.72 1752.64 1053.73 1752.57 cv
1053.75 1752.5 1053.76 1752.42 1053.78 1752.35 cv
1053.79 1752.28 1053.81 1752.2 1053.82 1752.13 cv
1053.84 1752.06 1053.85 1751.98 1053.87 1751.91 cv
1054.8 1747.3 1055.72 1742.75 1056.63 1738.28 cv
1057.53 1733.84 1058.42 1729.47 1059.3 1725.16 cv
1060.17 1720.88 1061.02 1716.67 1061.87 1712.52 cv
1062.71 1708.4 1063.53 1704.34 1064.35 1700.34 cv
1064.78 1698.21 1065.21 1696.09 1065.64 1693.99 cv
1066.07 1691.9 1066.49 1689.82 1066.91 1687.76 cv
1067.33 1685.7 1067.74 1683.66 1068.15 1681.64 cv
1068.56 1679.62 1068.97 1677.61 1069.38 1675.62 cv
1063.77 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1094.75 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 1094.75 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
959.521 -21.4822 mo
959.522 -21.3878 959.524 -21.294 959.525 -21.2002 cv
959.527 -21.1058 959.528 -21.0119 959.53 -20.9181 cv
959.531 -20.8243 959.533 -20.7299 959.534 -20.6361 cv
959.536 -20.5422 959.537 -20.4484 959.539 -20.3546 cv
959.662 -12.7937 959.784 -5.28997 959.906 2.15484 cv
960.027 9.59484 960.147 16.9759 960.267 24.298 cv
960.387 31.6141 960.505 38.8713 960.622 46.0677 cv
960.74 53.2594 960.856 60.3902 960.972 67.4598 cv
961.01 69.7848 961.048 72.105 961.086 74.421 cv
961.123 76.7359 961.161 79.0465 961.199 81.3523 cv
961.236 83.658 961.274 85.9584 961.312 88.2546 cv
961.349 90.5502 961.386 92.8415 961.424 95.1275 cv
965.269 95.1281 li
965.232 92.8415 965.195 90.5502 965.158 88.2546 cv
965.121 85.9584 965.084 83.658 965.047 81.3523 cv
965.01 79.0465 964.972 76.7359 964.935 74.421 cv
964.898 72.105 964.86 69.7848 964.823 67.4598 cv
964.708 60.3902 964.594 53.2594 964.477 46.0677 cv
964.361 38.8713 964.244 31.6141 964.126 24.298 cv
964.008 16.9759 963.889 9.59484 963.769 2.15484 cv
963.649 -5.28997 963.528 -12.7937 963.406 -20.3546 cv
963.405 -20.4484 963.403 -20.5422 963.402 -20.6361 cv
963.4 -20.7299 963.399 -20.8243 963.397 -20.9181 cv
963.396 -21.0119 963.394 -21.1058 963.393 -21.2002 cv
963.391 -21.294 963.39 -21.3878 963.388 -21.4822 cv
959.52 -21.4816 li
961.494 99.4191 mo
961.757 115.562 962.017 131.475 962.272 147.162 cv
962.528 162.824 962.779 178.26 963.025 193.475 cv
963.272 208.667 963.513 223.638 963.751 238.392 cv
963.989 253.125 964.221 267.641 964.45 281.945 cv
968.259 281.945 li
968.034 267.641 967.803 253.125 967.569 238.392 cv
967.334 223.638 967.095 208.667 966.851 193.475 cv
966.608 178.26 966.36 162.824 966.107 147.162 cv
965.855 131.475 965.598 115.562 965.338 99.4191 cv
961.494 99.4191 li
964.51 285.731 mo
964.737 299.976 964.96 314.011 965.177 327.837 cv
965.395 341.645 965.607 355.247 965.816 368.646 cv
966.023 382.028 966.226 395.208 966.423 408.19 cv
966.62 421.157 966.813 433.926 966.999 446.501 cv
970.778 446.502 li
970.594 433.926 970.404 421.157 970.209 408.19 cv
970.014 395.208 969.814 382.028 969.609 368.646 cv
969.404 355.247 969.193 341.645 968.978 327.837 cv
968.763 314.011 968.543 299.976 968.319 285.731 cv
964.51 285.732 li
967.048 449.769 mo
967.234 462.3 967.414 474.639 967.589 486.789 cv
967.764 498.926 967.934 510.875 968.098 522.64 cv
968.262 534.392 968.42 545.962 968.572 557.352 cv
968.724 568.731 968.871 579.931 969.011 590.955 cv
972.767 590.956 li
972.628 579.931 972.483 568.731 972.332 557.352 cv
972.182 545.962 972.026 534.392 971.864 522.64 cv
971.702 510.875 971.534 498.926 971.362 486.789 cv
971.189 474.639 971.01 462.3 970.826 449.769 cv
967.048 449.769 li
969.048 593.822 mo
969.187 604.801 969.321 615.607 969.448 626.242 cv
969.575 636.869 969.696 647.326 969.811 657.616 cv
969.926 667.9 970.034 678.018 970.136 687.975 cv
970.238 697.924 970.334 707.714 970.423 717.345 cv
974.161 717.345 li
974.073 707.714 973.979 697.924 973.878 687.975 cv
973.778 678.018 973.67 667.9 973.557 657.616 cv
973.443 647.326 973.324 636.869 973.198 626.242 cv
973.072 615.607 972.94 604.801 972.803 593.822 cv
969.048 593.823 li
970.446 719.895 mo
970.534 729.493 970.615 738.935 970.689 748.223 cv
970.763 757.508 970.831 766.639 970.891 775.622 cv
970.952 784.602 971.006 793.434 971.052 802.12 cv
971.098 810.804 971.137 819.345 971.169 827.744 cv
974.899 827.745 li
974.867 819.345 974.829 810.804 974.783 802.12 cv
974.737 793.434 974.685 784.602 974.624 775.622 cv
974.565 766.639 974.498 757.508 974.425 748.223 cv
974.351 738.935 974.271 729.493 974.185 719.895 cv
970.446 719.895 li
971.177 829.928 mo
971.208 838.304 971.231 846.541 971.246 854.641 cv
971.262 862.741 971.27 870.705 971.27 878.536 cv
971.27 886.367 971.263 894.067 971.247 901.638 cv
971.232 909.209 971.209 916.653 971.177 923.973 cv
974.907 923.973 li
974.938 916.653 974.961 909.209 974.977 901.638 cv
974.992 894.067 974.999 886.367 974.999 878.536 cv
974.998 870.705 974.991 862.741 974.976 854.641 cv
974.96 846.541 974.937 838.304 974.907 829.928 cv
971.177 829.928 li
971.169 925.877 mo
971.136 933.173 971.095 940.345 971.045 947.397 cv
970.995 954.452 970.938 961.387 970.871 968.205 cv
970.804 975.026 970.729 981.731 970.645 988.324 cv
970.561 994.919 970.468 1001.4 970.366 1007.78 cv
974.105 1007.78 li
974.206 1001.4 974.298 994.919 974.381 988.324 cv
974.464 981.731 974.538 975.026 974.605 968.205 cv
974.67 961.387 974.727 954.452 974.777 947.397 cv
974.825 940.345 974.866 933.173 974.899 925.877 cv
971.169 925.877 li
970.339 1009.47 mo
970.235 1015.83 970.122 1022.08 970 1028.22 cv
969.878 1034.38 969.746 1040.42 969.605 1046.37 cv
969.464 1052.32 969.313 1058.17 969.152 1063.92 cv
968.991 1069.68 968.82 1075.34 968.639 1080.91 cv
972.399 1080.91 li
972.578 1075.34 972.747 1069.68 972.906 1063.92 cv
973.065 1058.17 973.214 1052.32 973.354 1046.37 cv
973.493 1040.42 973.623 1034.38 973.744 1028.22 cv
973.865 1022.08 973.976 1015.83 974.078 1009.47 cv
970.339 1009.47 li
968.591 1082.38 mo
968.408 1087.94 968.215 1093.4 968.011 1098.78 cv
967.807 1104.16 967.593 1109.45 967.368 1114.65 cv
967.143 1119.86 966.907 1124.99 966.659 1130.03 cv
966.412 1135.08 966.153 1140.05 965.883 1144.93 cv
969.675 1144.93 li
969.942 1140.05 970.197 1135.08 970.442 1130.03 cv
970.687 1124.99 970.92 1119.86 971.143 1114.65 cv
971.365 1109.45 971.577 1104.16 971.779 1098.78 cv
971.98 1093.4 972.171 1087.94 972.352 1082.38 cv
968.591 1082.38 li
965.812 1146.21 mo
965.54 1151.09 965.255 1155.89 964.96 1160.62 cv
964.663 1165.36 964.355 1170.02 964.035 1174.61 cv
963.714 1179.21 963.38 1183.73 963.035 1188.19 cv
962.689 1192.66 962.33 1197.06 961.958 1201.39 cv
965.796 1201.39 li
966.164 1197.06 966.519 1192.66 966.861 1188.19 cv
967.202 1183.73 967.532 1179.21 967.849 1174.61 cv
968.165 1170.02 968.47 1165.36 968.763 1160.62 cv
969.055 1155.89 969.336 1151.09 969.605 1146.21 cv
965.812 1146.21 li
961.859 1202.54 mo
961.685 1204.55 961.508 1206.54 961.329 1208.52 cv
961.149 1210.51 960.967 1212.47 960.782 1214.43 cv
960.596 1216.39 960.408 1218.33 960.216 1220.27 cv
960.025 1222.2 959.83 1224.12 959.633 1226.03 cv
959.295 1229.3 958.948 1232.53 958.592 1235.73 cv
958.235 1238.94 957.869 1242.11 957.495 1245.25 cv
957.119 1248.39 956.733 1251.51 956.339 1254.59 cv
955.943 1257.68 955.538 1260.75 955.123 1263.78 cv
959.043 1263.78 li
959.453 1260.75 959.853 1257.68 960.244 1254.59 cv
960.634 1251.51 961.015 1248.39 961.386 1245.25 cv
961.757 1242.11 962.118 1238.94 962.471 1235.73 cv
962.822 1232.53 963.165 1229.3 963.499 1226.03 cv
963.694 1224.12 963.886 1222.2 964.076 1220.27 cv
964.265 1218.33 964.451 1216.39 964.634 1214.43 cv
964.817 1212.47 964.998 1210.51 965.175 1208.52 cv
965.352 1206.54 965.527 1204.55 965.699 1202.54 cv
961.858 1202.54 li
954.916 1265.28 mo
954.134 1270.94 953.316 1276.51 952.463 1281.98 cv
951.606 1287.49 950.712 1292.91 949.78 1298.25 cv
948.844 1303.63 947.868 1308.93 946.853 1314.17 cv
945.833 1319.44 944.771 1324.65 943.667 1329.82 cv
947.722 1329.82 li
948.813 1324.65 949.863 1319.44 950.871 1314.17 cv
951.874 1308.93 952.838 1303.63 953.763 1298.25 cv
954.684 1292.91 955.567 1287.49 956.414 1281.98 cv
957.258 1276.51 958.065 1270.94 958.839 1265.28 cv
954.916 1265.28 li
943.377 1331.17 mo
942.258 1336.36 941.095 1341.5 939.888 1346.61 cv
938.672 1351.75 937.41 1356.86 936.1 1361.95 cv
934.78 1367.08 933.411 1372.18 931.991 1377.28 cv
930.56 1382.43 929.076 1387.56 927.537 1392.71 cv
931.783 1392.71 li
933.304 1387.56 934.77 1382.43 936.185 1377.28 cv
937.588 1372.18 938.941 1367.08 940.245 1361.95 cv
941.54 1356.86 942.787 1351.75 943.988 1346.61 cv
945.181 1341.5 946.331 1336.36 947.436 1331.17 cv
943.377 1331.17 li
927.125 1394.08 mo
925.562 1399.27 923.943 1404.48 922.264 1409.71 cv
920.57 1414.99 918.815 1420.3 916.996 1425.65 cv
915.16 1431.06 913.258 1436.51 911.287 1442.02 cv
909.296 1447.59 907.234 1453.22 905.098 1458.93 cv
909.61 1458.94 li
911.721 1453.22 913.759 1447.59 915.726 1442.02 cv
917.674 1436.51 919.553 1431.06 921.368 1425.65 cv
923.165 1420.3 924.899 1414.99 926.573 1409.71 cv
928.232 1404.48 929.832 1399.27 931.377 1394.08 cv
927.125 1394.08 li
904.525 1460.46 mo
902.349 1466.26 900.096 1472.15 897.761 1478.14 cv
895.399 1484.2 892.952 1490.38 890.416 1496.68 cv
887.848 1503.06 885.188 1509.57 882.431 1516.24 cv
879.636 1523 876.741 1529.93 873.74 1537.03 cv
878.623 1537.03 li
881.589 1529.93 884.451 1523 887.212 1516.24 cv
889.936 1509.57 892.565 1503.06 895.102 1496.68 cv
897.608 1490.38 900.026 1484.2 902.361 1478.14 cv
904.667 1472.15 906.894 1466.26 909.045 1460.46 cv
904.525 1460.46 li
872.948 1538.9 mo
872.516 1539.93 872.082 1540.95 871.646 1541.98 cv
871.208 1543.01 870.768 1544.05 870.326 1545.09 cv
869.883 1546.13 869.438 1547.17 868.99 1548.22 cv
868.542 1549.27 868.091 1550.33 867.638 1551.39 cv
865.98 1555.27 864.291 1559.21 862.569 1563.2 cv
860.833 1567.23 859.065 1571.32 857.262 1575.48 cv
855.445 1579.67 853.592 1583.92 851.703 1588.25 cv
849.799 1592.62 847.857 1597.05 845.878 1601.57 cv
851.091 1601.57 li
853.047 1597.05 854.966 1592.62 856.849 1588.25 cv
858.714 1583.92 860.545 1579.67 862.341 1575.48 cv
864.123 1571.32 865.87 1567.23 867.585 1563.2 cv
869.286 1559.21 870.956 1555.27 872.595 1551.39 cv
873.042 1550.33 873.488 1549.27 873.93 1548.22 cv
874.373 1547.17 874.813 1546.13 875.25 1545.09 cv
875.687 1544.05 876.122 1543.01 876.554 1541.98 cv
876.985 1540.95 877.414 1539.93 877.842 1538.9 cv
872.948 1538.9 li
845.273 1602.95 mo
842.933 1608.28 840.541 1613.72 838.094 1619.27 cv
835.62 1624.89 833.088 1630.62 830.499 1636.48 cv
827.879 1642.4 825.199 1648.45 822.455 1654.64 cv
819.679 1660.91 816.838 1667.31 813.929 1673.87 cv
819.52 1673.87 li
822.395 1667.31 825.203 1660.91 827.947 1654.64 cv
830.657 1648.45 833.306 1642.4 835.894 1636.48 cv
838.454 1630.62 840.955 1624.89 843.4 1619.27 cv
845.818 1613.72 848.182 1608.28 850.493 1602.95 cv
845.272 1602.95 li
813.15 1675.62 mo
812.266 1677.61 811.376 1679.62 810.48 1681.64 cv
809.58 1683.66 808.674 1685.7 807.761 1687.76 cv
806.845 1689.82 805.923 1691.9 804.993 1693.99 cv
804.06 1696.09 803.121 1698.21 802.174 1700.34 cv
800.396 1704.34 798.593 1708.4 796.763 1712.52 cv
794.921 1716.67 793.051 1720.88 791.154 1725.16 cv
789.243 1729.47 787.305 1733.84 785.338 1738.28 cv
783.355 1742.75 781.344 1747.3 779.304 1751.91 cv
779.271 1751.98 779.239 1752.06 779.206 1752.13 cv
779.174 1752.2 779.142 1752.28 779.11 1752.35 cv
779.077 1752.42 779.045 1752.5 779.012 1752.57 cv
778.98 1752.64 778.948 1752.72 778.915 1752.79 cv
784.922 1752.79 li
784.954 1752.72 784.986 1752.64 785.018 1752.57 cv
785.05 1752.5 785.082 1752.42 785.114 1752.35 cv
785.146 1752.28 785.178 1752.2 785.21 1752.13 cv
785.242 1752.06 785.274 1751.98 785.306 1751.91 cv
787.322 1747.3 789.31 1742.75 791.269 1738.28 cv
793.212 1733.84 795.128 1729.47 797.016 1725.16 cv
798.89 1720.88 800.738 1716.67 802.559 1712.52 cv
804.366 1708.4 806.149 1704.34 807.905 1700.34 cv
808.841 1698.21 809.769 1696.09 810.691 1693.99 cv
811.61 1691.9 812.521 1689.82 813.426 1687.76 cv
814.328 1685.7 815.224 1683.66 816.113 1681.64 cv
816.999 1679.62 817.878 1677.61 818.751 1675.62 cv
813.15 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 876.957 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 876.957 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
786.394 -21.4822 mo
786.396 -21.3878 786.398 -21.294 786.4 -21.2002 cv
786.403 -21.1058 786.405 -21.0119 786.408 -20.9181 cv
786.41 -20.8243 786.412 -20.7299 786.415 -20.6361 cv
786.417 -20.5422 786.419 -20.4484 786.421 -20.3546 cv
786.61 -12.7937 786.797 -5.28997 786.983 2.15484 cv
787.169 9.59484 787.353 16.9759 787.536 24.298 cv
787.719 31.6141 787.9 38.8713 788.08 46.0677 cv
788.26 53.2594 788.438 60.3902 788.615 67.4598 cv
788.673 69.7848 788.731 72.105 788.789 74.421 cv
788.846 76.7359 788.904 79.0465 788.962 81.3523 cv
789.02 83.658 789.077 85.9584 789.134 88.2546 cv
789.192 90.5502 789.249 92.8415 789.306 95.1275 cv
793.223 95.1281 li
793.167 92.8415 793.11 90.5502 793.053 88.2546 cv
792.996 85.9584 792.939 83.658 792.882 81.3523 cv
792.825 79.0465 792.767 76.7359 792.71 74.421 cv
792.653 72.105 792.595 69.7848 792.538 67.4598 cv
792.362 60.3902 792.185 53.2594 792.007 46.0677 cv
791.829 38.8713 791.648 31.6141 791.467 24.298 cv
791.286 16.9759 791.103 9.59484 790.919 2.15484 cv
790.734 -5.28997 790.549 -12.7937 790.362 -20.3546 cv
790.359 -20.4484 790.357 -20.5422 790.355 -20.6361 cv
790.352 -20.7299 790.35 -20.8243 790.348 -20.9181 cv
790.346 -21.0119 790.343 -21.1058 790.341 -21.2002 cv
790.338 -21.294 790.336 -21.3878 790.334 -21.4822 cv
786.393 -21.4816 li
789.413 99.4191 mo
789.816 115.562 790.213 131.475 790.604 147.162 cv
790.995 162.824 791.379 178.26 791.757 193.475 cv
792.133 208.667 792.503 223.638 792.867 238.392 cv
793.231 253.125 793.587 267.641 793.936 281.945 cv
797.817 281.945 li
797.47 267.641 797.117 253.125 796.757 238.392 cv
796.396 223.638 796.028 208.667 795.654 193.475 cv
795.28 178.26 794.899 162.824 794.512 147.162 cv
794.124 131.475 793.73 115.562 793.33 99.4191 cv
789.413 99.4191 li
794.029 285.731 mo
794.376 299.976 794.717 314.011 795.05 327.837 cv
795.382 341.645 795.708 355.247 796.026 368.646 cv
796.343 382.028 796.653 395.208 796.956 408.19 cv
797.258 421.157 797.552 433.926 797.837 446.501 cv
801.688 446.502 li
801.404 433.926 801.112 421.157 800.813 408.19 cv
800.513 395.208 800.205 382.028 799.891 368.646 cv
799.575 355.247 799.252 341.645 798.922 327.837 cv
798.591 314.011 798.253 299.976 797.909 285.731 cv
794.029 285.732 li
797.912 449.769 mo
798.196 462.3 798.472 474.639 798.74 486.789 cv
799.008 498.926 799.267 510.875 799.518 522.64 cv
799.768 534.392 800.011 545.962 800.244 557.352 cv
800.477 568.731 800.701 579.931 800.916 590.955 cv
804.741 590.956 li
804.529 579.931 804.306 568.731 804.075 557.352 cv
803.844 545.962 803.604 534.392 803.355 522.64 cv
803.106 510.875 802.849 498.926 802.583 486.789 cv
802.317 474.639 802.043 462.3 801.761 449.769 cv
797.912 449.769 li
800.972 593.822 mo
801.185 604.801 801.389 615.607 801.584 626.242 cv
801.778 636.869 801.964 647.326 802.14 657.616 cv
802.315 667.9 802.481 678.018 802.637 687.975 cv
802.794 697.924 802.94 707.714 803.076 717.345 cv
806.884 717.345 li
806.75 707.714 806.605 697.924 806.449 687.975 cv
806.295 678.018 806.13 667.9 805.956 657.616 cv
805.781 647.326 805.597 636.869 805.404 626.242 cv
805.211 615.607 805.008 604.801 804.797 593.822 cv
800.971 593.823 li
803.112 719.895 mo
803.246 729.493 803.37 738.935 803.483 748.223 cv
803.597 757.508 803.7 766.639 803.793 775.622 cv
803.886 784.602 803.967 793.434 804.038 802.12 cv
804.109 810.804 804.169 819.345 804.218 827.744 cv
808.017 827.745 li
807.969 819.345 807.91 810.804 807.839 802.12 cv
807.769 793.434 807.688 784.602 807.596 775.622 cv
807.504 766.639 807.402 757.508 807.289 748.223 cv
807.177 738.935 807.053 729.493 806.92 719.895 cv
803.112 719.895 li
804.23 829.928 mo
804.277 838.304 804.312 846.541 804.336 854.641 cv
804.36 862.741 804.372 870.705 804.373 878.536 cv
804.373 886.367 804.361 894.067 804.338 901.638 cv
804.314 909.209 804.278 916.653 804.23 923.973 cv
808.03 923.973 li
808.078 916.653 808.114 909.209 808.137 901.638 cv
808.16 894.067 808.172 886.367 808.171 878.536 cv
808.171 870.705 808.159 862.741 808.135 854.641 cv
808.111 846.541 808.076 838.304 808.03 829.928 cv
804.23 829.928 li
804.218 925.877 mo
804.167 933.173 804.104 940.345 804.028 947.397 cv
803.952 954.452 803.863 961.387 803.762 968.205 cv
803.66 975.026 803.545 981.731 803.416 988.324 cv
803.287 994.919 803.145 1001.4 802.989 1007.78 cv
806.798 1007.78 li
806.953 1001.4 807.095 994.919 807.222 988.324 cv
807.35 981.731 807.464 975.026 807.565 968.205 cv
807.666 961.387 807.754 954.452 807.83 947.397 cv
807.905 940.345 807.967 933.173 808.017 925.877 cv
804.217 925.877 li
802.948 1009.47 mo
802.789 1015.83 802.616 1022.08 802.429 1028.22 cv
802.242 1034.38 802.041 1040.42 801.825 1046.37 cv
801.608 1052.32 801.377 1058.17 801.131 1063.92 cv
800.885 1069.68 800.624 1075.34 800.347 1080.91 cv
804.177 1080.91 li
804.452 1075.34 804.711 1069.68 804.956 1063.92 cv
805.2 1058.17 805.429 1052.32 805.644 1046.37 cv
805.858 1040.42 806.057 1034.38 806.243 1028.22 cv
806.428 1022.08 806.6 1015.83 806.757 1009.47 cv
802.948 1009.47 li
800.273 1082.38 mo
799.993 1087.94 799.698 1093.4 799.386 1098.78 cv
799.074 1104.16 798.746 1109.45 798.401 1114.65 cv
798.057 1119.86 797.695 1124.99 797.317 1130.03 cv
796.938 1135.08 796.542 1140.05 796.129 1144.93 cv
799.992 1144.93 li
800.402 1140.05 800.795 1135.08 801.171 1130.03 cv
801.546 1124.99 801.905 1119.86 802.247 1114.65 cv
802.589 1109.45 802.914 1104.16 803.224 1098.78 cv
803.533 1093.4 803.826 1087.94 804.104 1082.38 cv
800.273 1082.38 li
796.021 1146.21 mo
795.604 1151.09 795.169 1155.89 794.716 1160.62 cv
794.263 1165.36 793.791 1170.02 793.301 1174.61 cv
792.81 1179.21 792.3 1183.73 791.772 1188.19 cv
791.241 1192.66 790.692 1197.06 790.123 1201.39 cv
794.034 1201.39 li
794.599 1197.06 795.144 1192.66 795.669 1188.19 cv
796.194 1183.73 796.699 1179.21 797.187 1174.61 cv
797.673 1170.02 798.141 1165.36 798.591 1160.62 cv
799.04 1155.89 799.471 1151.09 799.885 1146.21 cv
796.021 1146.21 li
789.972 1202.54 mo
789.706 1204.55 789.436 1206.54 789.161 1208.52 cv
788.886 1210.51 788.607 1212.47 788.323 1214.43 cv
788.039 1216.39 787.751 1218.33 787.458 1220.27 cv
787.165 1222.2 786.868 1224.12 786.565 1226.03 cv
786.048 1229.3 785.518 1232.53 784.973 1235.73 cv
784.427 1238.94 783.867 1242.11 783.294 1245.25 cv
782.719 1248.39 782.129 1251.51 781.525 1254.59 cv
780.92 1257.68 780.3 1260.75 779.665 1263.78 cv
783.658 1263.78 li
784.288 1260.75 784.904 1257.68 785.504 1254.59 cv
786.103 1251.51 786.688 1248.39 787.258 1245.25 cv
787.828 1242.11 788.383 1238.94 788.924 1235.73 cv
789.465 1232.53 789.991 1229.3 790.504 1226.03 cv
790.804 1224.12 791.099 1222.2 791.39 1220.27 cv
791.681 1218.33 791.966 1216.39 792.248 1214.43 cv
792.53 1212.47 792.807 1210.51 793.08 1208.52 cv
793.352 1206.54 793.62 1204.55 793.884 1202.54 cv
789.972 1202.54 li
779.349 1265.28 mo
778.151 1270.94 776.9 1276.51 775.595 1281.98 cv
774.283 1287.49 772.915 1292.91 771.49 1298.25 cv
770.057 1303.63 768.564 1308.93 767.012 1314.17 cv
765.449 1319.44 763.824 1324.65 762.135 1329.82 cv
766.267 1329.82 li
767.943 1324.65 769.554 1319.44 771.105 1314.17 cv
772.645 1308.93 774.126 1303.63 775.547 1298.25 cv
776.962 1292.91 778.319 1287.49 779.62 1281.98 cv
780.916 1276.51 782.156 1270.94 783.345 1265.28 cv
779.349 1265.28 li
761.692 1331.17 mo
759.979 1336.36 758.201 1341.5 756.353 1346.61 cv
754.493 1351.75 752.562 1356.86 750.557 1361.95 cv
748.538 1367.08 746.442 1372.18 744.269 1377.28 cv
742.079 1382.43 739.808 1387.56 737.454 1392.71 cv
741.78 1392.71 li
744.116 1387.56 746.369 1382.43 748.542 1377.28 cv
750.698 1372.18 752.776 1367.08 754.78 1361.95 cv
756.768 1356.86 758.685 1351.75 760.53 1346.61 cv
762.363 1341.5 764.128 1336.36 765.827 1331.17 cv
761.692 1331.17 li
736.825 1394.08 mo
734.433 1399.27 731.954 1404.48 729.386 1409.71 cv
726.794 1414.99 724.108 1420.3 721.326 1425.65 cv
718.515 1431.06 715.605 1436.51 712.59 1442.02 cv
709.543 1447.59 706.387 1453.22 703.119 1458.93 cv
707.716 1458.94 li
710.959 1453.22 714.089 1447.59 717.112 1442.02 cv
720.104 1436.51 722.991 1431.06 725.779 1425.65 cv
728.54 1420.3 731.204 1414.99 733.776 1409.71 cv
736.324 1404.48 738.783 1399.27 741.156 1394.08 cv
736.825 1394.08 li
702.243 1460.46 mo
698.913 1466.26 695.465 1472.15 691.893 1478.14 cv
688.277 1484.2 684.533 1490.38 680.654 1496.68 cv
676.724 1503.06 672.654 1509.57 668.436 1516.24 cv
664.16 1523 659.729 1529.93 655.136 1537.03 cv
660.111 1537.03 li
664.668 1529.93 669.064 1523 673.306 1516.24 cv
677.491 1509.57 681.53 1503.06 685.428 1496.68 cv
689.277 1490.38 692.992 1484.2 696.578 1478.14 cv
700.122 1472.15 703.543 1466.26 706.847 1460.46 cv
702.243 1460.46 li
653.926 1538.9 mo
653.264 1539.93 652.599 1540.95 651.931 1541.98 cv
651.262 1543.01 650.589 1544.05 649.913 1545.09 cv
649.235 1546.13 648.554 1547.17 647.869 1548.22 cv
647.183 1549.27 646.493 1550.33 645.8 1551.39 cv
643.263 1555.27 640.678 1559.21 638.044 1563.2 cv
635.388 1567.23 632.681 1571.32 629.923 1575.48 cv
627.142 1579.67 624.307 1583.92 621.418 1588.25 cv
618.503 1592.62 615.532 1597.05 612.503 1601.57 cv
617.814 1601.57 li
620.819 1597.05 623.767 1592.62 626.659 1588.25 cv
629.525 1583.92 632.338 1579.67 635.098 1575.48 cv
637.834 1571.32 640.519 1567.23 643.154 1563.2 cv
645.767 1559.21 648.332 1555.27 650.849 1551.39 cv
651.537 1550.33 652.221 1549.27 652.902 1548.22 cv
653.581 1547.17 654.257 1546.13 654.929 1545.09 cv
655.6 1544.05 656.268 1543.01 656.932 1541.98 cv
657.595 1540.95 658.254 1539.93 658.911 1538.9 cv
653.926 1538.9 li
611.577 1602.95 mo
607.998 1608.28 604.337 1613.72 600.592 1619.27 cv
596.806 1624.89 592.934 1630.62 588.971 1636.48 cv
584.963 1642.4 580.861 1648.45 576.663 1654.64 cv
572.416 1660.91 568.068 1667.31 563.616 1673.87 cv
569.313 1673.87 li
573.729 1667.31 578.043 1660.91 582.258 1654.64 cv
586.422 1648.45 590.492 1642.4 594.468 1636.48 cv
598.399 1630.62 602.242 1624.89 605.998 1619.27 cv
609.713 1613.72 613.345 1608.28 616.896 1602.95 cv
611.577 1602.95 li
562.425 1675.62 mo
561.073 1677.61 559.711 1679.62 558.339 1681.64 cv
556.963 1683.66 555.576 1685.7 554.179 1687.76 cv
552.777 1689.82 551.366 1691.9 549.944 1693.99 cv
548.516 1696.09 547.078 1698.21 545.63 1700.34 cv
542.91 1704.34 540.15 1708.4 537.351 1712.52 cv
534.531 1716.67 531.67 1720.88 528.769 1725.16 cv
525.844 1729.47 522.878 1733.84 519.868 1738.28 cv
516.835 1742.75 513.758 1747.3 510.635 1751.91 cv
510.585 1751.98 510.536 1752.06 510.486 1752.13 cv
510.437 1752.2 510.387 1752.28 510.338 1752.35 cv
510.288 1752.42 510.239 1752.5 510.189 1752.57 cv
510.139 1752.64 510.09 1752.72 510.04 1752.79 cv
516.16 1752.79 li
516.209 1752.72 516.258 1752.64 516.307 1752.57 cv
516.357 1752.5 516.406 1752.42 516.455 1752.35 cv
516.504 1752.28 516.553 1752.2 516.602 1752.13 cv
516.651 1752.06 516.701 1751.98 516.75 1751.91 cv
519.847 1747.3 522.901 1742.75 525.91 1738.28 cv
528.896 1733.84 531.839 1729.47 534.741 1725.16 cv
537.62 1720.88 540.458 1716.67 543.255 1712.52 cv
546.032 1708.4 548.77 1704.34 551.469 1700.34 cv
552.906 1698.21 554.333 1696.09 555.749 1693.99 cv
557.159 1691.9 558.56 1689.82 559.951 1687.76 cv
561.337 1685.7 562.712 1683.66 564.078 1681.64 cv
565.439 1679.62 566.79 1677.61 568.131 1675.62 cv
562.425 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 659.106 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 659.106 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
613.339 -21.4822 mo
613.343 -21.3878 613.346 -21.294 613.349 -21.2002 cv
613.352 -21.1058 613.355 -21.0119 613.358 -20.9181 cv
613.361 -20.8243 613.364 -20.7299 613.368 -20.6361 cv
613.371 -20.5422 613.374 -20.4484 613.377 -20.3546 cv
613.631 -12.7937 613.883 -5.28997 614.133 2.15484 cv
614.383 9.59484 614.631 16.9759 614.877 24.298 cv
615.123 31.6141 615.368 38.8713 615.609 46.0677 cv
615.852 53.2594 616.092 60.3902 616.33 67.4598 cv
616.408 69.7848 616.486 72.105 616.564 74.421 cv
616.642 76.7359 616.72 79.0465 616.797 81.3523 cv
616.875 83.658 616.952 85.9584 617.029 88.2546 cv
617.106 90.5502 617.183 92.8415 617.26 95.1275 cv
621.178 95.1281 li
621.101 92.8415 621.024 90.5502 620.948 88.2546 cv
620.871 85.9584 620.794 83.658 620.717 81.3523 cv
620.64 79.0465 620.563 76.7359 620.486 74.421 cv
620.408 72.105 620.33 69.7848 620.253 67.4598 cv
620.016 60.3902 619.777 53.2594 619.537 46.0677 cv
619.296 38.8713 619.053 31.6141 618.809 24.298 cv
618.563 16.9759 618.317 9.59484 618.068 2.15484 cv
617.82 -5.28997 617.569 -12.7937 617.317 -20.3546 cv
617.314 -20.4484 617.311 -20.5422 617.308 -20.6361 cv
617.305 -20.7299 617.302 -20.8243 617.298 -20.9181 cv
617.295 -21.0119 617.292 -21.1058 617.289 -21.2002 cv
617.286 -21.294 617.282 -21.3878 617.279 -21.4822 cv
613.339 -21.4816 li
617.405 99.4191 mo
617.948 115.562 618.482 131.475 619.008 147.162 cv
619.534 162.824 620.051 178.26 620.559 193.475 cv
621.067 208.667 621.566 223.638 622.055 238.392 cv
622.544 253.125 623.023 267.641 623.494 281.945 cv
627.375 281.945 li
626.907 267.641 626.43 253.125 625.945 238.392 cv
625.457 223.638 624.962 208.667 624.457 193.475 cv
623.952 178.26 623.438 162.824 622.916 147.162 cv
622.393 131.475 621.861 115.562 621.321 99.4191 cv
617.405 99.4191 li
623.618 285.731 mo
624.086 299.976 624.544 314.011 624.993 327.837 cv
625.441 341.645 625.88 355.247 626.308 368.646 cv
626.735 382.028 627.152 395.208 627.559 408.19 cv
627.965 421.157 628.362 433.926 628.746 446.501 cv
632.597 446.502 li
632.214 433.926 631.82 421.157 631.416 408.19 cv
631.012 395.208 630.597 382.028 630.172 368.646 cv
629.747 355.247 629.311 341.645 628.866 327.837 cv
628.419 314.011 627.963 299.976 627.499 285.731 cv
623.618 285.732 li
628.846 449.769 mo
629.229 462.3 629.601 474.639 629.962 486.789 cv
630.322 498.926 630.672 510.875 631.009 522.64 cv
631.346 534.392 631.672 545.962 631.986 557.352 cv
632.3 568.731 632.602 579.931 632.891 590.955 cv
636.717 590.956 li
636.429 579.931 636.129 568.731 635.817 557.352 cv
635.505 545.962 635.182 534.392 634.846 522.64 cv
634.51 510.875 634.163 498.926 633.805 486.789 cv
633.446 474.639 633.077 462.3 632.696 449.769 cv
628.846 449.769 li
632.967 593.822 mo
633.253 604.801 633.528 615.607 633.79 626.242 cv
634.053 636.869 634.302 647.326 634.539 657.616 cv
634.775 667.9 634.999 678.018 635.209 687.975 cv
635.419 697.924 635.616 707.714 635.799 717.345 cv
639.608 717.345 li
639.426 707.714 639.23 697.924 639.021 687.975 cv
638.812 678.018 638.59 667.9 638.355 657.616 cv
638.119 647.326 637.872 636.869 637.611 626.242 cv
637.35 615.607 637.077 604.801 636.792 593.822 cv
632.966 593.823 li
635.847 719.895 mo
636.028 729.493 636.195 738.935 636.348 748.223 cv
636.501 757.508 636.64 766.639 636.764 775.622 cv
636.889 784.602 637 793.434 637.095 802.12 cv
637.19 810.804 637.271 819.345 637.336 827.744 cv
641.136 827.745 li
641.071 819.345 640.99 810.804 640.896 802.12 cv
640.801 793.434 640.692 784.602 640.568 775.622 cv
640.444 766.639 640.305 757.508 640.153 748.223 cv
640.001 738.935 639.835 729.493 639.655 719.895 cv
635.847 719.895 li
637.353 829.928 mo
637.416 838.304 637.464 846.541 637.496 854.641 cv
637.528 862.741 637.544 870.705 637.545 878.536 cv
637.546 886.367 637.53 894.067 637.498 901.638 cv
637.466 909.209 637.418 916.653 637.353 923.973 cv
641.153 923.973 li
641.218 916.653 641.265 909.209 641.297 901.638 cv
641.328 894.067 641.344 886.367 641.344 878.536 cv
641.343 870.705 641.327 862.741 641.295 854.641 cv
641.262 846.541 641.215 838.304 641.153 829.928 cv
637.353 829.928 li
637.336 925.877 mo
637.268 933.173 637.183 940.345 637.081 947.397 cv
636.979 954.452 636.859 961.387 636.722 968.205 cv
636.585 975.026 636.43 981.731 636.257 988.324 cv
636.084 994.919 635.892 1001.4 635.682 1007.78 cv
639.492 1007.78 li
639.701 1001.4 639.891 994.919 640.063 988.324 cv
640.235 981.731 640.39 975.026 640.526 968.205 cv
640.662 961.387 640.781 954.452 640.882 947.397 cv
640.984 940.345 641.068 933.173 641.135 925.877 cv
637.336 925.877 li
635.626 1009.47 mo
635.412 1015.83 635.18 1022.08 634.928 1028.22 cv
634.676 1034.38 634.405 1040.42 634.115 1046.37 cv
633.824 1052.32 633.513 1058.17 633.181 1063.92 cv
632.85 1069.68 632.498 1075.34 632.125 1080.91 cv
635.955 1080.91 li
636.326 1075.34 636.676 1069.68 637.006 1063.92 cv
637.335 1058.17 637.644 1052.32 637.933 1046.37 cv
638.222 1040.42 638.492 1034.38 638.742 1028.22 cv
638.993 1022.08 639.224 1015.83 639.436 1009.47 cv
635.626 1009.47 li
632.025 1082.38 mo
631.649 1087.94 631.251 1093.4 630.831 1098.78 cv
630.411 1104.16 629.97 1109.45 629.506 1114.65 cv
629.042 1119.86 628.555 1124.99 628.046 1130.03 cv
627.535 1135.08 627.002 1140.05 626.446 1144.93 cv
630.31 1144.93 li
630.863 1140.05 631.393 1135.08 631.9 1130.03 cv
632.406 1124.99 632.89 1119.86 633.351 1114.65 cv
633.813 1109.45 634.252 1104.16 634.669 1098.78 cv
635.086 1093.4 635.482 1087.94 635.856 1082.38 cv
632.025 1082.38 li
626.301 1146.21 mo
625.739 1151.09 625.154 1155.89 624.544 1160.62 cv
623.933 1165.36 623.299 1170.02 622.639 1174.61 cv
621.978 1179.21 621.291 1183.73 620.579 1188.19 cv
619.866 1192.66 619.126 1197.06 618.361 1201.39 cv
622.271 1201.39 li
623.033 1197.06 623.768 1192.66 624.478 1188.19 cv
625.186 1183.73 625.868 1179.21 626.525 1174.61 cv
627.181 1170.02 627.812 1165.36 628.419 1160.62 cv
629.025 1155.89 629.607 1151.09 630.165 1146.21 cv
626.3 1146.21 li
618.156 1202.54 mo
617.798 1204.55 617.435 1206.54 617.065 1208.52 cv
616.695 1210.51 616.319 1212.47 615.937 1214.43 cv
615.555 1216.39 615.167 1218.33 614.773 1220.27 cv
614.378 1222.2 613.977 1224.12 613.571 1226.03 cv
612.874 1229.3 612.16 1232.53 611.427 1235.73 cv
610.692 1238.94 609.938 1242.11 609.165 1245.25 cv
608.391 1248.39 607.598 1251.51 606.785 1254.59 cv
605.97 1257.68 605.135 1260.75 604.28 1263.78 cv
608.273 1263.78 li
609.123 1260.75 609.953 1257.68 610.763 1254.59 cv
611.572 1251.51 612.361 1248.39 613.13 1245.25 cv
613.898 1242.11 614.648 1238.94 615.378 1235.73 cv
616.107 1232.53 616.817 1229.3 617.51 1226.03 cv
617.914 1224.12 618.312 1222.2 618.705 1220.27 cv
619.096 1218.33 619.482 1216.39 619.862 1214.43 cv
620.242 1212.47 620.615 1210.51 620.984 1208.52 cv
621.351 1206.54 621.712 1204.55 622.068 1202.54 cv
618.156 1202.54 li
603.855 1265.28 mo
602.242 1270.94 600.558 1276.51 598.801 1281.98 cv
597.034 1287.49 595.193 1292.91 593.274 1298.25 cv
591.344 1303.63 589.335 1308.93 587.245 1314.17 cv
585.141 1319.44 582.954 1324.65 580.68 1329.82 cv
584.811 1329.82 li
587.072 1324.65 589.247 1319.44 591.338 1314.17 cv
593.416 1308.93 595.414 1303.63 597.332 1298.25 cv
599.24 1292.91 601.07 1287.49 602.826 1281.98 cv
604.574 1276.51 606.247 1270.94 607.851 1265.28 cv
603.855 1265.28 li
580.083 1331.17 mo
577.778 1336.36 575.382 1341.5 572.895 1346.61 cv
570.39 1351.75 567.79 1356.86 565.092 1361.95 cv
562.373 1367.08 559.552 1372.18 556.627 1377.28 cv
553.678 1382.43 550.621 1387.56 547.451 1392.71 cv
551.777 1392.71 li
554.928 1387.56 557.968 1382.43 560.899 1377.28 cv
563.808 1372.18 566.612 1367.08 569.314 1361.95 cv
571.997 1356.86 574.582 1351.75 577.072 1346.61 cv
579.545 1341.5 581.926 1336.36 584.218 1331.17 cv
580.083 1331.17 li
546.603 1394.08 mo
543.383 1399.27 540.047 1404.48 536.589 1409.71 cv
533.098 1414.99 529.483 1420.3 525.736 1425.65 cv
521.953 1431.06 518.035 1436.51 513.976 1442.02 cv
509.873 1447.59 505.625 1453.22 501.224 1458.93 cv
505.821 1458.94 li
510.196 1453.22 514.42 1447.59 518.498 1442.02 cv
522.533 1436.51 526.429 1431.06 530.19 1425.65 cv
533.914 1420.3 537.509 1414.99 540.978 1409.71 cv
544.416 1404.48 547.733 1399.27 550.935 1394.08 cv
546.603 1394.08 li
500.045 1460.46 mo
495.562 1466.26 490.92 1472.15 486.111 1478.14 cv
481.243 1484.2 476.202 1490.38 470.979 1496.68 cv
465.689 1503.06 460.208 1509.57 454.53 1516.24 cv
448.773 1523 442.807 1529.93 436.624 1537.03 cv
441.599 1537.03 li
447.746 1529.93 453.677 1523 459.401 1516.24 cv
465.046 1509.57 470.494 1503.06 475.753 1496.68 cv
480.945 1490.38 485.958 1484.2 490.796 1478.14 cv
495.577 1472.15 500.192 1466.26 504.649 1460.46 cv
500.045 1460.46 li
434.994 1538.9 mo
434.104 1539.93 433.209 1540.95 432.31 1541.98 cv
431.409 1543.01 430.502 1544.05 429.592 1545.09 cv
428.68 1546.13 427.762 1547.17 426.84 1548.22 cv
425.917 1549.27 424.988 1550.33 424.055 1551.39 cv
420.639 1555.27 417.159 1559.21 413.613 1563.2 cv
410.037 1567.23 406.393 1571.32 402.68 1575.48 cv
398.935 1579.67 395.118 1583.92 391.228 1588.25 cv
387.304 1592.62 383.303 1597.05 379.226 1601.57 cv
384.538 1601.57 li
388.592 1597.05 392.568 1592.62 396.469 1588.25 cv
400.337 1583.92 404.131 1579.67 407.854 1575.48 cv
411.546 1571.32 415.168 1567.23 418.723 1563.2 cv
422.248 1559.21 425.709 1555.27 429.104 1551.39 cv
430.032 1550.33 430.955 1549.27 431.874 1548.22 cv
432.79 1547.17 433.701 1546.13 434.609 1545.09 cv
435.514 1544.05 436.414 1543.01 437.31 1541.98 cv
438.205 1540.95 439.094 1539.93 439.979 1538.9 cv
434.994 1538.9 li
377.98 1602.95 mo
373.161 1608.28 368.232 1613.72 363.191 1619.27 cv
358.094 1624.89 352.879 1630.62 347.544 1636.48 cv
342.148 1642.4 336.626 1648.45 330.974 1654.64 cv
325.256 1660.91 319.402 1667.31 313.409 1673.87 cv
319.106 1673.87 li
325.064 1667.31 330.883 1660.91 336.569 1654.64 cv
342.187 1648.45 347.677 1642.4 353.042 1636.48 cv
358.346 1630.62 363.529 1624.89 368.596 1619.27 cv
373.608 1613.72 378.508 1608.28 383.299 1602.95 cv
377.979 1602.95 li
311.805 1675.62 mo
309.984 1677.61 308.15 1679.62 306.304 1681.64 cv
304.451 1683.66 302.584 1685.7 300.704 1687.76 cv
298.817 1689.82 296.916 1691.9 295.001 1693.99 cv
293.079 1696.09 291.144 1698.21 289.194 1700.34 cv
285.531 1704.34 281.815 1708.4 278.047 1712.52 cv
274.25 1716.67 270.399 1720.88 266.492 1725.16 cv
262.555 1729.47 258.561 1733.84 254.51 1738.28 cv
250.426 1742.75 246.283 1747.3 242.079 1751.91 cv
242.012 1751.98 241.945 1752.06 241.878 1752.13 cv
241.812 1752.2 241.746 1752.28 241.679 1752.35 cv
241.612 1752.42 241.545 1752.5 241.479 1752.57 cv
241.412 1752.64 241.345 1752.72 241.278 1752.79 cv
247.398 1752.79 li
247.464 1752.72 247.531 1752.64 247.597 1752.57 cv
247.663 1752.5 247.73 1752.42 247.796 1752.35 cv
247.862 1752.28 247.929 1752.2 247.995 1752.13 cv
248.061 1752.06 248.127 1751.98 248.193 1751.91 cv
252.373 1747.3 256.492 1742.75 260.552 1738.28 cv
264.58 1733.84 268.55 1729.47 272.464 1725.16 cv
276.348 1720.88 280.177 1716.67 283.952 1712.52 cv
287.698 1708.4 291.391 1704.34 295.033 1700.34 cv
296.971 1698.21 298.895 1696.09 300.806 1693.99 cv
302.71 1691.9 304.599 1689.82 306.476 1687.76 cv
308.344 1685.7 310.2 1683.66 312.043 1681.64 cv
313.879 1679.62 315.701 1677.61 317.511 1675.62 cv
311.805 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 441.311 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 441.311 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
440.281 -21.4822 mo
440.285 -21.3878 440.289 -21.294 440.293 -21.2002 cv
440.297 -21.1058 440.301 -21.0119 440.305 -20.9181 cv
440.309 -20.8243 440.313 -20.7299 440.317 -20.6361 cv
440.321 -20.5422 440.325 -20.4484 440.329 -20.3546 cv
440.648 -12.7937 440.965 -5.28997 441.279 2.15484 cv
441.593 9.59484 441.905 16.9759 442.215 24.298 cv
442.524 31.6141 442.831 38.8713 443.136 46.0677 cv
443.44 53.2594 443.742 60.3902 444.041 67.4598 cv
444.139 69.7848 444.237 72.105 444.335 74.421 cv
444.433 76.7359 444.531 79.0465 444.628 81.3523 cv
444.726 83.658 444.823 85.9584 444.92 88.2546 cv
445.017 90.5502 445.114 92.8415 445.211 95.1275 cv
449.06 95.1281 li
448.964 92.8415 448.867 90.5502 448.771 88.2546 cv
448.674 85.9584 448.577 83.658 448.48 81.3523 cv
448.383 79.0465 448.286 76.7359 448.188 74.421 cv
448.091 72.105 447.993 69.7848 447.895 67.4598 cv
447.597 60.3902 447.297 53.2594 446.994 46.0677 cv
446.691 38.8713 446.386 31.6141 446.078 24.298 cv
445.769 16.9759 445.459 9.59484 445.146 2.15484 cv
444.833 -5.28997 444.518 -12.7937 444.2 -20.3546 cv
444.196 -20.4484 444.192 -20.5422 444.188 -20.6361 cv
444.184 -20.7299 444.18 -20.8243 444.177 -20.9181 cv
444.172 -21.0119 444.169 -21.1058 444.165 -21.2002 cv
444.16 -21.294 444.157 -21.3878 444.153 -21.4822 cv
440.281 -21.4816 li
445.392 99.4191 mo
446.075 115.562 446.747 131.475 447.409 147.162 cv
448.07 162.824 448.72 178.26 449.358 193.475 cv
449.996 208.667 450.623 223.638 451.239 238.392 cv
451.854 253.125 452.457 267.641 453.048 281.945 cv
456.861 281.945 li
456.273 267.641 455.672 253.125 455.06 238.392 cv
454.447 223.638 453.824 208.667 453.189 193.475 cv
452.552 178.26 451.905 162.824 451.248 147.162 cv
450.589 131.475 449.92 115.562 449.24 99.4191 cv
445.392 99.4191 li
453.204 285.731 mo
453.793 299.976 454.369 314.011 454.933 327.837 cv
455.496 341.645 456.047 355.247 456.585 368.646 cv
457.123 382.028 457.648 395.208 458.159 408.19 cv
458.67 421.157 459.167 433.926 459.651 446.501 cv
463.434 446.502 li
462.953 433.926 462.458 421.157 461.949 408.19 cv
461.439 395.208 460.917 382.028 460.382 368.646 cv
459.847 355.247 459.298 341.645 458.738 327.837 cv
458.176 314.011 457.602 299.976 457.017 285.731 cv
453.204 285.732 li
459.777 449.769 mo
460.259 462.3 460.726 474.639 461.18 486.789 cv
461.633 498.926 462.072 510.875 462.497 522.64 cv
462.921 534.392 463.33 545.962 463.725 557.352 cv
464.119 568.731 464.499 579.931 464.863 590.955 cv
468.621 590.956 li
468.259 579.931 467.882 568.731 467.489 557.352 cv
467.096 545.962 466.688 534.392 466.266 522.64 cv
465.844 510.875 465.407 498.926 464.956 486.789 cv
464.504 474.639 464.039 462.3 463.56 449.769 cv
459.777 449.769 li
464.957 593.822 mo
465.318 604.801 465.664 615.607 465.993 626.242 cv
466.323 636.869 466.636 647.326 466.934 657.616 cv
467.231 667.9 467.512 678.018 467.776 687.975 cv
468.04 697.924 468.288 707.714 468.519 717.345 cv
472.26 717.345 li
472.031 707.714 471.785 697.924 471.522 687.975 cv
471.259 678.018 470.979 667.9 470.684 657.616 cv
470.387 647.326 470.075 636.869 469.747 626.242 cv
469.419 615.607 469.075 604.801 468.716 593.822 cv
464.957 593.823 li
468.579 719.895 mo
468.806 729.493 469.017 738.935 469.209 748.223 cv
469.401 757.508 469.576 766.639 469.732 775.622 cv
469.889 784.602 470.027 793.434 470.148 802.12 cv
470.267 810.804 470.369 819.345 470.451 827.744 cv
474.184 827.745 li
474.103 819.345 474.002 810.804 473.882 802.12 cv
473.763 793.434 473.625 784.602 473.469 775.622 cv
473.314 766.639 473.139 757.508 472.948 748.223 cv
472.756 738.935 472.547 729.493 472.321 719.895 cv
468.579 719.895 li
470.472 829.928 mo
470.551 838.304 470.611 846.541 470.652 854.641 cv
470.692 862.741 470.713 870.705 470.714 878.536 cv
470.714 886.367 470.695 894.067 470.655 901.638 cv
470.615 909.209 470.554 916.653 470.473 923.973 cv
474.206 923.973 li
474.287 916.653 474.347 909.209 474.388 901.638 cv
474.427 894.067 474.447 886.367 474.446 878.536 cv
474.445 870.705 474.424 862.741 474.384 854.641 cv
474.344 846.541 474.284 838.304 474.205 829.928 cv
470.472 829.928 li
470.451 925.877 mo
470.365 933.173 470.259 940.345 470.13 947.397 cv
470.002 954.452 469.852 961.387 469.679 968.205 cv
469.507 975.026 469.312 981.731 469.095 988.324 cv
468.876 994.919 468.636 1001.4 468.372 1007.78 cv
472.114 1007.78 li
472.378 1001.4 472.617 994.919 472.834 988.324 cv
473.051 981.731 473.245 975.026 473.416 968.205 cv
473.588 961.387 473.738 954.452 473.866 947.397 cv
473.993 940.345 474.099 933.173 474.184 925.877 cv
470.451 925.877 li
468.301 1009.47 mo
468.033 1015.83 467.74 1022.08 467.424 1028.22 cv
467.107 1034.38 466.767 1040.42 466.401 1046.37 cv
466.035 1052.32 465.644 1058.17 465.227 1063.92 cv
464.81 1069.68 464.368 1075.34 463.899 1080.91 cv
467.663 1080.91 li
468.129 1075.34 468.57 1069.68 468.985 1063.92 cv
469.399 1058.17 469.789 1052.32 470.153 1046.37 cv
470.517 1040.42 470.856 1034.38 471.171 1028.22 cv
471.486 1022.08 471.777 1015.83 472.045 1009.47 cv
468.301 1009.47 li
463.774 1082.38 mo
463.3 1087.94 462.8 1093.4 462.273 1098.78 cv
461.745 1104.16 461.19 1109.45 460.606 1114.65 cv
460.022 1119.86 459.411 1124.99 458.771 1130.03 cv
458.129 1135.08 457.459 1140.05 456.76 1144.93 cv
460.555 1144.93 li
461.252 1140.05 461.919 1135.08 462.557 1130.03 cv
463.195 1124.99 463.804 1119.86 464.385 1114.65 cv
464.965 1109.45 465.518 1104.16 466.044 1098.78 cv
466.569 1093.4 467.067 1087.94 467.538 1082.38 cv
463.774 1082.38 li
456.576 1146.21 mo
455.87 1151.09 455.135 1155.89 454.369 1160.62 cv
453.601 1165.36 452.803 1170.02 451.973 1174.61 cv
451.142 1179.21 450.279 1183.73 449.384 1188.19 cv
448.487 1192.66 447.557 1197.06 446.594 1201.39 cv
450.437 1201.39 li
451.395 1197.06 452.321 1192.66 453.214 1188.19 cv
454.105 1183.73 454.964 1179.21 455.791 1174.61 cv
456.617 1170.02 457.412 1165.36 458.176 1160.62 cv
458.938 1155.89 459.671 1151.09 460.374 1146.21 cv
456.576 1146.21 li
446.337 1202.54 mo
445.888 1204.55 445.43 1206.54 444.965 1208.52 cv
444.5 1210.51 444.027 1212.47 443.548 1214.43 cv
443.067 1216.39 442.579 1218.33 442.083 1220.27 cv
441.587 1222.2 441.084 1224.12 440.572 1226.03 cv
439.696 1229.3 438.798 1232.53 437.876 1235.73 cv
436.953 1238.94 436.005 1242.11 435.034 1245.25 cv
434.06 1248.39 433.063 1251.51 432.04 1254.59 cv
431.016 1257.68 429.967 1260.75 428.892 1263.78 cv
432.815 1263.78 li
433.885 1260.75 434.93 1257.68 435.95 1254.59 cv
436.968 1251.51 437.96 1248.39 438.929 1245.25 cv
439.896 1242.11 440.839 1238.94 441.759 1235.73 cv
442.676 1232.53 443.571 1229.3 444.442 1226.03 cv
444.951 1224.12 445.453 1222.2 445.947 1220.27 cv
446.44 1218.33 446.926 1216.39 447.404 1214.43 cv
447.882 1212.47 448.352 1210.51 448.815 1208.52 cv
449.278 1206.54 449.734 1204.55 450.182 1202.54 cv
446.337 1202.54 li
428.357 1265.28 mo
426.329 1270.94 424.212 1276.51 422.003 1281.98 cv
419.782 1287.49 417.467 1292.91 415.054 1298.25 cv
412.628 1303.63 410.102 1308.93 407.474 1314.17 cv
404.829 1319.44 402.079 1324.65 399.22 1329.82 cv
403.28 1329.82 li
406.126 1324.65 408.863 1319.44 411.496 1314.17 cv
414.112 1308.93 416.626 1303.63 419.041 1298.25 cv
421.443 1292.91 423.747 1287.49 425.958 1281.98 cv
428.158 1276.51 430.265 1270.94 432.283 1265.28 cv
428.357 1265.28 li
398.47 1331.17 mo
395.572 1336.36 392.56 1341.5 389.433 1346.61 cv
386.284 1351.75 383.015 1356.86 379.622 1361.95 cv
376.204 1367.08 372.658 1372.18 368.98 1377.28 cv
365.272 1382.43 361.428 1387.56 357.444 1392.71 cv
361.694 1392.71 li
365.661 1387.56 369.487 1382.43 373.178 1377.28 cv
376.839 1372.18 380.369 1367.08 383.771 1361.95 cv
387.149 1356.86 390.402 1351.75 393.538 1346.61 cv
396.65 1341.5 399.648 1336.36 402.533 1331.17 cv
398.47 1331.17 li
356.378 1394.08 mo
352.33 1399.27 348.134 1404.48 343.787 1409.71 cv
339.399 1414.99 334.853 1420.3 330.143 1425.65 cv
325.387 1431.06 320.46 1436.51 315.357 1442.02 cv
310.199 1447.59 304.858 1453.22 299.325 1458.93 cv
303.842 1458.94 li
309.35 1453.22 314.667 1447.59 319.8 1442.02 cv
324.88 1436.51 329.784 1431.06 334.519 1425.65 cv
339.207 1420.3 343.732 1414.99 348.1 1409.71 cv
352.428 1404.48 356.604 1399.27 360.633 1394.08 cv
356.378 1394.08 li
297.843 1460.46 mo
292.207 1466.26 286.37 1472.15 280.324 1478.14 cv
274.205 1484.2 267.866 1490.38 261.3 1496.68 cv
254.649 1503.06 247.759 1509.57 240.619 1516.24 cv
233.381 1523 225.881 1529.93 218.107 1537.03 cv
222.996 1537.03 li
230.734 1529.93 238.2 1523 245.405 1516.24 cv
252.511 1509.57 259.37 1503.06 265.991 1496.68 cv
272.527 1490.38 278.836 1484.2 284.928 1478.14 cv
290.946 1472.15 296.756 1466.26 302.367 1460.46 cv
297.842 1460.46 li
216.058 1538.9 mo
214.939 1539.93 213.814 1540.95 212.683 1541.98 cv
211.55 1543.01 210.411 1544.05 209.267 1545.09 cv
208.119 1546.13 206.966 1547.17 205.807 1548.22 cv
204.646 1549.27 203.478 1550.33 202.305 1551.39 cv
198.011 1555.27 193.635 1559.21 189.176 1563.2 cv
184.681 1567.23 180.1 1571.32 175.431 1575.48 cv
170.723 1579.67 165.924 1583.92 161.034 1588.25 cv
156.1 1592.62 151.071 1597.05 145.944 1601.57 cv
151.162 1601.57 li
156.266 1597.05 161.273 1592.62 166.184 1588.25 cv
171.052 1583.92 175.828 1579.67 180.515 1575.48 cv
185.162 1571.32 189.723 1567.23 194.197 1563.2 cv
198.636 1559.21 202.991 1555.27 207.266 1551.39 cv
208.434 1550.33 209.596 1549.27 210.752 1548.22 cv
211.906 1547.17 213.054 1546.13 214.196 1545.09 cv
215.335 1544.05 216.468 1543.01 217.597 1541.98 cv
218.722 1540.95 219.842 1539.93 220.956 1538.9 cv
216.058 1538.9 li
144.377 1602.95 mo
138.319 1608.28 132.122 1613.72 125.784 1619.27 cv
119.376 1624.89 112.82 1630.62 106.113 1636.48 cv
99.3283 1642.4 92.3857 1648.45 85.2806 1654.64 cv
78.0902 1660.91 70.7302 1667.31 63.1952 1673.87 cv
68.7931 1673.87 li
76.2932 1667.31 83.6196 1660.91 90.7769 1654.64 cv
97.85 1648.45 104.76 1642.4 111.514 1636.48 cv
118.191 1630.62 124.716 1624.89 131.095 1619.27 cv
137.405 1613.72 143.573 1608.28 149.603 1602.95 cv
144.377 1602.95 li
61.1793 1675.62 mo
58.8903 1677.61 56.5851 1679.62 54.2637 1681.64 cv
51.9333 1683.66 49.5866 1685.7 47.2224 1687.76 cv
44.8499 1689.82 42.4599 1691.9 40.0531 1693.99 cv
37.6366 1696.09 35.2033 1698.21 32.752 1700.34 cv
28.1464 1704.34 23.4759 1708.4 18.738 1712.52 cv
13.9647 1716.67 9.12213 1720.88 4.21045 1725.16 cv
-.739129 1729.47 -5.76027 1733.84 -10.8542 1738.28 cv
-15.989 1742.75 -21.1984 1747.3 -26.4835 1751.91 cv
-26.5671 1751.98 -26.6507 1752.06 -26.7349 1752.13 cv
-26.8185 1752.2 -26.9027 1752.28 -26.9863 1752.35 cv
-27.0699 1752.42 -27.1541 1752.5 -27.2377 1752.57 cv
-27.3219 1752.64 -27.4055 1752.72 -27.4897 1752.79 cv
-21.4768 1752.79 li
-21.3932 1752.72 -21.3096 1752.64 -21.226 1752.57 cv
-21.1424 1752.5 -21.0595 1752.42 -20.9759 1752.35 cv
-20.8923 1752.28 -20.8087 1752.2 -20.7257 1752.13 cv
-20.6421 1752.06 -20.5585 1751.98 -20.4755 1751.91 cv
-15.2144 1747.3 -10.0285 1742.75 -4.9177 1738.28 cv
.152757 1733.84 5.15105 1729.47 10.0784 1725.16 cv
14.9678 1720.88 19.7875 1716.67 24.5392 1712.52 cv
29.2554 1708.4 33.9049 1704.34 38.4888 1700.34 cv
40.9287 1698.21 43.3518 1696.09 45.7568 1693.99 cv
48.1528 1691.9 50.5314 1689.82 52.8937 1687.76 cv
55.2464 1685.7 57.5829 1683.66 59.9025 1681.64 cv
62.2131 1679.62 64.5075 1677.61 66.7862 1675.62 cv
61.1793 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 223.478 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 223.478 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
267.227 -21.4822 mo
267.231 -21.3878 267.236 -21.294 267.241 -21.2002 cv
267.246 -21.1058 267.251 -21.0119 267.255 -20.9181 cv
267.26 -20.8243 267.265 -20.7299 267.27 -20.6361 cv
267.275 -20.5422 267.28 -20.4484 267.284 -20.3546 cv
267.669 -12.7937 268.05 -5.28997 268.429 2.15484 cv
268.807 9.59484 269.183 16.9759 269.556 24.298 cv
269.929 31.6141 270.299 38.8713 270.665 46.0677 cv
271.032 53.2594 271.396 60.3902 271.756 67.4598 cv
271.874 69.7848 271.993 72.105 272.111 74.421 cv
272.228 76.7359 272.346 79.0465 272.464 81.3523 cv
272.581 83.658 272.698 85.9584 272.815 88.2546 cv
272.932 90.5502 273.049 92.8415 273.165 95.1275 cv
277.014 95.1281 li
276.898 92.8415 276.782 90.5502 276.666 88.2546 cv
276.549 85.9584 276.432 83.658 276.315 81.3523 cv
276.198 79.0465 276.081 76.7359 275.963 74.421 cv
275.846 72.105 275.728 69.7848 275.61 67.4598 cv
275.251 60.3902 274.889 53.2594 274.524 46.0677 cv
274.158 38.8713 273.79 31.6141 273.419 24.298 cv
273.047 16.9759 272.673 9.59484 272.296 2.15484 cv
271.918 -5.28997 271.538 -12.7937 271.156 -20.3546 cv
271.151 -20.4484 271.146 -20.5422 271.141 -20.6361 cv
271.136 -20.7299 271.132 -20.8243 271.127 -20.9181 cv
271.122 -21.0119 271.118 -21.1058 271.113 -21.2002 cv
271.108 -21.294 271.103 -21.3878 271.098 -21.4822 cv
267.227 -21.4816 li
273.384 99.4191 mo
274.206 115.562 275.015 131.475 275.813 147.162 cv
276.609 162.824 277.392 178.26 278.161 193.475 cv
278.93 208.667 279.685 223.638 280.427 238.392 cv
281.167 253.125 281.894 267.641 282.606 281.945 cv
286.419 281.945 li
285.71 267.641 284.986 253.125 284.248 238.392 cv
283.51 223.638 282.757 208.667 281.991 193.475 cv
281.224 178.26 280.444 162.824 279.652 147.162 cv
278.858 131.475 278.051 115.562 277.232 99.4191 cv
273.384 99.4191 li
282.794 285.731 mo
283.503 299.976 284.197 314.011 284.877 327.837 cv
285.555 341.645 286.219 355.247 286.867 368.646 cv
287.514 382.028 288.146 395.208 288.762 408.19 cv
289.378 421.157 289.978 433.926 290.561 446.501 cv
294.343 446.502 li
293.762 433.926 293.165 421.157 292.552 408.19 cv
291.938 395.208 291.309 382.028 290.664 368.646 cv
290.018 355.247 289.357 341.645 288.681 327.837 cv
288.005 314.011 287.313 299.976 286.607 285.731 cv
282.794 285.732 li
290.712 449.769 mo
291.292 462.3 291.855 474.639 292.401 486.789 cv
292.948 498.926 293.476 510.875 293.987 522.64 cv
294.499 534.392 294.992 545.962 295.467 557.352 cv
295.942 568.731 296.399 579.931 296.837 590.955 cv
300.597 590.956 li
300.16 579.931 299.705 568.731 299.232 557.352 cv
298.758 545.962 298.266 534.392 297.758 522.64 cv
297.248 510.875 296.721 498.926 296.178 486.789 cv
295.633 474.639 295.072 462.3 294.494 449.769 cv
290.711 449.769 li
296.952 593.822 mo
297.387 604.801 297.803 615.607 298.2 626.242 cv
298.597 636.869 298.974 647.326 299.333 657.616 cv
299.69 667.9 300.029 678.018 300.348 687.975 cv
300.666 697.924 300.964 707.714 301.242 717.345 cv
304.983 717.345 li
304.707 707.714 304.41 697.924 304.093 687.975 cv
303.776 678.018 303.439 667.9 303.082 657.616 cv
302.725 647.326 302.349 636.869 301.954 626.242 cv
301.558 615.607 301.143 604.801 300.71 593.822 cv
296.952 593.823 li
301.314 719.895 mo
301.588 729.493 301.841 738.935 302.073 748.223 cv
302.305 757.508 302.515 766.639 302.704 775.622 cv
302.892 784.602 303.06 793.434 303.204 802.12 cv
303.348 810.804 303.47 819.345 303.57 827.744 cv
307.303 827.745 li
307.204 819.345 307.083 810.804 306.939 802.12 cv
306.795 793.434 306.629 784.602 306.441 775.622 cv
306.253 766.639 306.043 757.508 305.812 748.223 cv
305.581 738.935 305.329 729.493 305.057 719.895 cv
301.314 719.895 li
303.595 829.928 mo
303.69 838.304 303.763 846.541 303.811 854.641 cv
303.86 862.741 303.885 870.705 303.886 878.536 cv
303.887 886.367 303.864 894.067 303.815 901.638 cv
303.767 909.209 303.694 916.653 303.595 923.973 cv
307.329 923.973 li
307.427 916.653 307.5 909.209 307.548 901.638 cv
307.596 894.067 307.619 886.367 307.618 878.536 cv
307.617 870.705 307.592 862.741 307.544 854.641 cv
307.496 846.541 307.423 838.304 307.328 829.928 cv
303.595 829.928 li
303.57 925.877 mo
303.466 933.173 303.338 940.345 303.183 947.397 cv
303.029 954.452 302.848 961.387 302.64 968.205 cv
302.432 975.026 302.198 981.731 301.936 988.324 cv
301.673 994.919 301.383 1001.4 301.065 1007.78 cv
304.808 1007.78 li
305.125 1001.4 305.414 994.919 305.675 988.324 cv
305.937 981.731 306.17 975.026 306.377 968.205 cv
306.584 961.387 306.764 954.452 306.918 947.397 cv
307.072 940.345 307.2 933.173 307.302 925.877 cv
303.569 925.877 li
300.98 1009.47 mo
300.656 1015.83 300.304 1022.08 299.923 1028.22 cv
299.542 1034.38 299.131 1040.42 298.69 1046.37 cv
298.25 1052.32 297.779 1058.17 297.277 1063.92 cv
296.775 1069.68 296.242 1075.34 295.677 1080.91 cv
299.441 1080.91 li
300.003 1075.34 300.534 1069.68 301.035 1063.92 cv
301.534 1058.17 302.004 1052.32 302.443 1046.37 cv
302.882 1040.42 303.291 1034.38 303.671 1028.22 cv
304.05 1022.08 304.401 1015.83 304.723 1009.47 cv
300.979 1009.47 li
295.527 1082.38 mo
294.956 1087.94 294.353 1093.4 293.718 1098.78 cv
293.082 1104.16 292.413 1109.45 291.711 1114.65 cv
291.007 1119.86 290.271 1124.99 289.5 1130.03 cv
288.727 1135.08 287.92 1140.05 287.077 1144.93 cv
290.873 1144.93 li
291.712 1140.05 292.517 1135.08 293.286 1130.03 cv
294.055 1124.99 294.789 1119.86 295.49 1114.65 cv
296.189 1109.45 296.855 1104.16 297.489 1098.78 cv
298.122 1093.4 298.722 1087.94 299.291 1082.38 cv
295.526 1082.38 li
286.856 1146.21 mo
286.005 1151.09 285.12 1155.89 284.196 1160.62 cv
283.272 1165.36 282.31 1170.02 281.311 1174.61 cv
280.31 1179.21 279.27 1183.73 278.192 1188.19 cv
277.111 1192.66 275.991 1197.06 274.831 1201.39 cv
278.674 1201.39 li
279.83 1197.06 280.945 1192.66 282.022 1188.19 cv
283.096 1183.73 284.132 1179.21 285.129 1174.61 cv
286.125 1170.02 287.083 1165.36 288.003 1160.62 cv
288.923 1155.89 289.806 1151.09 290.653 1146.21 cv
286.856 1146.21 li
274.522 1202.54 mo
273.98 1204.55 273.429 1206.54 272.87 1208.52 cv
272.309 1210.51 271.74 1212.47 271.162 1214.43 cv
270.582 1216.39 269.995 1218.33 269.398 1220.27 cv
268.8 1222.2 268.193 1224.12 267.577 1226.03 cv
266.522 1229.3 265.44 1232.53 264.33 1235.73 cv
263.217 1238.94 262.076 1242.11 260.906 1245.25 cv
259.733 1248.39 258.531 1251.51 257.3 1254.59 cv
256.066 1257.68 254.802 1260.75 253.507 1263.78 cv
257.431 1263.78 li
258.72 1260.75 259.98 1257.68 261.21 1254.59 cv
262.436 1251.51 263.633 1248.39 264.802 1245.25 cv
265.967 1242.11 267.104 1238.94 268.212 1235.73 cv
269.319 1232.53 270.397 1229.3 271.447 1226.03 cv
272.061 1224.12 272.666 1222.2 273.261 1220.27 cv
273.856 1218.33 274.442 1216.39 275.018 1214.43 cv
275.594 1212.47 276.161 1210.51 276.72 1208.52 cv
277.277 1206.54 277.826 1204.55 278.366 1202.54 cv
274.522 1202.54 li
252.863 1265.28 mo
250.42 1270.94 247.87 1276.51 245.208 1281.98 cv
242.533 1287.49 239.745 1292.91 236.838 1298.25 cv
233.916 1303.63 230.873 1308.93 227.707 1314.17 cv
224.521 1319.44 221.209 1324.65 217.765 1329.82 cv
221.824 1329.82 li
225.255 1324.65 228.556 1319.44 231.729 1314.17 cv
234.883 1308.93 237.914 1303.63 240.825 1298.25 cv
243.721 1292.91 246.498 1287.49 249.164 1281.98 cv
251.815 1276.51 254.356 1270.94 256.789 1265.28 cv
252.863 1265.28 li
216.861 1331.17 mo
213.369 1336.36 209.742 1341.5 205.975 1346.61 cv
202.181 1351.75 198.243 1356.86 194.157 1361.95 cv
190.039 1367.08 185.768 1372.18 181.337 1377.28 cv
176.871 1382.43 172.24 1387.56 167.44 1392.71 cv
171.691 1392.71 li
176.473 1387.56 181.086 1382.43 185.535 1377.28 cv
189.949 1372.18 194.204 1367.08 198.306 1361.95 cv
202.378 1356.86 206.3 1351.75 210.08 1346.61 cv
213.833 1341.5 217.446 1336.36 220.924 1331.17 cv
216.861 1331.17 li
166.157 1394.08 mo
161.28 1399.27 156.227 1404.48 150.99 1409.71 cv
145.704 1414.99 140.228 1420.3 134.554 1425.65 cv
128.825 1431.06 122.89 1436.51 116.743 1442.02 cv
110.53 1447.59 104.096 1453.22 97.4309 1458.93 cv
101.948 1458.94 li
108.587 1453.22 114.997 1447.59 121.186 1442.02 cv
127.311 1436.51 133.222 1431.06 138.93 1425.65 cv
144.582 1420.3 150.037 1414.99 155.303 1409.71 cv
160.52 1404.48 165.555 1399.27 170.413 1394.08 cv
166.157 1394.08 li
95.6453 1460.46 mo
88.856 1466.26 81.825 1472.15 74.5419 1478.14 cv
67.1699 1484.2 59.535 1490.38 51.6259 1496.68 cv
43.6134 1503.06 35.3134 1509.57 26.7133 1516.24 cv
17.9941 1523 8.95915 1529.93 -.405348 1537.03 cv
4.48349 1537.03 li
13.8125 1529.93 22.8132 1523 31.4993 1516.24 cv
40.0663 1509.57 48.335 1503.06 56.3163 1496.68 cv
64.1959 1490.38 71.8019 1484.2 79.1457 1478.14 cv
86.4011 1472.15 93.4051 1466.26 100.168 1460.46 cv
95.6447 1460.46 li
-2.87292 1538.9 mo
-4.22127 1539.93 -5.57624 1540.95 -6.93843 1541.98 cv
-8.30362 1543.01 -9.67543 1544.05 -11.0545 1545.09 cv
-12.4365 1546.13 -13.8251 1547.17 -15.2216 1548.22 cv
-16.6205 1549.27 -18.0266 1550.33 -19.4405 1551.39 cv
-24.6132 1555.27 -29.8839 1559.21 -35.2551 1563.2 cv
-40.6701 1567.23 -46.1886 1571.32 -51.8124 1575.48 cv
-57.4836 1579.67 -63.2644 1583.92 -69.1557 1588.25 cv
-75.0988 1592.62 -81.1574 1597.05 -87.3333 1601.57 cv
-82.1142 1601.57 li
-75.9619 1597.05 -69.9267 1592.62 -64.0059 1588.25 cv
-58.1368 1583.92 -52.3783 1579.67 -46.7287 1575.48 cv
-41.126 1571.32 -35.6285 1567.23 -30.2339 1563.2 cv
-24.8832 1559.21 -19.6323 1555.27 -14.4795 1551.39 cv
-13.071 1550.33 -11.6703 1549.27 -10.2762 1548.22 cv
-8.88578 1547.17 -7.50195 1546.13 -6.12533 1545.09 cv
-4.75171 1544.05 -3.38472 1543.01 -2.02494 1541.98 cv
-.668163 1540.95 .681995 1539.93 2.02494 1538.9 cv
-2.87292 1538.9 li
-89.2205 1602.95 mo
-96.5185 1608.28 -103.983 1613.72 -111.617 1619.27 cv
-119.337 1624.89 -127.234 1630.62 -135.313 1636.48 cv
-143.487 1642.4 -151.849 1648.45 -160.408 1654.64 cv
-169.07 1660.91 -177.936 1667.31 -187.012 1673.87 cv
-181.414 1673.87 li
-172.372 1667.31 -163.54 1660.91 -154.911 1654.64 cv
-146.385 1648.45 -138.054 1642.4 -129.912 1636.48 cv
-121.864 1630.62 -113.997 1624.89 -106.306 1619.27 cv
-98.7004 1613.72 -91.2646 1608.28 -83.9942 1602.95 cv
-89.2205 1602.95 li
-189.441 1675.62 mo
-192.198 1677.61 -194.975 1679.62 -197.771 1681.64 cv
-200.579 1683.66 -203.405 1685.7 -206.253 1687.76 cv
-209.111 1689.82 -211.99 1691.9 -214.889 1693.99 cv
-217.8 1696.09 -220.732 1698.21 -223.685 1700.34 cv
-229.232 1704.34 -234.859 1708.4 -240.566 1712.52 cv
-246.316 1716.67 -252.149 1720.88 -258.065 1725.16 cv
-264.028 1729.47 -270.077 1733.84 -276.213 1738.28 cv
-282.398 1742.75 -288.673 1747.3 -295.04 1751.91 cv
-295.14 1751.98 -295.241 1752.06 -295.342 1752.13 cv
-295.443 1752.2 -295.544 1752.28 -295.645 1752.35 cv
-295.746 1752.42 -295.848 1752.5 -295.949 1752.57 cv
-296.05 1752.64 -296.151 1752.72 -296.252 1752.79 cv
-290.239 1752.79 li
-290.138 1752.72 -290.037 1752.64 -289.937 1752.57 cv
-289.836 1752.5 -289.735 1752.42 -289.635 1752.35 cv
-289.534 1752.28 -289.434 1752.2 -289.333 1752.13 cv
-289.233 1752.06 -289.132 1751.98 -289.031 1751.91 cv
-282.689 1747.3 -276.438 1742.75 -270.276 1738.28 cv
-264.163 1733.84 -258.138 1729.47 -252.198 1725.16 cv
-246.304 1720.88 -240.493 1716.67 -234.764 1712.52 cv
-229.079 1708.4 -223.474 1704.34 -217.947 1700.34 cv
-215.006 1698.21 -212.085 1696.09 -209.186 1693.99 cv
-206.297 1691.9 -203.429 1689.82 -200.582 1687.76 cv
-197.745 1685.7 -194.929 1683.66 -192.133 1681.64 cv
-189.347 1679.62 -186.58 1677.61 -183.834 1675.62 cv
-189.441 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 5.6833 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 5.6833 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
94.0997 -21.4822 mo
94.1057 -21.3878 94.1111 -21.294 94.1165 -21.2002 cv
94.1225 -21.1058 94.1279 -21.0119 94.1334 -20.9181 cv
94.1388 -20.8243 94.1448 -20.7299 94.1502 -20.6361 cv
94.1556 -20.5422 94.1616 -20.4484 94.167 -20.3546 cv
94.6163 -12.7937 95.0631 -5.28997 95.5064 2.15484 cv
95.949 9.59484 96.3886 16.9759 96.8252 24.298 cv
97.2607 31.6141 97.6937 38.8713 98.1225 46.0677 cv
98.5513 53.2594 98.9771 60.3902 99.3987 67.4598 cv
99.537 69.7848 99.6753 72.105 99.8136 74.421 cv
99.9514 76.7359 100.089 79.0465 100.226 81.3523 cv
100.364 83.658 100.501 85.9584 100.638 88.2546 cv
100.775 90.5502 100.911 92.8415 101.047 95.1275 cv
104.968 95.1281 li
104.833 92.8415 104.696 90.5502 104.561 88.2546 cv
104.424 85.9584 104.287 83.658 104.15 81.3523 cv
104.013 79.0465 103.876 76.7359 103.738 74.421 cv
103.601 72.105 103.463 69.7848 103.325 67.4598 cv
102.905 60.3902 102.481 53.2594 102.053 46.0677 cv
101.626 38.8713 101.194 31.6141 100.76 24.298 cv
100.325 16.9759 99.887 9.59484 99.4456 2.15484 cv
99.0041 -5.28997 98.5591 -12.7937 98.1111 -20.3546 cv
98.105 -20.4484 98.0996 -20.5422 98.0942 -20.6361 cv
98.0888 -20.7299 98.0828 -20.8243 98.0774 -20.9181 cv
98.072 -21.0119 98.0666 -21.1058 98.0605 -21.2002 cv
98.0551 -21.294 98.0497 -21.3878 98.0443 -21.4822 cv
94.0997 -21.4816 li
101.303 99.4191 mo
102.265 115.562 103.212 131.475 104.145 147.162 cv
105.076 162.824 105.992 178.26 106.892 193.475 cv
107.791 208.667 108.675 223.638 109.543 238.392 cv
110.409 253.125 111.259 267.641 112.092 281.945 cv
115.976 281.945 li
115.146 267.641 114.299 253.125 113.435 238.392 cv
112.571 223.638 111.69 208.667 110.794 193.475 cv
109.897 178.26 108.984 162.824 108.056 147.162 cv
107.126 131.475 106.182 115.562 105.223 99.4191 cv
101.303 99.4191 li
112.313 285.731 mo
113.142 299.976 113.954 314.011 114.749 327.837 cv
115.543 341.645 116.319 355.247 117.078 368.646 cv
117.835 382.028 118.575 395.208 119.295 408.19 cv
120.015 421.157 120.717 433.926 121.399 446.501 cv
125.253 446.502 li
124.572 433.926 123.874 421.157 123.156 408.19 cv
122.437 395.208 121.701 382.028 120.945 368.646 cv
120.19 355.247 119.416 341.645 118.624 327.837 cv
117.832 314.011 117.023 299.976 116.197 285.731 cv
112.313 285.732 li
121.576 449.769 mo
122.254 462.3 122.913 474.639 123.552 486.789 cv
124.191 498.926 124.81 510.875 125.408 522.64 cv
126.005 534.392 126.583 545.962 127.139 557.352 cv
127.695 568.731 128.229 579.931 128.742 590.955 cv
132.572 590.956 li
132.06 579.931 131.528 568.731 130.974 557.352 cv
130.419 545.962 129.844 534.392 129.248 522.64 cv
128.652 510.875 128.035 498.926 127.399 486.789 cv
126.762 474.639 126.105 462.3 125.429 449.769 cv
121.576 449.769 li
128.875 593.822 mo
129.384 604.801 129.871 615.607 130.336 626.242 cv
130.8 636.869 131.242 647.326 131.661 657.616 cv
132.08 667.9 132.476 678.018 132.849 687.975 cv
133.221 697.924 133.57 707.714 133.895 717.345 cv
137.707 717.345 li
137.383 707.714 137.036 697.924 136.665 687.975 cv
136.293 678.018 135.899 667.9 135.481 657.616 cv
135.063 647.326 134.623 636.869 134.16 626.242 cv
133.697 615.607 133.212 604.801 132.705 593.822 cv
128.875 593.823 li
133.98 719.895 mo
134.3 729.493 134.596 738.935 134.867 748.223 cv
135.138 757.508 135.384 766.639 135.606 775.622 cv
135.826 784.602 136.021 793.434 136.19 802.12 cv
136.359 810.804 136.502 819.345 136.619 827.744 cv
140.422 827.745 li
140.306 819.345 140.164 810.804 139.995 802.12 cv
139.827 793.434 139.632 784.602 139.412 775.622 cv
139.193 766.639 138.947 757.508 138.677 748.223 cv
138.406 738.935 138.111 729.493 137.792 719.895 cv
133.98 719.895 li
136.648 829.928 mo
136.759 838.304 136.844 846.541 136.901 854.641 cv
136.958 862.741 136.987 870.705 136.988 878.536 cv
136.989 886.367 136.962 894.067 136.905 901.638 cv
136.849 909.209 136.763 916.653 136.649 923.973 cv
140.452 923.973 li
140.567 916.653 140.652 909.209 140.708 901.638 cv
140.764 894.067 140.792 886.367 140.79 878.536 cv
140.789 870.705 140.76 862.741 140.703 854.641 cv
140.647 846.541 140.563 838.304 140.451 829.928 cv
136.648 829.928 li
136.618 925.877 mo
136.498 933.173 136.347 940.345 136.166 947.397 cv
135.985 954.452 135.774 961.387 135.531 968.205 cv
135.288 975.026 135.013 981.731 134.707 988.324 cv
134.399 994.919 134.06 1001.4 133.688 1007.78 cv
137.501 1007.78 li
137.872 1001.4 138.21 994.919 138.516 988.324 cv
138.822 981.731 139.096 975.026 139.338 968.205 cv
139.58 961.387 139.791 954.452 139.971 947.397 cv
140.152 940.345 140.302 933.173 140.421 925.877 cv
136.618 925.877 li
133.588 1009.47 mo
133.21 1015.83 132.798 1022.08 132.352 1028.22 cv
131.906 1034.38 131.425 1040.42 130.91 1046.37 cv
130.395 1052.32 129.844 1058.17 129.257 1063.92 cv
128.669 1069.68 128.045 1075.34 127.385 1080.91 cv
131.219 1080.91 li
131.877 1075.34 132.499 1069.68 133.084 1063.92 cv
133.669 1058.17 134.218 1052.32 134.732 1046.37 cv
135.246 1040.42 135.725 1034.38 136.17 1028.22 cv
136.614 1022.08 137.024 1015.83 137.402 1009.47 cv
133.588 1009.47 li
127.209 1082.38 mo
126.541 1087.94 125.836 1093.4 125.093 1098.78 cv
124.349 1104.16 123.566 1109.45 122.745 1114.65 cv
121.922 1119.86 121.06 1124.99 120.157 1130.03 cv
119.254 1135.08 118.309 1140.05 117.323 1144.93 cv
121.19 1144.93 li
122.173 1140.05 123.114 1135.08 124.015 1130.03 cv
124.915 1124.99 125.774 1119.86 126.594 1114.65 cv
127.413 1109.45 128.193 1104.16 128.934 1098.78 cv
129.675 1093.4 130.378 1087.94 131.043 1082.38 cv
127.208 1082.38 li
117.065 1146.21 mo
116.07 1151.09 115.033 1155.89 113.953 1160.62 cv
112.871 1165.36 111.747 1170.02 110.578 1174.61 cv
109.406 1179.21 108.19 1183.73 106.928 1188.19 cv
105.664 1192.66 104.354 1197.06 102.997 1201.39 cv
106.911 1201.39 li
108.264 1197.06 109.57 1192.66 110.83 1188.19 cv
112.088 1183.73 113.3 1179.21 114.467 1174.61 cv
115.632 1170.02 116.753 1165.36 117.832 1160.62 cv
118.908 1155.89 119.942 1151.09 120.933 1146.21 cv
117.065 1146.21 li
102.635 1202.54 mo
102.001 1204.55 101.356 1206.54 100.701 1208.52 cv
100.046 1210.51 99.3794 1212.47 98.7028 1214.43 cv
98.0257 1216.39 97.3382 1218.33 96.6394 1220.27 cv
95.9406 1222.2 95.2303 1224.12 94.5098 1226.03 cv
93.2757 1229.3 92.0098 1232.53 90.7107 1235.73 cv
89.4087 1238.94 88.0736 1242.11 86.7048 1245.25 cv
85.333 1248.39 83.9269 1251.51 82.4865 1254.59 cv
81.0425 1257.68 79.5637 1260.75 78.0487 1263.78 cv
82.0463 1263.78 li
83.5558 1260.75 85.0299 1257.68 86.469 1254.59 cv
87.9052 1251.51 89.3065 1248.39 90.6735 1245.25 cv
92.0381 1242.11 93.3684 1238.94 94.6662 1235.73 cv
95.961 1232.53 97.2228 1229.3 98.4527 1226.03 cv
99.1707 1224.12 99.8786 1222.2 100.576 1220.27 cv
101.271 1218.33 101.957 1216.39 102.632 1214.43 cv
103.307 1212.47 103.97 1210.51 104.624 1208.52 cv
105.276 1206.54 105.919 1204.55 106.551 1202.54 cv
102.635 1202.54 li
77.2952 1265.28 mo
74.4379 1270.94 71.4543 1276.51 68.3402 1281.98 cv
65.2105 1287.49 61.9479 1292.91 58.5475 1298.25 cv
55.1285 1303.63 51.5694 1308.93 47.8647 1314.17 cv
44.1378 1319.44 40.2624 1324.65 36.2335 1329.82 cv
40.3688 1329.82 li
44.385 1324.65 48.2472 1319.44 51.9621 1314.17 cv
55.6542 1308.93 59.2019 1303.63 62.6094 1298.25 cv
65.9984 1292.91 69.2502 1287.49 72.3697 1281.98 cv
75.4729 1276.51 78.4469 1270.94 81.2951 1265.28 cv
77.2952 1265.28 li
35.1757 1331.17 mo
31.0909 1336.36 26.8474 1341.5 22.4403 1346.61 cv
18.0019 1351.75 13.3951 1356.86 8.61334 1361.95 cv
3.79608 1367.08 -1.20101 1372.18 -6.38453 1377.28 cv
-11.6096 1382.43 -17.0264 1387.56 -22.643 1392.71 cv
-18.3122 1392.71 li
-12.7149 1387.56 -7.31551 1382.43 -2.10733 1377.28 cv
3.05875 1372.18 8.039 1367.08 12.8406 1361.95 cv
17.6062 1356.86 22.1979 1351.75 26.6213 1346.61 cv
31.0145 1341.5 35.2436 1336.36 39.3151 1331.17 cv
35.1757 1331.17 li
-24.1441 1394.08 mo
-29.8496 1399.27 -35.7614 1404.48 -41.8886 1409.71 cv
-48.0728 1414.99 -54.479 1420.3 -61.1161 1425.65 cv
-67.82 1431.06 -74.7626 1436.51 -81.9549 1442.02 cv
-89.2235 1447.59 -96.7507 1453.22 -104.548 1458.93 cv
-99.9465 1458.94 li
-92.1752 1453.22 -84.6726 1447.59 -77.4281 1442.02 cv
-70.2599 1436.51 -63.3395 1431.06 -56.6585 1425.65 cv
-50.043 1420.3 -43.6579 1414.99 -37.4947 1409.71 cv
-31.388 1404.48 -25.4954 1399.27 -19.8085 1394.08 cv
-24.1447 1394.08 li
-106.637 1460.46 mo
-114.58 1466.26 -122.806 1472.15 -131.327 1478.14 cv
-139.951 1484.2 -148.883 1490.38 -158.137 1496.68 cv
-167.51 1503.06 -177.221 1509.57 -187.282 1516.24 cv
-197.483 1523 -208.053 1529.93 -219.009 1537.03 cv
-214.029 1537.03 li
-203.109 1529.93 -192.574 1523 -182.407 1516.24 cv
-172.379 1509.57 -162.7 1503.06 -153.358 1496.68 cv
-144.135 1490.38 -135.232 1484.2 -126.636 1478.14 cv
-118.144 1472.15 -109.946 1466.26 -102.029 1460.46 cv
-106.637 1460.46 li
-221.896 1538.9 mo
-223.473 1539.93 -225.059 1540.95 -226.652 1541.98 cv
-228.249 1543.01 -229.855 1544.05 -231.468 1545.09 cv
-233.084 1546.13 -234.709 1547.17 -236.343 1548.22 cv
-237.98 1549.27 -239.624 1550.33 -241.278 1551.39 cv
-247.33 1555.27 -253.497 1559.21 -259.781 1563.2 cv
-266.116 1567.23 -272.572 1571.32 -279.151 1575.48 cv
-285.787 1579.67 -292.549 1583.92 -299.442 1588.25 cv
-306.395 1592.62 -313.483 1597.05 -320.708 1601.57 cv
-315.391 1601.57 li
-308.19 1597.05 -301.125 1592.62 -294.195 1588.25 cv
-287.326 1583.92 -280.585 1579.67 -273.972 1575.48 cv
-267.414 1571.32 -260.98 1567.23 -254.666 1563.2 cv
-248.403 1559.21 -242.256 1555.27 -236.225 1551.39 cv
-234.576 1550.33 -232.937 1549.27 -231.305 1548.22 cv
-229.677 1547.17 -228.058 1546.13 -226.446 1545.09 cv
-224.838 1544.05 -223.238 1543.01 -221.647 1541.98 cv
-220.058 1540.95 -218.478 1539.93 -216.906 1538.9 cv
-221.896 1538.9 li
-322.916 1602.95 mo
-331.454 1608.28 -340.186 1613.72 -349.119 1619.27 cv
-358.15 1624.89 -367.389 1630.62 -376.841 1636.48 cv
-386.403 1642.4 -396.187 1648.45 -406.2 1654.64 cv
-416.333 1660.91 -426.706 1667.31 -437.324 1673.87 cv
-431.622 1673.87 li
-421.038 1667.31 -410.701 1660.91 -400.6 1654.64 cv
-390.62 1648.45 -380.869 1642.4 -371.339 1636.48 cv
-361.917 1630.62 -352.709 1624.89 -343.708 1619.27 cv
-334.805 1613.72 -326.102 1608.28 -317.592 1602.95 cv
-322.916 1602.95 li
-440.166 1675.62 mo
-443.392 1677.61 -446.64 1679.62 -449.912 1681.64 cv
-453.196 1683.66 -456.504 1685.7 -459.835 1687.76 cv
-463.179 1689.82 -466.547 1691.9 -469.939 1693.99 cv
-473.344 1696.09 -476.774 1698.21 -480.229 1700.34 cv
-486.718 1704.34 -493.301 1708.4 -499.978 1712.52 cv
-506.705 1716.67 -513.53 1720.88 -520.451 1725.16 cv
-527.427 1729.47 -534.504 1733.84 -541.683 1738.28 cv
-548.918 1742.75 -556.26 1747.3 -563.709 1751.91 cv
-563.826 1751.98 -563.944 1752.06 -564.063 1752.13 cv
-564.181 1752.2 -564.299 1752.28 -564.417 1752.35 cv
-564.535 1752.42 -564.653 1752.5 -564.772 1752.57 cv
-564.89 1752.64 -565.008 1752.72 -565.127 1752.79 cv
-559.001 1752.79 li
-558.883 1752.72 -558.765 1752.64 -558.647 1752.57 cv
-558.529 1752.5 -558.411 1752.42 -558.294 1752.35 cv
-558.176 1752.28 -558.058 1752.2 -557.94 1752.13 cv
-557.823 1752.06 -557.705 1751.98 -557.587 1751.91 cv
-550.164 1747.3 -542.846 1742.75 -535.635 1738.28 cv
-528.479 1733.84 -521.426 1729.47 -514.474 1725.16 cv
-507.574 1720.88 -500.773 1716.67 -494.068 1712.52 cv
-487.414 1708.4 -480.853 1704.34 -474.384 1700.34 cv
-470.941 1698.21 -467.522 1696.09 -464.128 1693.99 cv
-460.747 1691.9 -457.391 1689.82 -454.058 1687.76 cv
-450.737 1685.7 -447.441 1683.66 -444.168 1681.64 cv
-440.907 1679.62 -437.669 1677.61 -434.454 1675.62 cv
-440.166 1675.62 li
level3{
gsave
clp
[7.36772e-14 1203.24 -1203.24 7.36772e-14 -212.168 450.868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36772e-14 1203.24 -1203.24 7.36772e-14 -212.168 450.868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
101.047 95.1275 mo
104.968 95.1281 li
273.165 95.1281 li
277.014 95.1281 li
445.21 95.1281 li
449.06 95.1281 li
617.26 95.1281 li
621.178 95.1281 li
789.306 95.1281 li
793.223 95.1281 li
961.424 95.1281 li
965.269 95.1281 li
1133.47 95.1281 li
1137.32 95.1281 li
1305.52 95.1281 li
1309.43 95.1281 li
1477.56 95.1281 li
1481.48 95.1281 li
1649.68 95.1281 li
1653.53 95.1281 li
1821.73 95.1281 li
1825.57 95.1281 li
1993.77 95.1281 li
1997.69 95.1281 li
2165.82 95.1281 li
2169.74 95.1281 li
2337.94 95.1281 li
2341.79 95.1281 li
2509.98 95.1281 li
2513.83 95.1281 li
2668.41 95.1281 li
2668.16 98.7046 2668.14 99.0619 2668.11 99.4191 cv
2513.57 99.4191 li
2509.72 99.4191 li
2341.56 99.4191 li
2337.71 99.4191 li
2169.55 99.4191 li
2165.63 99.4191 li
1997.54 99.4191 li
1993.62 99.4191 li
1825.46 99.4191 li
1821.61 99.4191 li
1653.45 99.4191 li
1649.6 99.4191 li
1481.44 99.4191 li
1477.52 99.4191 li
1309.43 99.4191 li
1305.51 99.4191 li
1137.35 99.4191 li
1133.5 99.4191 li
965.338 99.4191 li
961.494 99.4191 li
793.33 99.4191 li
789.413 99.4191 li
621.321 99.4191 li
617.405 99.4191 li
449.24 99.4191 li
445.392 99.4191 li
277.232 99.4191 li
273.384 99.4191 li
105.223 99.4191 li
101.303 99.4191 li
-53.192 99.4191 li
-53.4326 95.8437 -53.4566 95.4859 -53.4807 95.1275 cv
101.047 95.1281 li
level3{
gsave
clp
[7.36847e-14 1203.36 -1203.36 7.36847e-14 1307.47 450.905 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36847e-14 1203.36 -1203.36 7.36847e-14 1307.47 450.905 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
112.092 281.945 mo
115.976 281.945 li
282.606 281.945 li
286.419 281.945 li
453.048 281.945 li
456.861 281.945 li
623.494 281.945 li
627.375 281.945 li
793.936 281.945 li
797.817 281.945 li
964.45 281.945 li
968.259 281.945 li
1134.89 281.945 li
1138.7 281.945 li
1305.33 281.945 li
1309.21 281.945 li
1475.78 281.945 li
1479.66 281.945 li
1646.29 281.945 li
1650.1 281.945 li
1816.74 281.945 li
1820.54 281.945 li
1987.18 281.945 li
1991.06 281.945 li
2157.62 281.945 li
2161.5 281.945 li
2328.13 281.945 li
2331.95 281.945 li
2498.58 281.945 li
2502.39 281.945 li
2655.53 281.945 li
2655.32 285.101 2655.29 285.416 2655.27 285.731 cv
2502.16 285.732 li
2498.35 285.732 li
2331.75 285.732 li
2327.94 285.732 li
2161.34 285.732 li
2157.46 285.732 li
1990.93 285.732 li
1987.05 285.732 li
1820.44 285.732 li
1816.64 285.732 li
1650.03 285.732 li
1646.22 285.732 li
1479.62 285.732 li
1475.74 285.732 li
1309.21 285.732 li
1305.33 285.732 li
1138.73 285.732 li
1134.92 285.732 li
968.319 285.732 li
964.51 285.732 li
797.908 285.732 li
794.029 285.732 li
627.499 285.732 li
623.618 285.732 li
457.017 285.732 li
453.204 285.732 li
286.606 285.732 li
282.794 285.732 li
116.197 285.732 li
112.313 285.732 li
-40.7465 285.732 li
-40.954 282.577 -40.975 282.261 -40.9955 281.945 cv
112.092 281.945 li
level3{
gsave
clp
[7.3688e-14 1203.42 -1203.42 7.3688e-14 1307.27 450.894 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.3688e-14 1203.42 -1203.42 7.3688e-14 1307.27 450.894 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
121.399 446.501 mo
125.253 446.502 li
290.561 446.502 li
294.343 446.502 li
459.651 446.502 li
463.434 446.502 li
628.746 446.502 li
632.597 446.502 li
797.837 446.502 li
801.688 446.502 li
966.999 446.502 li
970.778 446.502 li
1136.09 446.502 li
1139.87 446.502 li
1305.18 446.502 li
1309.03 446.502 li
1474.28 446.502 li
1478.13 446.502 li
1643.43 446.502 li
1647.22 446.502 li
1812.53 446.502 li
1816.31 446.502 li
1981.62 446.502 li
1985.47 446.502 li
2150.71 446.502 li
2154.56 446.502 li
2319.87 446.502 li
2323.66 446.502 li
2488.96 446.502 li
2492.75 446.502 li
2644.67 446.502 li
2644.5 449.225 2644.48 449.497 2644.47 449.769 cv
2492.56 449.769 li
2488.78 449.769 li
2323.5 449.769 li
2319.72 449.769 li
2154.43 449.769 li
2150.58 449.769 li
1985.36 449.769 li
1981.51 449.769 li
1816.23 449.769 li
1812.45 449.769 li
1647.16 449.769 li
1643.38 449.769 li
1478.1 449.769 li
1474.25 449.769 li
1309.03 449.769 li
1305.18 449.769 li
1139.9 449.769 li
1136.11 449.769 li
970.826 449.769 li
967.048 449.769 li
801.761 449.769 li
797.912 449.769 li
632.696 449.769 li
628.846 449.769 li
463.559 449.769 li
459.777 449.769 li
294.494 449.769 li
290.711 449.769 li
125.429 449.769 li
121.576 449.769 li
-30.2754 449.769 li
-30.442 447.046 -30.4588 446.774 -30.4757 446.501 cv
121.399 446.502 li
level3{
gsave
clp
[7.36781e-14 1203.26 -1203.26 7.36781e-14 1307.1 450.869 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36781e-14 1203.26 -1203.26 7.36781e-14 1307.1 450.869 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
128.742 590.955 mo
132.572 590.956 li
296.837 590.956 li
300.597 590.956 li
464.863 590.956 li
468.621 590.956 li
632.891 590.956 li
636.717 590.956 li
800.916 590.956 li
804.741 590.956 li
969.011 590.956 li
972.767 590.956 li
1137.04 590.956 li
1140.79 590.956 li
1305.06 590.956 li
1308.89 590.956 li
1473.09 590.956 li
1476.92 590.956 li
1641.18 590.956 li
1644.94 590.956 li
1809.21 590.956 li
1812.96 590.956 li
1977.23 590.956 li
1981.06 590.956 li
2145.26 590.956 li
2149.09 590.956 li
2313.35 590.956 li
2317.11 590.956 li
2481.38 590.956 li
2485.14 590.956 li
2636.11 590.956 li
2635.98 593.345 2635.96 593.584 2635.95 593.822 cv
2485 593.823 li
2481.24 593.823 li
2317 593.823 li
2313.24 593.823 li
2148.99 593.823 li
2145.16 593.823 li
1980.98 593.823 li
1977.15 593.823 li
1812.9 593.823 li
1809.15 593.823 li
1644.9 593.823 li
1641.14 593.823 li
1476.89 593.823 li
1473.07 593.823 li
1308.88 593.823 li
1305.06 593.823 li
1140.81 593.823 li
1137.05 593.823 li
972.803 593.823 li
969.048 593.823 li
804.797 593.823 li
800.971 593.823 li
636.792 593.823 li
632.966 593.823 li
468.716 593.823 li
464.957 593.823 li
300.71 593.823 li
296.952 593.823 li
132.705 593.823 li
128.875 593.823 li
-22.0235 593.823 li
-22.1492 591.434 -22.1618 591.195 -22.1745 590.955 cv
128.742 590.956 li
level3{
gsave
clp
[7.3692e-14 1203.48 -1203.48 7.3692e-14 1306.97 450.841 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.3692e-14 1203.48 -1203.48 7.3692e-14 1306.97 450.841 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
133.895 717.345 mo
137.707 717.345 li
301.242 717.345 li
304.983 717.345 li
468.518 717.345 li
472.26 717.345 li
635.799 717.345 li
639.608 717.345 li
803.076 717.345 li
806.884 717.345 li
970.423 717.345 li
974.161 717.345 li
1137.7 717.345 li
1141.44 717.345 li
1304.98 717.345 li
1308.79 717.345 li
1472.26 717.345 li
1476.07 717.345 li
1639.6 717.345 li
1643.34 717.345 li
1806.88 717.345 li
1810.62 717.345 li
1974.16 717.345 li
1977.97 717.345 li
2141.43 717.345 li
2145.24 717.345 li
2308.78 717.345 li
2312.52 717.345 li
2476.06 717.345 li
2479.8 717.345 li
2630.1 717.345 li
2630.01 719.47 2630.01 719.683 2630 719.895 cv
2479.71 719.895 li
2475.97 719.895 li
2312.45 719.895 li
2308.71 719.895 li
2145.18 719.895 li
2141.37 719.895 li
1977.92 719.895 li
1974.11 719.895 li
1810.58 719.895 li
1806.84 719.895 li
1643.32 719.895 li
1639.57 719.895 li
1476.05 719.895 li
1472.24 719.895 li
1308.78 719.895 li
1304.98 719.895 li
1141.45 719.895 li
1137.71 719.895 li
974.185 719.895 li
970.446 719.895 li
806.92 719.895 li
803.112 719.895 li
639.655 719.895 li
635.847 719.895 li
472.321 719.895 li
468.579 719.895 li
305.057 719.895 li
301.314 719.895 li
137.792 719.895 li
133.98 719.895 li
-16.2536 719.895 li
-16.3342 717.77 -16.342 717.558 -16.3504 717.345 cv
133.894 717.345 li
level3{
gsave
clp
[7.36645e-14 1203.03 -1203.03 7.36645e-14 1306.87 450.915 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36645e-14 1203.03 -1203.03 7.36645e-14 1306.87 450.915 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
136.619 827.744 mo
140.422 827.745 li
303.57 827.745 li
307.303 827.745 li
470.451 827.745 li
474.184 827.745 li
637.336 827.745 li
641.136 827.745 li
804.218 827.745 li
808.017 827.745 li
971.169 827.745 li
974.899 827.745 li
1138.05 827.745 li
1141.78 827.745 li
1304.93 827.745 li
1308.73 827.745 li
1471.82 827.745 li
1475.62 827.745 li
1638.76 827.745 li
1642.5 827.745 li
1805.65 827.745 li
1809.38 827.745 li
1972.53 827.745 li
1976.33 827.745 li
2139.41 827.745 li
2143.21 827.745 li
2306.36 827.745 li
2310.1 827.745 li
2473.24 827.745 li
2476.98 827.745 li
2626.92 827.745 li
2626.89 829.564 2626.89 829.746 2626.89 829.928 cv
2476.95 829.928 li
2473.21 829.928 li
2310.07 829.928 li
2306.34 829.928 li
2143.19 829.928 li
2139.39 829.928 li
1976.31 829.928 li
1972.51 829.928 li
1809.37 829.928 li
1805.64 829.928 li
1642.49 829.928 li
1638.76 829.928 li
1475.61 829.928 li
1471.81 829.928 li
1308.73 829.928 li
1304.93 829.928 li
1141.79 829.928 li
1138.05 829.928 li
974.906 829.928 li
971.177 829.928 li
808.029 829.928 li
804.23 829.928 li
641.152 829.928 li
637.353 829.928 li
474.205 829.928 li
470.472 829.928 li
307.328 829.928 li
303.595 829.928 li
140.451 829.928 li
136.648 829.928 li
-13.2382 829.928 li
-13.2652 828.108 -13.2682 827.926 -13.2712 827.744 cv
136.619 827.745 li
level3{
gsave
clp
[7.36811e-14 1203.3 -1203.3 7.36811e-14 1306.82 450.849 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36811e-14 1203.3 -1203.3 7.36811e-14 1306.82 450.849 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
136.649 923.973 mo
140.452 923.973 li
303.595 923.973 li
307.329 923.973 li
470.473 923.973 li
474.206 923.973 li
637.353 923.973 li
641.153 923.973 li
804.23 923.973 li
808.03 923.973 li
971.177 923.973 li
974.907 923.973 li
1138.05 923.973 li
1141.79 923.973 li
1304.93 923.973 li
1308.73 923.973 li
1471.81 923.973 li
1475.61 923.973 li
1638.76 923.973 li
1642.49 923.973 li
1805.64 923.973 li
1809.37 923.973 li
1972.51 923.973 li
1976.31 923.973 li
2139.39 923.973 li
2143.19 923.973 li
2306.34 923.973 li
2310.07 923.973 li
2473.21 923.973 li
2476.95 923.973 li
2521.93 923.973 2581.9 923.973 2626.88 923.973 cv
2626.91 925.56 2626.92 925.718 2626.92 925.877 cv
2476.98 925.877 li
2473.25 925.877 li
2310.1 925.877 li
2306.36 925.877 li
2143.21 925.877 li
2139.41 925.877 li
1976.33 925.877 li
1972.53 925.877 li
1809.38 925.877 li
1805.65 925.877 li
1642.5 925.877 li
1638.76 925.877 li
1475.62 925.877 li
1471.82 925.877 li
1308.73 925.877 li
1304.93 925.877 li
1141.78 925.877 li
1138.05 925.877 li
974.899 925.877 li
971.169 925.877 li
808.017 925.877 li
804.217 925.877 li
641.135 925.877 li
637.336 925.877 li
474.184 925.877 li
470.451 925.877 li
307.302 925.877 li
303.569 925.877 li
140.421 925.877 li
136.618 925.877 li
-13.2718 925.877 li
-13.243 924.29 -13.24 924.131 -13.237 923.973 cv
136.649 923.973 li
level3{
gsave
clp
[7.36621e-14 1202.99 -1202.99 7.36621e-14 1306.82 450.966 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36621e-14 1202.99 -1202.99 7.36621e-14 1306.82 450.966 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
133.688 1007.78 mo
137.501 1007.78 li
301.065 1007.78 li
304.808 1007.78 li
468.372 1007.78 li
472.114 1007.78 li
635.682 1007.78 li
639.492 1007.78 li
802.989 1007.78 li
806.798 1007.78 li
970.366 1007.78 li
974.105 1007.78 li
1137.67 1007.78 li
1141.42 1007.78 li
1304.98 1007.78 li
1308.79 1007.78 li
1472.29 1007.78 li
1476.1 1007.78 li
1639.66 1007.78 li
1643.41 1007.78 li
1806.97 1007.78 li
1810.71 1007.78 li
1974.28 1007.78 li
1978.09 1007.78 li
2141.59 1007.78 li
2145.4 1007.78 li
2308.97 1007.78 li
2312.71 1007.78 li
2476.27 1007.78 li
2480.01 1007.78 li
2630.34 1007.78 li
2630.43 1009.18 2630.45 1009.33 2630.45 1009.47 cv
2480.12 1009.47 li
2476.38 1009.47 li
2312.8 1009.47 li
2309.05 1009.47 li
2145.47 1009.47 li
2141.66 1009.47 li
1978.15 1009.47 li
1974.34 1009.47 li
1810.76 1009.47 li
1807.02 1009.47 li
1643.44 1009.47 li
1639.69 1009.47 li
1476.12 1009.47 li
1472.31 1009.47 li
1308.79 1009.47 li
1304.98 1009.47 li
1141.4 1009.47 li
1137.66 1009.47 li
974.078 1009.47 li
970.339 1009.47 li
806.757 1009.47 li
802.948 1009.47 li
639.436 1009.47 li
635.626 1009.47 li
472.045 1009.47 li
468.301 1009.47 li
304.723 1009.47 li
300.979 1009.47 li
137.402 1009.47 li
133.588 1009.47 li
-16.6968 1009.47 li
-16.6024 1008.06 -16.5934 1007.92 -16.5838 1007.78 cv
133.688 1007.78 li
level3{
gsave
clp
[7.36655e-14 1203.05 -1203.05 7.36655e-14 1306.88 450.958 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36655e-14 1203.05 -1203.05 7.36655e-14 1306.88 450.958 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
127.385 1080.91 mo
131.219 1080.91 li
295.677 1080.91 li
299.441 1080.91 li
463.899 1080.91 li
467.663 1080.91 li
632.125 1080.91 li
635.955 1080.91 li
800.346 1080.91 li
804.177 1080.91 li
968.639 1080.91 li
972.399 1080.91 li
1136.86 1080.91 li
1140.62 1080.91 li
1305.08 1080.91 li
1308.91 1080.91 li
1473.31 1080.91 li
1477.14 1080.91 li
1641.6 1080.91 li
1645.36 1080.91 li
1809.82 1080.91 li
1813.58 1080.91 li
1978.04 1080.91 li
1981.88 1080.91 li
2146.27 1080.91 li
2150.1 1080.91 li
2314.56 1080.91 li
2318.32 1080.91 li
2482.78 1080.91 li
2486.54 1080.91 li
2637.69 1080.91 li
2637.86 1082.14 2637.88 1082.26 2637.9 1082.38 cv
2486.73 1082.38 li
2482.96 1082.38 li
2318.48 1082.38 li
2314.72 1082.38 li
2150.23 1082.38 li
2146.4 1082.38 li
1981.98 1082.38 li
1978.15 1082.38 li
1813.66 1082.38 li
1809.9 1082.38 li
1645.42 1082.38 li
1641.65 1082.38 li
1477.17 1082.38 li
1473.34 1082.38 li
1308.92 1082.38 li
1305.09 1082.38 li
1140.6 1082.38 li
1136.84 1082.38 li
972.351 1082.38 li
968.591 1082.38 li
804.104 1082.38 li
800.273 1082.38 li
635.856 1082.38 li
632.025 1082.38 li
467.538 1082.38 li
463.774 1082.38 li
299.291 1082.38 li
295.526 1082.38 li
131.043 1082.38 li
127.208 1082.38 li
-23.9077 1082.38 li
-23.7417 1081.15 -23.7255 1081.03 -23.7086 1080.91 cv
127.385 1080.91 li
level3{
gsave
clp
[7.36653e-14 1203.05 -1203.05 7.36653e-14 1306.99 450.971 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36653e-14 1203.05 -1203.05 7.36653e-14 1306.99 450.971 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
117.323 1144.93 mo
121.19 1144.93 li
287.077 1144.93 li
290.873 1144.93 li
456.759 1144.93 li
460.555 1144.93 li
626.446 1144.93 li
630.31 1144.93 li
796.129 1144.93 li
799.992 1144.93 li
965.883 1144.93 li
969.675 1144.93 li
1135.57 1144.93 li
1139.36 1144.93 li
1305.25 1144.93 li
1309.11 1144.93 li
1474.93 1144.93 li
1478.8 1144.93 li
1644.68 1144.93 li
1648.48 1144.93 li
1814.37 1144.93 li
1818.16 1144.93 li
1984.05 1144.93 li
1987.92 1144.93 li
2153.74 1144.93 li
2157.6 1144.93 li
2323.49 1144.93 li
2327.29 1144.93 li
2493.17 1144.93 li
2496.97 1144.93 li
2649.43 1144.93 li
2649.68 1145.99 2649.7 1146.1 2649.73 1146.21 cv
2497.24 1146.21 li
2493.44 1146.21 li
2327.52 1146.21 li
2323.72 1146.21 li
2157.79 1146.21 li
2153.93 1146.21 li
1988.07 1146.21 li
1984.21 1146.21 li
1818.28 1146.21 li
1814.49 1146.21 li
1648.56 1146.21 li
1644.76 1146.21 li
1478.84 1146.21 li
1474.98 1146.21 li
1309.12 1146.21 li
1305.25 1146.21 li
1139.33 1146.21 li
1135.53 1146.21 li
969.605 1146.21 li
965.812 1146.21 li
799.885 1146.21 li
796.021 1146.21 li
630.165 1146.21 li
626.3 1146.21 li
460.373 1146.21 li
456.576 1146.21 li
290.653 1146.21 li
286.856 1146.21 li
120.933 1146.21 li
117.065 1146.21 li
-35.3747 1146.21 li
-35.1312 1145.15 -35.1071 1145.04 -35.083 1144.93 cv
117.323 1144.93 li
level3{
gsave
clp
[7.36979e-14 1203.58 -1203.58 7.36979e-14 1307.18 450.674 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36979e-14 1203.58 -1203.58 7.36979e-14 1307.18 450.674 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
102.997 1201.39 mo
106.911 1201.39 li
274.831 1201.39 li
278.674 1201.39 li
446.594 1201.39 li
450.437 1201.39 li
618.36 1201.39 li
622.271 1201.39 li
790.123 1201.39 li
794.034 1201.39 li
961.958 1201.39 li
965.796 1201.39 li
1133.72 1201.39 li
1137.56 1201.39 li
1305.48 1201.39 li
1309.39 1201.39 li
1477.25 1201.39 li
1481.16 1201.39 li
1649.08 1201.39 li
1652.92 1201.39 li
1820.85 1201.39 li
1824.69 1201.39 li
1992.61 1201.39 li
1996.52 1201.39 li
2164.37 1201.39 li
2168.28 1201.39 li
2336.21 1201.39 li
2340.05 1201.39 li
2507.97 1201.39 li
2511.81 1201.39 li
2666.14 1201.39 li
2666.49 1202.35 2666.53 1202.44 2666.56 1202.54 cv
2512.19 1202.54 li
2508.34 1202.54 li
2340.37 1202.54 li
2336.53 1202.54 li
2168.55 1202.54 li
2164.64 1202.54 li
1996.74 1202.54 li
1992.83 1202.54 li
1824.85 1202.54 li
1821.01 1202.54 li
1653.04 1202.54 li
1649.19 1202.54 li
1481.22 1202.54 li
1477.31 1202.54 li
1309.4 1202.54 li
1305.49 1202.54 li
1137.52 1202.54 li
1133.67 1202.54 li
965.699 1202.54 li
961.858 1202.54 li
793.884 1202.54 li
789.972 1202.54 li
622.068 1202.54 li
618.156 1202.54 li
450.181 1202.54 li
446.337 1202.54 li
278.366 1202.54 li
274.522 1202.54 li
106.551 1202.54 li
102.635 1202.54 li
-51.6861 1202.54 li
-51.3451 1201.58 -51.3108 1201.49 -51.2771 1201.39 cv
102.997 1201.39 li
level3{
gsave
clp
[7.36875e-14 1203.41 -1203.41 7.36875e-14 1307.44 450.764 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36875e-14 1203.41 -1203.41 7.36875e-14 1307.44 450.764 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
78.0487 1263.78 mo
82.0463 1263.78 li
253.507 1263.78 li
257.431 1263.78 li
428.892 1263.78 li
432.815 1263.78 li
604.28 1263.78 li
608.273 1263.78 li
779.665 1263.78 li
783.658 1263.78 li
955.123 1263.78 li
959.043 1263.78 li
1130.51 1263.78 li
1134.43 1263.78 li
1305.89 1263.78 li
1309.89 1263.78 li
1481.28 1263.78 li
1485.27 1263.78 li
1656.73 1263.78 li
1660.66 1263.78 li
1832.12 1263.78 li
1836.04 1263.78 li
2007.51 1263.78 li
2011.5 1263.78 li
2182.89 1263.78 li
2186.89 1263.78 li
2358.35 1263.78 li
2362.27 1263.78 li
2533.74 1263.78 li
2537.66 1263.78 li
2695.24 1263.78 li
2695.97 1265.03 2696.05 1265.16 2696.12 1265.28 cv
2538.44 1265.28 li
2534.51 1265.28 li
2362.95 1265.28 li
2359.02 1265.28 li
2187.45 1265.28 li
2183.45 1265.28 li
2011.95 1265.28 li
2007.96 1265.28 li
1836.39 1265.28 li
1832.46 1265.28 li
1660.89 1265.28 li
1656.97 1265.28 li
1485.4 1265.28 li
1481.4 1265.28 li
1309.9 1265.28 li
1305.9 1265.28 li
1134.34 1265.28 li
1130.41 1265.28 li
958.839 1265.28 li
954.916 1265.28 li
783.345 1265.28 li
779.349 1265.28 li
607.851 1265.28 li
603.855 1265.28 li
432.283 1265.28 li
428.357 1265.28 li
256.789 1265.28 li
252.863 1265.28 li
81.2945 1265.28 li
77.2952 1265.28 li
-80.3305 1265.28 li
-79.6196 1264.03 -79.5486 1263.9 -79.4783 1263.78 cv
78.0487 1263.78 li
level3{
gsave
clp
[7.36759e-14 1203.22 -1203.22 7.36759e-14 1307.89 450.883 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36759e-14 1203.22 -1203.22 7.36759e-14 1307.89 450.883 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
36.2335 1329.82 mo
40.3688 1329.82 li
217.764 1329.82 li
221.824 1329.82 li
399.22 1329.82 li
403.28 1329.82 li
580.68 1329.82 li
584.811 1329.82 li
762.135 1329.82 li
766.267 1329.82 li
943.667 1329.82 li
947.722 1329.82 li
1125.12 1329.82 li
1129.18 1329.82 li
1306.58 1329.82 li
1310.71 1329.82 li
1488.04 1329.82 li
1492.17 1329.82 li
1669.56 1329.82 li
1673.62 1329.82 li
1851.02 1329.82 li
1855.08 1329.82 li
2032.48 1329.82 li
2036.61 1329.82 li
2213.94 1329.82 li
2218.07 1329.82 li
2395.47 1329.82 li
2399.53 1329.82 li
2576.92 1329.82 li
2580.98 1329.82 li
2744.02 1329.82 li
2745.04 1330.94 2745.15 1331.05 2745.25 1331.17 cv
2582.08 1331.17 li
2578.01 1331.17 li
2400.47 1331.17 li
2396.41 1331.17 li
2218.86 1331.17 li
2214.72 1331.17 li
2037.25 1331.17 li
2033.11 1331.17 li
1855.56 1331.17 li
1851.5 1331.17 li
1673.95 1331.17 li
1669.89 1331.17 li
1492.34 1331.17 li
1488.21 1331.17 li
1310.73 1331.17 li
1306.6 1331.17 li
1129.05 1331.17 li
1124.99 1331.17 li
947.436 1331.17 li
943.377 1331.17 li
765.827 1331.17 li
761.692 1331.17 li
584.218 1331.17 li
580.083 1331.17 li
402.533 1331.17 li
398.47 1331.17 li
220.924 1331.17 li
216.861 1331.17 li
39.3151 1331.17 li
35.1757 1331.17 li
-127.942 1331.17 li
-126.945 1330.04 -126.846 1329.93 -126.746 1329.82 cv
36.2329 1329.82 li
level3{
gsave
clp
[7.36493e-14 1202.78 -1202.78 7.36493e-14 1308.65 451.203 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36493e-14 1202.78 -1202.78 7.36493e-14 1308.65 451.203 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
-22.643 1392.71 mo
-18.3122 1392.71 li
167.44 1392.71 li
171.691 1392.71 li
357.444 1392.71 li
361.694 1392.71 li
547.451 1392.71 li
551.777 1392.71 li
737.454 1392.71 li
741.78 1392.71 li
927.537 1392.71 li
931.783 1392.71 li
1117.54 1392.71 li
1121.79 1392.71 li
1307.54 1392.71 li
1311.87 1392.71 li
1497.55 1392.71 li
1501.88 1392.71 li
1687.63 1392.71 li
1691.88 1392.71 li
1877.64 1392.71 li
1881.88 1392.71 li
2067.64 1392.71 li
2071.97 1392.71 li
2257.64 1392.71 li
2261.97 1392.71 li
2447.73 1392.71 li
2451.98 1392.71 li
2637.73 1392.71 li
2641.98 1392.71 li
2812.7 1392.71 li
2814.16 1393.85 2814.3 1393.96 2814.45 1394.08 cv
2643.54 1394.08 li
2639.28 1394.08 li
2453.31 1394.08 li
2449.06 1394.08 li
2263.09 1394.08 li
2258.76 1394.08 li
2072.87 1394.08 li
2068.54 1394.08 li
1882.57 1394.08 li
1878.32 1394.08 li
1692.35 1394.08 li
1688.09 1394.08 li
1502.12 1394.08 li
1497.79 1394.08 li
1311.9 1394.08 li
1307.57 1394.08 li
1121.6 1394.08 li
1117.35 1394.08 li
931.377 1394.08 li
927.125 1394.08 li
741.155 1394.08 li
736.825 1394.08 li
550.935 1394.08 li
546.603 1394.08 li
360.633 1394.08 li
356.378 1394.08 li
170.412 1394.08 li
166.157 1394.08 li
-19.8091 1394.08 li
-24.1447 1394.08 li
-194.997 1394.08 li
-193.582 1392.94 -193.441 1392.82 -193.3 1392.71 cv
-22.643 1392.71 li
level3{
gsave
clp
[7.36727e-14 1203.17 -1203.17 7.36727e-14 1309.73 450.926 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36727e-14 1203.17 -1203.17 7.36727e-14 1309.73 450.926 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
-104.548 1458.93 mo
-99.9465 1458.94 li
97.4309 1458.94 li
101.948 1458.94 li
299.325 1458.94 li
303.842 1458.94 li
501.224 1458.94 li
505.821 1458.94 li
703.119 1458.94 li
707.716 1458.94 li
905.098 1458.94 li
909.61 1458.94 li
1106.99 1458.94 li
1111.51 1458.94 li
1308.89 1458.94 li
1313.48 1458.94 li
1510.78 1458.94 li
1515.38 1458.94 li
1712.76 1458.94 li
1717.28 1458.94 li
1914.66 1458.94 li
1919.17 1458.94 li
2116.55 1458.94 li
2121.15 1458.94 li
2318.45 1458.94 li
2323.04 1458.94 li
2520.43 1458.94 li
2524.94 1458.94 li
2722.32 1458.94 li
2726.84 1458.94 li
2908.24 1458.94 li
2910.27 1460.21 2910.47 1460.34 2910.68 1460.46 cv
2729 1460.46 li
2724.48 1460.46 li
2526.8 1460.46 li
2522.28 1460.46 li
2324.6 1460.46 li
2320 1460.46 li
2122.4 1460.46 li
2117.8 1460.46 li
1920.12 1460.46 li
1915.6 1460.46 li
1717.92 1460.46 li
1713.4 1460.46 li
1515.73 1460.46 li
1511.12 1460.46 li
1313.52 1460.46 li
1308.92 1460.46 li
1111.25 1460.46 li
1106.72 1460.46 li
909.045 1460.46 li
904.525 1460.46 li
706.846 1460.46 li
702.243 1460.46 li
504.649 1460.46 li
500.045 1460.46 li
302.366 1460.46 li
297.842 1460.46 li
100.168 1460.46 li
95.6447 1460.46 li
-102.029 1460.46 li
-106.637 1460.46 li
-288.248 1460.46 li
-286.278 1459.19 -286.082 1459.06 -285.886 1458.93 cv
-104.548 1458.94 li
level3{
gsave
clp
[7.36843e-14 1203.36 -1203.36 7.36843e-14 1311.21 450.772 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36843e-14 1203.36 -1203.36 7.36843e-14 1311.21 450.772 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
-219.009 1537.03 mo
-214.029 1537.03 li
-.405348 1537.03 li
4.48349 1537.03 li
218.107 1537.03 li
222.996 1537.03 li
436.624 1537.03 li
441.599 1537.03 li
655.136 1537.03 li
660.111 1537.03 li
873.739 1537.03 li
878.623 1537.03 li
1092.25 1537.03 li
1097.14 1537.03 li
1310.76 1537.03 li
1315.74 1537.03 li
1529.28 1537.03 li
1534.26 1537.03 li
1747.88 1537.03 li
1752.77 1537.03 li
1966.4 1537.03 li
1971.28 1537.03 li
2184.91 1537.03 li
2189.88 1537.03 li
2403.42 1537.03 li
2408.4 1537.03 li
2622.02 1537.03 li
2626.91 1537.03 li
2840.54 1537.03 li
2845.42 1537.03 li
3041.75 1537.03 li
3044.56 1538.59 3044.84 1538.75 3045.12 1538.9 cv
2848.42 1538.9 li
2843.52 1538.9 li
2629.48 1538.9 li
2624.59 1538.9 li
2410.55 1538.9 li
2405.56 1538.9 li
2191.62 1538.9 li
2186.63 1538.9 li
1972.59 1538.9 li
1967.7 1538.9 li
1753.66 1538.9 li
1748.77 1538.9 li
1534.73 1538.9 li
1529.75 1538.9 li
1315.8 1538.9 li
1310.81 1538.9 li
1096.78 1538.9 li
1091.88 1538.9 li
877.841 1538.9 li
872.948 1538.9 li
658.91 1538.9 li
653.926 1538.9 li
439.979 1538.9 li
434.994 1538.9 li
220.956 1538.9 li
216.058 1538.9 li
2.02494 1538.9 li
-2.87292 1538.9 li
-216.906 1538.9 li
-221.896 1538.9 li
-418.536 1538.9 li
-415.814 1537.34 -415.543 1537.19 -415.272 1537.03 cv
-219.009 1537.03 li
level3{
gsave
clp
[7.36681e-14 1203.09 -1203.09 7.36681e-14 1313.29 451.004 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36681e-14 1203.09 -1203.09 7.36681e-14 1313.29 451.004 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
-320.708 1601.57 mo
-315.391 1601.57 li
-87.3333 1601.57 li
-82.1142 1601.57 li
145.944 1601.57 li
151.162 1601.57 li
379.226 1601.57 li
384.538 1601.57 li
612.503 1601.57 li
617.814 1601.57 li
845.877 1601.57 li
851.091 1601.57 li
1079.15 1601.57 li
1084.37 1601.57 li
1312.43 1601.57 li
1317.74 1601.57 li
1545.71 1601.57 li
1551.02 1601.57 li
1779.08 1601.57 li
1784.3 1601.57 li
2012.36 1601.57 li
2017.58 1601.57 li
2245.64 1601.57 li
2250.95 1601.57 li
2478.92 1601.57 li
2484.23 1601.57 li
2712.29 1601.57 li
2717.51 1601.57 li
2945.57 1601.57 li
2950.79 1601.57 li
3160.39 1601.57 li
3162.53 1602.72 3162.75 1602.83 3162.96 1602.95 cv
2953.08 1602.95 li
2947.85 1602.95 li
2719.48 1602.95 li
2714.25 1602.95 li
2485.88 1602.95 li
2480.56 1602.95 li
2252.28 1602.95 li
2246.96 1602.95 li
2018.58 1602.95 li
2013.36 1602.95 li
1784.99 1602.95 li
1779.76 1602.95 li
1551.39 1602.95 li
1546.07 1602.95 li
1317.79 1602.95 li
1312.47 1602.95 li
1084.1 1602.95 li
1078.87 1602.95 li
850.493 1602.95 li
845.272 1602.95 li
616.896 1602.95 li
611.577 1602.95 li
383.298 1602.95 li
377.979 1602.95 li
149.603 1602.95 li
144.377 1602.95 li
-83.9942 1602.95 li
-89.2205 1602.95 li
-317.592 1602.95 li
-322.916 1602.95 li
-532.728 1602.95 li
-530.647 1601.8 -530.44 1601.68 -530.232 1601.57 cv
-320.708 1601.57 li
level3{
gsave
clp
[7.36882e-14 1203.42 -1203.42 7.36882e-14 1315.12 450.697 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36882e-14 1203.42 -1203.42 7.36882e-14 1315.12 450.697 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
-437.324 1673.87 mo
-431.622 1673.87 li
-187.012 1673.87 li
-181.414 1673.87 li
63.1952 1673.87 li
68.7931 1673.87 li
313.409 1673.87 li
319.106 1673.87 li
563.616 1673.87 li
569.313 1673.87 li
813.928 1673.87 li
819.52 1673.87 li
1064.14 1673.87 li
1069.73 1673.87 li
1314.34 1673.87 li
1320.04 1673.87 li
1564.56 1673.87 li
1570.25 1673.87 li
1814.86 1673.87 li
1820.46 1673.87 li
2065.08 1673.87 li
2070.67 1673.87 li
2315.28 1673.87 li
2320.98 1673.87 li
2565.49 1673.87 li
2571.19 1673.87 li
2815.8 1673.87 li
2821.4 1673.87 li
3066.01 1673.87 li
3071.61 1673.87 li
3296.42 1673.87 li
3299.18 1675.33 3299.46 1675.48 3299.73 1675.62 cv
3074.55 1675.62 li
3068.95 1675.62 li
2823.93 1675.62 li
2818.33 1675.62 li
2573.31 1675.62 li
2567.6 1675.62 li
2322.69 1675.62 li
2316.98 1675.62 li
2071.96 1675.62 li
2066.36 1675.62 li
1821.34 1675.62 li
1815.74 1675.62 li
1570.72 1675.62 li
1565.02 1675.62 li
1320.1 1675.62 li
1314.39 1675.62 li
1069.38 1675.62 li
1063.77 1675.62 li
818.751 1675.62 li
813.15 1675.62 li
568.131 1675.62 li
562.425 1675.62 li
317.511 1675.62 li
311.805 1675.62 li
66.7862 1675.62 li
61.1793 1675.62 li
-183.834 1675.62 li
-189.441 1675.62 li
-434.454 1675.62 li
-440.166 1675.62 li
-665.268 1675.62 li
-662.59 1674.16 -662.323 1674.01 -662.056 1673.87 cv
-437.324 1673.87 li
level3{
gsave
clp
[7.36846e-14 1203.36 -1203.36 7.36846e-14 1317.23 450.746 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.36846e-14 1203.36 -1203.36 7.36846e-14 1317.23 450.746 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 27.7.0
%%For: (Akash Gupta) ()
%%Title: (SL-072622-51930-20.eps)
%%CreationDate: 10/14/2023 8:39 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj26RoCqk1lgd+_+IebFqZ;X%Cnb_IJie^_JOi=@(2*9Ys0Fr_X5;-96>/Wo"-[/J$'jpBF_X!<FfJ2tN>3DgHDOe0/iN^"
%bp`4ZRBE#VD-_YhBPd$XFk^^+^LXTHm[e^sc;puCp=enf7]k'QcXmrAQg1"3dP6/Kb'`hr[DkG!@]`TnV0`QMk.u)Gjt/MqB;JAC
%at!nM&,>;]D7YWHJBnY5%p%!^[,Z9iKEXLXQ]H!e'ZD5Db`p?4kAB[tg?u=?SSFr!FUFHN<\=@!4'o8SImFU7c)C7j8RH'F]q\K7
%f($f)`)k@,c;Y"/R*KM+!GV.2((I)1NtVBcJ#Q0G#_-kErf&Qmrs>=*N1Md%EON:k0o"gt?muu2Up%2a#5-aOJ4q_]T\utseuY,t
%*qN"S>W6S5*6Y)6iZI-u_uma#<HS)[ZkQbX\L.<Rg0/T,b[^*Ceb`u;o@b]p]N2hj6E@FkrBi+LjT8e*GACONID+>@GZIphI6O_k
%.UJ,(M]]0..kt[j8b2?.MVV1rf^"VM2JQO%@5d-oiHH6sZaJ5"%mm/uK5<HZqJKf(;9`6sP!q4O]8inB%]Vi/2FD)UVOdfNk$n*n
%49a%:T5K9I>9o&pXm0o65+C"P)c(SrHAI\b/CP'hFer*?`8YNI)9;cr;p%2=Ir>$gJ2u#Ne+)_^<)i6m@9jFl-,7.r/=,RdKuP!4
%d`.nJ')=S&6`k>JHlN+%hpE[[c!X]`37qok%FmK\r:nZos.+58<U8)"/$2:M\QV444FT+iW&,!tbaqo(1g7iY8nR\a#Q6BBR:N/<
%m']MtH3X<g?'?pARo>Y9OQP6e1B+b)0E2ph5L'/&Z",uV#PcZBqCf&'BF5:DY=nK*/`Lc6VGR4+hO`\aU5/KR5klhZ:uH>oSlr'm
%M..9[f(YW(InH:&a]eAAST;@V1;7).dZ0pfrtuJbNH"W#WLd3BeP!"Ib%j\=&d_S9=Bt'45,<Jd6E+"d*k+bdPA3*VCj"J[RGC?-
%(-TCPpX(\SGPi3DlounSE`B0))9_AgWuWi7VfC;+MO3!V.5_-dYM?YiG;nhOg!<G>A8PccA-MpY;GQ/"0j8[#YEA%lq_ZGjR46U#
%%/Hr;S,b[-U\m;;Ct,KPZhWJ\A?45F<6I.;kBFPu$-(=STTqiK$$*SsO46k.0!5m=X\tuf$dEL"npS2X3hn"Z2umMhh4Z4hL=9%u
%B8VtpO$5dWo_e5(a)H,jUEA#`lt(Oc?F1O8U0Y!/gTbVMZ;')XF^)1P>HnoYfikZsXJ/_!>g'BgbH_OL[kpac'Q_B$1lID:R0D'5
%+3QK8_phE*</bBul1(No*fo_rUaPr`LnA-GcbYg2q,n*t;rjk0dF4iQdEeOa1^]9c)3/,EQ=1\dTc9Go)N)81?T)4M@YhW\iZaHI
%$7#C':hdjZImb3Y&<1AC,DP6X3]SsqWi1f\X=PfYb(<Mj$M<@.6su+<ISBSmkXXeX/bi1sTBMofO-H79K]>'"ED@`")FS\jZ,u<O
%SUsd^(7[g+a]Wd%=*6B%G7E/G/_>.df6*#>K"L5!\]]Yn>0mV&_'k[=*kU>mIT17oKgN&K:fo8"'pabM;(ZNOrBE$.OVp5/[Wl':
%p+imE,Q8W-#o:^+JYZf'>Tsr`,W@bUO@@UYOAlrc^(s8jQGI%Y'od=T+Pj:nLE+_gP#Kf/"k'P"HT@H,cRPH_^8*EG8>me03_?VK
%nn"#T'hH=\=kZ5Z6@A,"+(tu>A1fZ=+^Pj+#e9]_/W_;IH6J5ZSf<Zbh,K$;a.p1-g7g9i`Yq7?=k70Eop0(G+&Vl%NUZTCRKAJ"
%k(()Skn;C-FK.mc[7FK0bdXRIH'-krFlKDnWjbZ,?6jD)M<f&q+W7LT((??4NFYCrQUspf8R@9lJRleJ))=dLFHS)<<-F[?Clr7f
%oU_ig0ni>"BEhM$D!$4V]ML7pa\_Q>6B@edL^]p9=Sr1-"c#p_U:QZEj+EXP.?%1>4:%(t_+gP#C]bK;A5GY+B'>[m(r6Fr*u*Hd
%Ctr`ZO%=`XB3@^\-/fX/qKpQ\EP295rslGa=qqi`f-5;W/e'pC`W'skDe6I_lQEMf'7J0MdU+*If/=N^O$>9ubK'^K>/)`dC+_=<
%mocbf?foG+C/keV*KMD;BB6ArT$#:D&?($t?\;^)AG?K`1UB]FN:^]EGLQS4VU0(CP!bI0WjPIBX8;uI@i(*nX&SE]:SE,bqiAA?
%'`P(43[_C"%8qaV'+'c2p111ggR^uFoq5,sSs0`72"L`3f:L4$K-=M"hI$[<?M4)h1FUZd@WUr$*3ggK<9.oBWPSBb+_RBYJeEOY
%;G?2X=fCRsn^m/CbA2<;[k9V1DX/tc=[R#./N5jk[m-9uc)[0a)G-Aqr8_WfW89\l/9a_$]N`ti/^8*"FKRd)G,O%CT3sJ8egFI9
%m-nCsjsHdEmE$B7g>6knqq37r\UCA%YF'%$Q9a^JKB;K,-K/#`>8L#lEn(!XiL7JRrO2O-e*+6_hMRr_:?B4>DrQ]*0@JZ<2rKY;
%[3sC9HEC)CETpqXe(ItS!7G+]CbF0QhLTA3T#CY8?*8\KbbB<GR2^m$_bfd069/Nmapg_K@44&CjTZup4)1$/R]1-\WpPQVbb[)%
%_dIAtK"4jKc=&7_N9,f!gb>&kDo?ZVm@cph`WM+\MV^"i[W>?H2#_b+gN.(_llJQ;.A]^olA"h(?]#oU\ee6%n&@G5jiMHgk19Ku
%G,MY0rMjm>c9MLo1.%=Q!@t!a]3R#=M\gI7If%B6UHFO2UUJe=6cAl!6><R<NHD(=lX!R@NN(^OVlJPKU7H03s'DkoRk1@&/\a1k
%cq:_!]kEeJX5`Nln(OnA"`&(;csBT3:=Xhh/e/+"CCDH^?ajC(LMj6D>5G_]W-e2!fZHb(S9%e<ItHM-;5rpLPY8J=MlGu'A;"jE
%\:mDch'q.\j0$8.(ob[eqG)"M>+ilf)Sk-Wnq?moDEE8eqr,)REY^Tjci;cdOs/pDr`h)8>E*C2Z^)r50\C*^U!ke7I_cb21[*R4
%=3bgpG<(CdcZOJ1X*4:-KKCmhV\b'!IrG3EbrgNrp#g;[\t@-=4M?Tg5ICCO;gg?EU(?slEi&I!-Lu;*&\7=3cddBH.$e&ecH2L+
%8Z*mGDfP,*M06"Er3n"l&$'lV[e!<iYpI<k`Dd(I.L)._=)jSp*C#9Y4u^ZEUb#^er$if]!EJqH1`Ec2bOb_/gADfW&g&nE?QNa3
%c`h=t=N<7d.N*Ei1^+ANl/'"aW;0E;l6.nb+7.lZ8_3:4)<p:&PBGlf6H_t9LGJncY]@G)C7a@Jhb2e)HPo-);*!dcN")EtHO.VA
%>u/\kGR]YaogLE30)Qc,(T6UA)f0r;rPk,W0BCA`V38<kJe+niD^nQI(@ts=r;XW?V:5)<2d!$^lp_3FmLCX9<Rs2nT]!,th=1LL
%W?cG-5f*J.n[YTWj"GU`gdT2/Wi<@D=R&(TF8hn=h.Y'DKBf"l/*Dm!GQ(l-.Fm`jD9&^IHaRa<:>;bVZd'_:mJ6^pj7sEfm0EBS
%?f0CGZ.a*H8nAO:@TtKCLJ,qcPq#etH/g3+T6BOl>Prfebdie7oJ+Ud6_"BBa?(p"do5Y@%XrYhDNu.0V=lBoA+m<Mr[U)-Z$0m=
%;Xbo2LjC/+[HRg0^pPC%2f@]4hW9kGkrN2Of12/)Fj3'a29lDXZp#\c(6tY0X`jS5fX-of4uV#a%%4=pWHJ(A8@<q>^FsWgOuCi\
%kh8t8>cn,e:10rf$6sS>2m>"JBiq$Jm5Z/4a1&h%.B/[HTQ9G!Pfi+U=gu`6qHloAf2HCtLsbmn(&kn_khkgP;Co-E$t\M&5KQNo
%MV!:6pAA)8V\`6*/OJ^UZRV;Vjn6XT/J'l0h5G[s<1Pj#7fE:N;S@CB6BMJdGN58!2s"Hob2C2rl'O3hPpjq^&nOn(HWZ+[YkBQC
%Xq/%YH:X;Lkt[9YQD+di.E_/!LBG0d4J5lB<)1]rf:kBd<TcZtU82$ULUAPJ>*S!/P?Oq,F=iA2X@9Zi!T$2B77jCQ_ci9dZYpAN
%(+#eb%CgQiCJc_3qKql2SA+UiNut*_;UA>J`'>?oFq6TqZM\R\M1I_Qir1XkIrt9&SR6UhVr]N$W>c(D8Q,5FO24#clqYjH8XDpg
%r6oZRp-eB..5V!NU\FiVRPhHfIuC8)83+%m6b>7`CU\!/Q<FD4\naZWmD!)\4G`m]Wr4lXg<`tA3bq*`2RI30`N"dl8I'`\DgJ(9
%gKe[sVBY7&h>eOqd5a(iLMHI*$(QmG6T)ITC:%">f;ic=9"tmS^N&_V]nPVrZeW9I@qV'cRAt($_!!u:^UpII<AWp1VIWYiIOc<4
%DiR$1s6&U(bafHIhSk$s/aoc\i;j"t"'PIqkme26;:?NeEjHE^L8UGE@m1Ft1m?,6X]mg.UuaJI;J5On26'i`GXp<\`@jPQ(l8O#
%lSEI(9$9rSenO-6Q8Ff:LSqN7e&qX,P]*5/#IXF>lWo3Y)09`=q#:H\LO3b<b)N`>UJ8qqAiJ8pcgQE:8?G$61'4rBNI?dlZ(!R^
%hpo0fK`Z5<4gB];JqmCbY?6@f3IU;eU5b_Y(TF:"#LL![*,aR8UuKAX9sjm0)RZ`X_VE3`T3bL\FiQ&\n&*Ro"aBbh,'J8EamN9]
%eU+M[Q<MhaadLaP\)9K`7C%F9bC@1bor<rBYgY8]bn"mqp\)p!*:Ek+eN"-6IrC=HfE'Qf\^V<7meI@eI#!'__`co9T'pXEGIZg_
%h,uo)2fmd'9^crHG<fZIiL]N"abo&KmpG$IV0[75:%uqjHXI'GB"Rfgp&>@m\WI3f3P'8J#Lm*h-ZS=(a4/_@a!VlG-s+EVY.$R!
%hd3G9pa=>QP'C7s@.hKKTi%`7[smWi+r0FhiH5$@WS9HXs7]9a1=^)m1.%>098btWecKI`[hEYnEm,Q54Kgq=`n?iV\?1)4R/9m#
%e@a(3bH&iE>,D(L><0Spgb9E9GE(9]]FT4RM&U'dUteHILLcd4)lDYMl+"P<`Ck]\BALj%n#6,1CQjrs6ScO@g/@(`k_XMGpT[Uj
%83l?Yn!_-%p9"Wde-8Q@mj;VqDL,ktIp9fCJH8M=:h4^H3JgQ\QMt`a+*Rr]M0,Hg3NVX;=sE(hP'MnREUM-#8ZC9oo2o;,2!b?h
%$o9Pf6]O9eT6Uak0V!Y2AmU4[QXT#fR!BQ]?@'q;R!BQ]?A=l7o8*Eb,21f/CTmD&-2bHIp0e/>QpDX&O</9Dl&%:.+3.+2;,?]N
%Y_bYNH1/`ce>f(A;Y@o&e*rla]0BpPh&HXrS;Fk+M8\d'1m*eG"+JV8<N94-r/cbW#Cd-mR2@Q:Iq*I<T#*<DX5cQ,L$:'^f75N5
%&)m_h.gM,f]f6Kt@!X5ZA)BlUa%p*Sdc*AOI4=!s&*`__SWcsJn^$^T46MW1\o]ESC/fpnq,a*/?$>>eANP7=j4&hNm/I1LBcJ/$
%]afkNng^UBmiJFUSWkO(/q'#OS\2fQBO$#s(Tg8Q4GSD>fD/,VecFCr@1;Y7Xj+Ne#4<XIY.F^VJ!ff2,ICZ^LiTLUQ:<KEZ5!79
%XkZ4aQ_C4D8:\qW?(=!8R;`,8i`gU>d`U1V2jhO?Q_oT+`WE$8'<i%;@3/pG`u*qnmR827)WiaY<-a4DN5<eL3"I-mO_tZH4N@DI
%\K9lf#'DL7jtVU9N'W8g4/J/f.`6\s@=/j=\=>%lEatHa8*P2pEmuS(4/LY#URJ?u4F[!SRf2eWWeq#218PYg)k!LJpM?$Qs6KC)
%;b;1JNJPmi1'#j"q.-s<]DYm_)`p/a\ibLnf!QlL=DE3+/am?(X-[`f8lP;[%T5pWFIE$5gMIsSCNSsZ7LVeh`n>mhejngK50*0J
%TI\=NJXma%(WQ`&)Rln&WSW1-7'8\2iJBjM+[;B(I2X.DF@?BD%h'?t(j$/=T6lsO9,SBPNs?OD%l,8Rp.u+1dM9"qI^tg9JBGRb
%8G_8=:>pP!ns,4ipRpFpV2,Qg^4mR6,)n[[bn"DZTlXA"mr*(lgg(g[<R&Q<M`kHNCuo!!Z2\UE>ZuJ5N95lBgb>097WUM-[I7<V
%QYO2P7WZI\DA^W(S^>8fm`La(irZKtMs"!/750\`"tZ?=`O0,62[nlP1QPs(2[nm;><%sJ+%ee25+mFD^X8u"[n>n,Dm6"IZiYC]
%ijk9d2N6gRn_Aa\No@.tmW&-$2K_gn9hanZSh#pQ^)<Lm0g&OsSt.BOqkg%6mjNn)B+0M"I1?ea]ME,ip$8)cCoQ-ZhmM378(T/p
%o&!#%HWVe`:ZjJsW6m/]X.A.S.8tm#Z3+ph;DTpZB78<D))N7Hd;\Wj^6B*#lJLaa0,Ldi1BX,'^@&6m_h@[/^0QLA=*VRB4YUU]
%,bhil><d%8c[:c@PY8LS^0T]GMuc,oSlH4k>T,$BDi+@,'Dpr<AQNg`Xm643^2tn_lKq@2_D`+a/a(F<FT#UAgH$gL]fQhK<$c`D
%6C4fGM`r<8!bMsXrquJ,(lS:YT4V(!;a'I'_&fGE8ld-PY!!l17Sg[\F,X$<c6T'(\`C*^YGKq!)sdo_qs2L4nZA`WO7'dA0na#@
%oP_'5p[5h.87c#NA+bACL79o8TR=HE86rY\li_M@]qS]&eT'de%@s5e;`&TRrq_S.e^q]LpFt;!3.Co*SX=uWMmfD\?;jOdGlWii
%cf*Gt5M[;sU@8\q[ds'bA"W1V-i.4(.Tb:j\^?"LH;W%2[o"$i)#-P)e>d[ecFfB[hA@l*_o;.1]f;lfr4u\ZY9I!L^+Q9ma+1@O
%=,n:+HYlHSk/4THnCP[oP8M#ME;6`TJ`P$4QFHb/O25;fh71:fSd@/7ale/VFEdOun_rf^L'JCbRGRG'fn$Ql.s+(h:IW@^2<=\B
%gU@b4-2?`t.>"@`EJX*L03r3:H?uTd/I$[O\sd,k``M5uVtGKQ)OcN+q=4N4qsMls)P3'G<2)mHRh)o$p6n".5s8[$Qc`MQn1uD3
%_a>aT7IQ@DL5P?Se]Gk@YOP[$)[=!_mWs&%=CF.q#<0*sWLEkTJO-fGNOq.;[$pE*oL"E1J##UWNkEq`[<4G(X2/%C0/qPI*8>=q
%lKt@_4g"?/11d$)@62Qf0N#jMm+k7=;p1uj&WncY9P0U&p%%g/ZqEb0]@N5;G"0U/MO:LS`G?r7OdN,WAB]p`+D$0OU3Gdoq2+eM
%jJ-#2m2Ycra#.%AL8g5h[Ue3R4lFJr6EPE"9@0"Ys7*DHX..cA<f,r2D[p-+1fd^YQ%PoZ-$gFA_b>Rj2B)6?H41l]P7-;;n$lO;
%^No`jUWMCRrc_SS0)aYf\!%B6$^J`*QRTASm?>b?WEqXZ>+*W9Kjs_u^<HB0/sL+YlEP9CK1gD-NS4g>mZpXpHp'9NaTi+!,\2"7
%@;6V:LDa?Mi=m+!W#G]:./]_,oCqd!rU1)qc43UaDNj_,XZ-6Yo3W'faj24C,r/&!8LHDer`R*^Wb9SF(L<hI2Xr:K3l93u&g5s$
%.rVtYVGJh/[qrsd%"-DB9/5[`Xh0=JY>j?/9L)QO2(b.ZR"h++:r$SX3i3G&n^e`VoRgQO&:$%sREo6*9]\!W\IH6JOXl)-='e7Q
%7<s&B+CV::dql'ao/[o<TA8!@An)d_Xf4E%=*8dH[R)\Ei$ta8g&\@?T==%km7rSGUI77=j22s8<;tnIUTJPil:p^<Bi)Xt2ksi=
%pT$sKe)54M`H_+(*3U\=CGZ2d4O0/C^Z:iH8]HP#h"cAAfVmb+s%bID$0Xf&"@t1(b2"kWhH;CPL_O>(1EcbHMa+&'N<$i$fAl1T
%(QktTajE`Mm)p0,YlhJm1.("j$d$XI3qGD/$I/KhK_hie=$l*tpu7c9_sXd^^-74/lp])@%5qO2+8dUrg2iTA&^b+Bnt3TC6-lVV
%@c-].J)f.R&AH^DT6ciqFS3*k?Z4FIpY>NM+^WK43^I3^nRI2aE]91EXOcnW[`duSq'dM:<t_dMPd"+HrEYi+R)!FWRRV+2Cp.H#
%%C3qSFuS!D41EDpDS+@Wqs0Pn[U"L^$>8;#>N`aDWIs_sLU=e)O8et06:?kS(n99_<QkCkK6q;elsCBsSArsIPF:+t9!uBboD:2n
%f2V3<r_$0G-rA-'NgX?kn_9=IW:kGS2+MX7n9*3amGGZ4YB4\4r_&GRD;35!R\lsLSFFtdS'CH,d@k]-brb3,[]7B7B6XC,>Ve1T
%7\fu'c_HfCG/IY_fjfJ(o"^[=L[YR(&!FH%Yc=^k-j)gh=LX]$Xq@;=]%>)@[Cis"aTt1o'$<LKe]fpD9tI9/4mU\Y]#0n$\>7X>
%*&^Ek8gZ_BSKHiA9X3`*'aW$TJF>LH0S8K8,Jkh,V@ikZc"]G!>H(Y?-fqemCikilSX%p,!DKshS=69H-)OpU2,i^^)O]tj]Ap<!
%IkF,E+a,qRm<,BqKI%nWf'6_6^[<\JdC!bLEiB7P937$Qllr%=coihg%3$OT;MdB,C'Qgg!P]MW;=Sth?Xs<U*tYPG/%*B*WOD1O
%]<uh+C&.JY7PccD-n;6[3JrKidI#G`FYD53Zl5k!3C_EHG%RZ,Cm+.m1Rr^7D#X!/buQ]bhau)<gNg&'j0Z&%go]*n8`'&B5a/nk
%f2t<c"8Trbn%'bpS_ohmn!@,AJVf1A&Fs#>]M'QgVVPaZQ>f?nhPk+#J5UWcksQ6?+q0q^aj;\ZV,aW;5RWnWmDM%8n4por`IaKS
%7CP0Y)<+5EHW=!A]]8s;:'VDuQ>>"tkpg/JIkr\FR#'D/8E<>rULZ!*21ns5[(%ricmH*HId?sHI,6E\d_o-YGP#S>i<TgfqQEeD
%-e:PF9r`-2^mn]!@qM]<,s828m<NH<ZZg2]qJiudlt*UDc#,<dg5q]HDPu1T6q2]d?"Vi,2eq/D%rK*6lX'JLZ5ZK^d$tK'AOai_
%[lgkNK4AXC2!C>W4gRO+6<*.7<n^%c`enN!VJ]^fX\*UF>!u)pXFkiUAuUL%&dZs$KiWdiWLnI$nO53<3jBOT$Rg1%Dj4$h-0VUn
%Lu!.1?+J@_Ga0>uSse8FFQDn5eM%-l)U$W2X)V+@Go8nIB8Y7/3JF#XeQ'XpUh<\Ps)'BWbq=.pXZ+4Om)SpII;rlj[6(j&)Jd#7
%mMr?iY3C!HfkbG2ac7=D[pRBt^?W5Yjn19VSB[,NPND>"[H=)GJ$Rb,mu,lcdts3'G4Nl`4k;@>Q8\c]s3NH&m8`K.W_+A)[.*6r
%_>\acUCUl'kgtWs;LIT.p_]!_hu`N#hUeAuoO23\s'5D,?@@GjkP3Atm``A_T:>i!]:[6Ppp81o(7]SpP<M[#i8MuicIS%$qD@jH
%J*t`=.hh`q1]$,\Xr>u")*?[$l-lsJgqL-lD=>d.:I`l>b\u[uoHC.'\'#.clR2[ZO$@\YhrfJai^8QO\Rn]#3Ge5XrbPiVbqdW)
%$^MTh^:sAPIBo:h98C.%aR\rADBZ3e]mQgrB6%41h4O)>je^s8NT`P$Fm8D;m,u?_M:Z6qDnGj)VAdo^VoLRuV@00P'5__h?e6'c
%I%F?Pn#>&krere.ZsHndS*I8dS,;tP>KZ)c1FHi,dihNNG5RC=%2QZB$<[)qoTKe"^4"ERlAUaRf$aj4`9d\W6W9P#qi0O3eaVR\
%=g2T2JA,1BNY/^&BSu8%?97qLNP)i#r:k!<Y[)N7?<ip:2&N+1r:/*Odu3gq0:'Ts+.fVL^KBBOVmDY$YC:r%('TPP+1hi)_ik6:
%<5q^`(=!i=h<!hCX.,FJ[_0(GIIVW,H>.e%IJ*2Cfq)MR>McUV-f+?c5;T3UhI`\K4"WOe;Z4jV@HZ=EqEjkbJrNG#m)sd*d;-M(
%QTcEA(LPF)r&C6mHSfTlB:m`K$%1=e<njf:QO]9nh87p-UIW8K+4J3!qsO(8C1VO>*`oGVWp.Kk3Hf)j1[QF#cml6!e#2V8.*BWC
%2`153UTi4lSkKre[%in<g<*.)>*q9#34\t.i_f-%^0"WIT2.4#i926uk!.PH.5dG4SLL1B7k1]lA@%3k"po3`+e*oUV?9L^!esE4
%rAp+4gA(.nqfLD;b/3RfQS&TOGOd9`)I8qN36E=Y5?F>'eXegFn5TrbSfQ.;N.7DCN]p\&a?J"K&$ob(C%:tV9bU\a0rqBd-XYFg
%B;_&=)VM$,kOR<jG9b)nZb::(g"_pj+5-R#DCR_h>^_`7cF2S@e[FjVp!M'KXPSADA^0c.DmIs#d;N/l4_SDt=6k1`>rH#%BA[@:
%A`q3@q2g"Z^2IZIkML)f?gbTecG$<Ze(NaIe&C[jkL"qKdWk(LG'WE:X6f/Wk*PH"Aofg+2V0Nkf1KNXfo;?I;q\9mCGl"WYY`U4
%XKEMqpWA9cftHg7OmIkCZ_d#dK,5mPk0&PSG4s\&g6_1#?1V4mE,U(N>PZWnP!,hhY@UKJV,$`+>^;l'S,N+<gXs`RA:Kp>IqCdg
%[+?PUeP^U%ZrpWU))%#1O%c-mGX!ssn5:.G[E$"B.-m_?&RA[,UL?X9+1#lTS;iBIOh'0AQ]_*#ddrT&XcG\:(/D;^7[Cg&2+CW]
%Y1?(n^:`;BfrV7o,MTVMoo]!>^"ng3$9dTGTf+ZHY`h3e3BX(1O60KNOm7:>^tEDmlUZ*?=iE(cM>,TbaA2'Ckd^0RA9=ht\3HG:
%Z!NKkqF>2J*7q)Y*K!idT7<Ip)L]$lj4!5O`gb6#f/q.Gkh?%#Mp\X[mu5ZM+"qZ0+%N4U7_cOZOjVTXWAWr]n!oC:d,+bp@7KS;
%$R__:n\Xg[Oj04_:F;Yb*']kj[W:q,R="hkM4&dAp;HoMnFOd"gLg0$_P0*]jL&=84^"E62kOnNCVP,"T:]D7nmuEOlUbf6o^e9A
%osZ;E:;=9M:R[i>r)e-FqgsP?)um.I2E'B^pbJ^aPj2aZV_C:-Ht.PQXJd-+N3/V_3uM7PqdO;Va3MF<q`*%"0_VVlqK&b/UM>ee
%3;C3FeiYFSNFsaf@sm:CnnpQSIb#Jtm#ejKfe)mgpoA.<P(ji]Z1d%7YCAO6O7/)nHSPNah9+]$8Z<Wga.E*P]Y:nJ+7J?hp*[l7
%qmhQR2tLIpf__,0R!UddAYSt.@8*b?mSkOA^<F?^fWS%.-ba_!egHKZO4+bTCT@[RS^UXn@1=UH?XtPU8+).(bI(q0?i4k(P=s)?
%+"#U]7S`C&GK)#FHmt=..rUklPI7,o9m2D48#@Vj??p9t@<u_3?<`nkHMO\6T3D'$fUgg>T2qgQ]NNmZqVK<-SZ:!(@[O-e291)*
%[eOq?Bn$!OkYpg5im4MU?Q5n=?gCM#VshVEV5GCShRBD<[F1D>Vq%uCT6;+XT;STaNk\>):?,`.me+Z[o\t)VBR8^l@VpF@rBkA3
%1t!G7ritnPV`Q-X2@]7onmJj"9NtiZGkO8Oq#"s-]j,uo=`09aqtP;,IocQO00MBY4Pe>Ce9=]0\ZttpS3<>lj9chjpN(7g7uc;q
%q*iVXs0BD243_]9jLWC(Pl,Xno6T735HNsRSMW&prpAS'IXZ5&q3-3jmJGN2g7*D*B&nsNHmZ>9I5p7d7a7?Tmd"dIS$O,`k0s2d
%he#D!c'b2.h[Ypnahi*fIm87Z]JN:)b+$]-W3UW[\??mddnQZ6"05q4PA<"6WbtMTW%W=k:=RgWZECo[fU@,b/i;)Sl`E<elt<`!
%BeLg1[J@g?9maMAmA'C6BmrLOGWWA-F)?"cT3C$Ll]s9u?!f;#^Xos]iZ%isqrF%AA*qo'7eSbU)TJ0//5.!9T%i;FRuc#C`eUHf
%3emD!8_[qE:YOt'l-k[Wmb8uKb/2#_q0lpsat2_9(%^UpVmc9jC%8%]W8CrdbJfkiCNk-g^cJPkeuYM3a)V"@(W3Q7WQHts\<UuN
%5M1>Sg8S@l24iOh$5T-(c$edNldnkom6]3>50_Dj37YLAI^l/BY;B>PhJTmCn\(gsDX$5mqqZTcRdW@g2Z'lXn_NQunjo(jf?9H4
%O5<HL[^u?FObT9No![,:1DX#Wk8"j]g2jla?e=EiqemhD3[JA;\M?0[5(C!0U\]B(UqHQ:jF!AArq#@&pD:B,*uA8-5HRVmfI3;T
%?QADqH2F?3`mj1DXh8Mq^K<Vr3kt4Yl0A2_Vfdg2I'_NHJ!nJ3SA(NNBRP<>fj*9X=^$9_pp/F$\Z]U'=(YbRCjk<ncK&+$<TWSS
%=ic'hH<SZgT<![Bb/`PZrpftbiQ"@NUc@oBoLI;Wf0(XuD(;[I\)PPDZ.UU&dkD1*NMlV>6!Kgcf]dM7/0#\5ln(Esd&ekQRiCb6
%2k0X@in+-m_IE-6qTdO5pj@4`kWGD>HN,9q=K4PJqm\bns.d7i2fmt2Dg82KQOc#:m?R&)e;G%tkBpK:S_Ck5.pp?>lRP2tVcp8=
%p[,i``N@_UlOP@9o<6K3erEh(mCo,u/PJn;=FL4[]Wh7M?"q!?l=q8Vk.T1,2`nW!?f.C?H1Pr%2a=e/^A.>;mk)M8/fDuMB5Q(2
%I9_,=TV2^/D.fU4FR<W-o8iPn27p=]?S*n3n%Pu?lT^8Jfo9_Cpgg.-/UcL.2b,ebcCTMggrurTcYY:`;mafq,Md"%5F5+m[^;7H
%kgo%B0AWa_cF;*2m+8$#4(l)YnnupI*2?s!*DKa:gQOEtb4\L,LV:Cabe2^pgN`a1B>tm?^U#]%ICSlcF/ld?*VhJ(lg2?5^:Q6a
%\[d(B3BDQf[(J?o^A.Nkm/'R?YMQs2mEV9jRGV>LHg<'Nl[).^90`-JME;"OZX5[UHGBL%)&q7I*R-6cY[2hXnR6KbEpgj8l$E0c
%o_0a,a2P7N%mPOAX>uoYV<ZI+forh1T6?jO2EmZ`9s&hEO4mAo^X\C[IBIrZSGtA;U7D1f0NS/Eji_(RrbM4CI[l/g3k$hjq"=Tt
%S[GY\h4";e-s<>&2RB$9^/aQumgo!Xh_-"O:9+"Rq8:>HpF0U[qgG0@Spp_5\Pk+D=Zu[\HMM;o^\$d@ekW3V](PK1DL60bE3HRV
%FkD"d\6X893dW\WH)Icn/iVXiQ7CIliuaP1AYiBeg\X+p)/g5<gNrChkg^I2[ZC(45KcQdq]EC>Vamr_@pRPbO#M:&%usH?NU2N$
%Y!.'82063M;EJa'WlCC)\a$g$Z_+;kNAW\m5HM!XlAqJhdq:n6a/^jgh=4\1FDnElT=05+9=<qUn!r+PY3MR;HoRT[HhDdLm-L4M
%r2)Y4kt]`p-Ia^Anr3.6n]]:&)K/sJqi-fWq<(IHfc4jHm2ULl2Q!g!BUGF;pNcAnrb?/CQ.>J4lW*rM?L-OK^!`Jj4*(@>50A?J
%MJO*>IP$[_af%[@!Qh+5Xdr.`&]NkpZSah@?f$+<eu:QC?6QhY?)Z:s]UDpiLs\:K3ghZOnAhY7WST/mAI@X%s7L,KpQ8PFOnI.e
%^/p1PlpSF`8L)i5jhuIU$,T9X`&f%s58o=QEheAj9k(?f<LdSNd?Pl?cDC!Uh1=kX;Z/SC!)?kPnpV0R]`sgC?hVicpbWM!T2qHB
%UXW(<://s>EuGRs_J^?JX7`5W7S%X%@f?i][[Bh+W_sHFQP>O1/Kk!1kJ]hld4uuURmCq62pRD_(L=?lAZY!p0/a.i))"7fkC@Or
%$0*>pFr`<<ek^)K%S9h_b,g=s?EKi3:p6?2Y`J!C^!th%+['1Nr1\HV1eXC'[!9OD1*S%^F),dk!(RDJ2ZB]Q,sURuTtNi?]QLnb
%Dj4%$NAE5:^tWV;df7lt]+11`fI%oHBkAHWH*8M`GP-o:ZZ+Rl'r=(2FE+LRr?HlZBuX[-s(Si8Ys6SWBoVTA9Jn`!lCG^s@mat2
%;6-##>e#oRctMa]((AGhTX:jM^!TTE,k"Mb=[^PtN9.,7k\9VTPFpI?9!s!mI.MK\\(qE(MYE#+]hi,foYMON7P$C]Pq'dVXUmk"
%8(G]9p652h1S[ca2%E9M[F/tKefjY]WYjC?LORI\.k0.3)I?-Qr>ijuS$jcqj\"Y9@O&s0YcF,M7NV3=47*DD2=5it)@8F%W[X/p
%\9bPhY'#<'Uttue%&R8/j_p2PpK`c`]8^EM?Y]-=L?**eD%"lM(RP4&c?LEnp!o4a?:h-npd,SsMPX@cs0\3[f(S.gU=\g4lYQ):
%IVS#ASA?*2nr@IWl[:)m5>k?N^e1aN\SrV%X\uLi?*^3rPrkO7]b6)9QZMrm[Bl2'&qmY7LR6*_m!FM7<UZR0#fYNHn&\dE^#93o
%5i&&E20->+,4%tVY-<>DJj&SW*]rO11U2/Y?cHK=Y97;r,*0nUISW^EL/2_te6eMo*l6a#$Z`It=&JRq?6Um;Q_jAG%J67/_;1=C
%fjVQnX^,BfqUV%4IFn7bmNF,sUYa[YEi/=35r#rMY,99UAj7HrD,nn9s*[\O`"rmrhJe<YDQmhhPZcd?4I.rS5':o?KH.$$aaBt,
%iajTg]4?X%Ji:Skk+<<jSnXN&p(1LcX0l,TMXTR8;-Mg:rD@=i9>@Zt#)NZpneojf4ICT,rVNAqs))p79l^b"jI1Bs5\Lk)iBQtE
%<39f5FoOWH3Z.KlL'EYZ:oB-p]g<5ZH^SW(DTS+u[??$sDj3,@)5Uo[GCeN4D'jp;lXZ*Xa7]49rlDp#`5aK=h)L9(WjX_>qC29%
%o,#$[TrB]SWm-d2>3O]J1L0L-Yu#332*9?u4S5t!=[qV(mY)0l.UG-?i_[]hU\__%6?L'>i4N]#.N'-P;c*gc0+4E,hD'[.WR7^2
%OKK8n2r"/>G?b3@I?^OQI!1rsUH,jA\lEWJnr;4?rhRl(b0=NKcfIFjL8/P^-DE[?rS,OTR[%b43<DD3Ek1&p[nId(2HFR*ELilU
%lUb`7(i#bEn9oa5T:rYTZd9h1>fhA]gtCT?qD+?3V-P?fBDJFnN;!\tBNF:'om3rs!kscdH>ggSKM'5?3416<[S5pLf9PXo7R$uL
%,F3&KB[lp]@s$*A=#fku&6RAX`M_U$bl)RWT;449S$fs_$`KkeH.`h^`87fEB3jYLV7j+:)Uqr9609dpW:hWO:QPTKV`l=[l]/RL
%o$nBmoPe76$dq%'_=gI"ijH^8kJamg=5Sq/pa;Cg!mLLa5Q/B**RX\qGVlZuk!E'0'RY^.>$<?8WalThB,4]^2Hpto%o4"_B=h>C
%ng.pbW>Akgin@>?kaK:al":aW7*/@\i$l=Y3]XtRW!n=@YL!aL"^:krkY#@BM=u?I?g6*<)Vd!]'*^+^r=3>*?FH?AV&beVs+:Yu
%0cSMMlJVCS*5TYB&R!JU^<(q.3cK6-'#E\1>J_g5QX,M$RVEhmV*I=335tMB7@82OlQellGA</:I,%>Z!0g>?]KDt+2ioWX<'.M%
%$$#d_S]85:m#1*T>^SiM_Ujup+l@=.d=>6ZbZRFgU[N=KK!LQP&Tj//pE/Yg8mJe78"j_UF=o_aFcL5R/]j8]ZZXcZG1$/R92LlT
%KeNSo]/[lU8Kr/Zqh#=$@@Sq8@lLI0D+hb&`u+[i-ZS?oX_]9ZCgja_X.?RF%++@!QEE]X8tLL2=1c9DeZoe"nK\R@Z'>"11uB;f
%r7'TT[QCnTdUoh(HHff/PA'[^LdDDd2U2Il4Xhk,dh`@K]U&1n+en-?#&T'\\1rYHXji=-]3]A;Y2]U$ql:Ga,E'u4BsdkE11=O5
%;CO+e))WHUo(c-3VtB9f,V#<%&1-pWi?5CUT2E5=K>j[<e'dlp@?I=2SKRp;+e&B$G`9.n7U=.F#UK_0nFE/timHmO=1BdaS&*k-
%B!<b.7b/MuQP`UWjnS%7hc<1C.XL_ZX&OY,aHYtT?oR[$\VT\DpH*$]r6;.6'P!`8@d&IA-1O@tKRSoSM3_%IfC/8O"B`R=8"o#X
%JD7S[m/^Ni9d,j8#[pG`H^^k%kO(sY'K^2<o'bh`PdqhQ*8s/q`7\g63*cumTuY"VD7ghS+0VRHVt&`Tm:K>Bamb^>)&(B)_oIfb
%q.dQWFKNjA,bdQ-di[GM/nS]Orm_6q[BCRm!F8H-9uVo0i-7@J#k5_rNurLq8"nW!eA9YT"_sq#j;$FtE-S#6WjJ.cnKYrdf(a6n
%Y2`H.om)@<a3ip;5B#l@-]]A:5CR]/=d+BX;K[/K=PkRXO/7KX!FMUpF6B@KoO_`CPH<<IQCoel*YleroZ5_=Kgq!MD4>(EgRatd
%6LA*]ruuBgOr3cFIFtZhSQ2k9Q[Z'KPgjno@hkmpr;4pg9YN1YguS@LfnDGs`5SeM.fB6hh%FJ`3nG?>8K,,biGeGC5Lh/RE]$a1
%nJ[QWFOVgHX^(,UOI3:RotG3Kb`(2cQ<2<*pm8q,YJk=9X4]sKd2hm(F?I&7++gO6=4Qo"Af?*$rclO!$bfAkSjbuB[n<dN=o3fS
%Aa;r8okBbPCi!-\7((*l*^>)V_AS)'#0JdnL82":"420B!;4!=&<J$7@ep)BE!urt5<_Io%4ebMf$1MlRc?VlTp]'aeCb&S&=RBF
%I#)P4&DaT3+/E&*J-VZYX+Z:=KM^4Y#80un9NOK?6)J*!#l5[mOted%-*M*E,@LkN7a-cFoHAr>@-E5B?,k5F$lVR@A.0@@C79[H
%%gnG2$j"cj,sanVA4X0]=2L&M3/'9-d"d8V1PQ=d>o>q$-,SB=.3f+sY(lRX"FX+f4%@R%ft*-8m9"X$o=5Y\#b^TH0n);/j>u>a
%K60UQcut6j\t5Q;6VS.W+6"1?ILNM]8&gUGS2Y.I#sSW/\j/M&U5CMq6&I6=kZ[Tma3eH$!AtQs(NkBsL86+(Z4%U<<@&;h3k?Z3
%kX02;7PTF\U7qcE,=+a"'3C+q'n*#0@2ZpM8ISuMl4KW!@cf8eQ:VrZ*EPL*#5O(tYR"*3+X1-.Jt)ko;+4/iR#e3TM_I#)-Z@\(
%/<i?J0hh[I+(V>pVEW4!W4#;?0RG[..>(V<;]fV0_AU-?/V0m4Wd3?=9c6kp*Q8Y*l@U'\`70RQ8X`g0OkN['"JuU9$q%t_LM<'1
%W=Mo?HDETjO`tmp+f,UTFHNFaaHX4'_jhuH*R2^\]'1OqA[$!3I$ioL"t>(jD?<bg[I]ER-0,b:=#C/V'S'F[TbsY@L5[Pi1JL,-
%d*r;9Y/pPAAr1OH^pJbaBrXmV^LkYGoq@Zr==52$CEcIT==fO7VBg@B.6E)/TT3lX,,.7peO2eCB%[JQF]t7K6^Ljt*u\:$`mY/Q
%i]>"3<Cmg&2i,cOZils/ekAq3".18>W=KBH.3NBR)PoD"498Cj9;Eqf9MJcQ!go`/&>`BX]Jqk7FjS8rpoC-JqCp)*AMeodM,f`Z
%*&=dF&lX^eY?O[N%82DS_%kDiNkr_'[0RF5ojPGWA6,?)>,KMfX5qO@Cg4?;[qV\TPmRg=X0kY+Lj7stBSco:1'r*BT;Z=aT>rIm
%iA`[(%G-Q[Cml]mR')WN@;_O1]6Ta0?B)%iXj\sd3itf)!>Qe1bptUl?)lRgM)7@_Egg&M1(ser@"d'hj1pMY*<0U[-HjB>mcILj
%Klidi7",2cj[-q""Id)"DAZM2_N0X&heMA#gEg^A'TL*d0nr80@"O%l9o83bdoujd9uS<*\GhEn"d^9?fU*ro9#cO9!MZW''%^NB
%83)[B9tjTH+?UVk^t1L.65hCb-jkW^Y-V@W5&%]Jj#Zabaj6\1OJHK1(jX`;q,S=a?A7TX@M2C*F(db76IaE)9UII#Fb-FM![gl:
%1Z5JFK<G;SK4]qg%s:;ar*4901m/@!-)M8ACgmcgVFjJkq<9_;?#b[Z@&/c*L_/Y:d2WE*&d+C]:I??<bu$@Vg!fkARm`6*,r^o%
%"G.9LFbPdIY/3J+iVqiP/COX@E=#Kq#qC2!0m@^K0ouRB<[!T*8P=0r]AR\])>;Yr(PL0*2?Vqr;8c@Ks%[k]M*8DD)Yctsdc%jU
%7l,,V,9`uN6jA9SPTGr7nMPQgUeJ^AW"'E.4FRoc,!X1,ERKNd9`X`&0FuT+"3rdDdn'ge",eVR?F4YnOc65lGBH`("-/MY9#cH^
%Qumln`$^THVNKi]O;T1"#Z1\M6*=Ee_2;rZfS8Z6,V_)8P8nQ<a1mm-^iX;-3P*%[Rd,W&/21d13>K!FU/<?^UZ%$&3I6L>0FQ@Z
%8DHop7j6B:"X,:.K1u`":3H0()DhnR*1*9gUSnq6:-t_kQ"Q3=gAF>RJK?pSL:Up%C()Dc3/5FL`O*Hr!g2(G%..HF!0JR),oedD
%f1Ef7Yp,222%aE20ocYdnu+:'%+7g)N$=9#=b=:UW[Qgs:nk+ngG+]s;B3`5E?l*t)8m((8(^(Z1eYj9Z:G=%<>0=^OR!6%!b+-4
%!_$!%P&!RQ;'^oFDie!--o)';(o%@uY*q,#'KFK$Xh-?C3]SZ:9PTM05aE9COAQ/%erj"^?*XlrPsA2jnTpCL#sO4HOagjK-j%=*
%0B&iB\M_?jV3.I[_(uL>A.T/gN$CTJWQHWPWIW?"15^VIMJEPI!ebUa(dj$+\h&bMXFYsJbG+85ZP586S2'Y%VWu):qB3g5,o#U#
%Ud_^@UI\505ZMl8'H(H7Q5elJK+(2GU.Vkdga>g^7>>QNR/&]CUarl#i5d#R+;m\5CmYuD(ubfLc!&&JX='tsRtM>C#2':sFX!t[
%Mh$a16VToa;"R&>T[Eih8OclWBVfnd-o+aU3^,g:"\&_>e!;^fLpW2-0T6FJa[ujV1.W#-KgD$*aKe@^Wt#%S(_*DGa"YMq6&$O"
%*?Sh'Z:`kR=if!P:p`N+`tZ`A6UKT4ILOR[)*Q`o1ICs[?tYZ.W9K<U,KC@"'c7@8XsEA-WPU/WQpUj2\Af+q%"Y;si<G*Q.@PpZ
%WKQ6XMTf9):#-M&@u+V%$OS#BShPg%>BsM_1%8"^75TW"0e>[7)^&Ys/_RuXUfFjub6E]OY$hZX7uIhUMC+],!:5C;bHWF'b#HPu
%:f:0O(ujh4g&aSnLa/UZUP6j0>a_?I36k'07]6>sP1(N5#)M4`aHhH+7HVrg+@gT[d;<1-cGf+G*(*,T5`m&*pplIk22Ru![`2-d
%&OVm*8mOiI5RN[,&rriGeL[E$"Js)S&pVS2MX:SX,7oj3-j^S^>1Q\oqdgI9nhaXi&5`Rd_KA.W)+9%@-)9ZP:d2ja;7,<WOOk3D
%CH3";dLD'I,Hm+m6u9gAUAL:Pi11Wg0JIM]F#G^Oi+3)KA<'\-ghVgCB?k*pJB\CJ;hC):_G:R<f,V4W*6H=I+dg\,7Z;`R*/1WX
%*NG729E56ng_,&#*;T3emp!'_SO8^!L2eF34@eoIaR>!mI*Mf@&C?-VIa3&.GAM)JLqmZ0Mni<u*HEK\HPH5^0h0Hamp-<8O>%<h
%)(pM-7uCDh1g^TN&FkOL:!PF)DK9D2"@,!.n-oI[&Ksunl!tM<PPp:[TZZM<0+"[-l6;KKBLUjh0+Q<K)EI)[JoDuoj2`hU;i@B`
%S;I?/h@[ZB*;L^2cWV;Qk'5`bV8FE38"hg9+g`GL_.\k(=@+YJ>)DjXFqW3?^m<V<*[I_@&H1a!a"0^dP"@NnU=J9p3_'RdMTA/D
%\0:(se@BR0:7-V<<YW71&G6oOWPou%pF/W97EGNX&e/L\.>&V3M:@0B>f]b^!Ek>e&31rB_(!5L=cn>)@e#`3)EAHm*_>X%Y!H;<
%\cZJ1(0-k!V"9aBdQql\+XL)Q29k%nPtk\u9LddtN@tWqD%8NJ?tM.pNKL<\Q@fe:O9I]UaGQBp51`6kbY@La?q3sfV"9mL*jHQX
%O[tj"]0rZ/;NuM4`+`(GrN'l:A`Mr_f*Jo5dRcm6H.J#$).Dn!YdGa<Y5+J3MW[t`$1">Iqj+6NL5\H.PH!s5HB;773R[3;J0(4A
%cd(B`mi`c9KW(fMSWh-96JGGIc`=j,2<gr2k;;V>;YF/J*_P;,'(e!u4`!bE$e3X)SMt7Gls=T4fuoQPYd_=4EY&''bKBQc%aM6s
%k80KACXDmRlJ-F2F4IUZ[*_FOLfc"I%&Coemfi#)nj>+=6ugg:Z-4[m^_rRod1SnRAqDZlLq4L:Y$tlN2B!WtMPM&FQ#-]J\qO*&
%=U"0WBh1/72EVa7'BC[*qZd[@NuShXK=&k.I20`pVk^a5FYs\B&#*tj#4@-a+U3m3RM*=+#'h<.5iN_XD[8ega3]sRi`nlj]5Abe
%ii#=+"9B44^1Bu[K>)JUB/i/EYXQDI\_1@s]'dG)+t4>*O-DPN%r2tXM$sO?,K#?e8J#!8\jdgPY$22-OZ3gF_HB.Kp9T:n]*jdU
%kAlICo8^N5PNT9>k>RqbF/$@2V`dqZ]lUIAPIBX1]=elnk7Y`sd`E<dSU2W\H_donkIZ'e`m8;DHY;$XVrQ+"m!C,RHY`]SfI#gq
%T?q*.TuZRhmp1nDgE!tN75!4Xl*]-kCJX)Em2K5`Fl)_EUZ:k#&,H5Xf2="fS!f#GF(D4]@XTUX4\9-bLMX[snPDJR>_idmoY6a%
%5pI0ViJgOFYG2<5OuX"&>:G`*b)idCSf&E"U*56JCeX\B$h^>gVKe'b,?bCFD`!I_8IA^OEKu.B\*I6Go%f+C,_;?o>\'8?jsT]U
%\EJ7ak,9&0:9i#%fVB#fB1acoT]cno+?7u7QKWTWKmcMC)WBeEi'WgS5o^5BQ>o9sq"W7cpL.4U0m(nhkr+@fZo/J\fU5*q%l#;^
%RJ]Gi7>86?Jn8TQ?G\!6#_fUbMS'6u,L&/E$;H;6;@!Ahe?Gcg<#8jJ\Y(:XMTA%scn@/RMJp0CQgC;9eq4Z+[5"*XHU6f?5]RL'
%P^_dI;AU@)\"s7_M3nOGKsX[-=Wjghj$o`NDYR)>:(4sCXUN;OX4XZ\NPjQj>&_S3$+i(5&S1<GBt$PX'sT;BJd?O8<5X52A]MD?
%E2:Qqah'D[Z3?O-a4Fj^/J)-F_GTH[a/cu:m2FVU;H$ZLY#.bBBb<,\nA"]ua@1G&4a'k2`UpJPC1%nbb)<'fiR$M30M"'Qh$Cko
%pH_uEl.*&*'&H5RXe.<nj)"SDR;.hN,ra*=6'`SQpWOcX@An#l6AC:^%_*2@--<bgiEh\[_\DMbp"YGi\RB''F,R7'e-tO'UCE<Y
%R,[2ZL4fh%;ufl,BAuht+9e&ZVC?]<>W'Uc8&PY^G/\hmK@itWH(!HI$^m$D)-)h0#7_!/UKE8T>E>FE(,i*SmgTV5Bd"Yd$F4I<
%8oH%ES@gWP.Bt3B#/fS%X=^6G-7qHf;BbnQ1*>hRL=cu26`?QS5qlRrTu1DSa=S0,SK(?VC_=mBM3:+c@5LMBiPPu!L&=*#(8BIX
%d$2?Sfg[-#9%OH*N22R54MfSd8=+&tM[0Je,f>K2(YK)1\/Oif[)`G)oJ4Xu^kNq@pQ8DPTWX<G,N?]\n'seaiMjZ&dDu]J!2-V+
%AU@N#i6So<Xb0e'nfDYmpRoVA1U%K9ej3^r+[\FLIIA;S^fo#&s!TrP]n<kHm.1?[/FVY=P#lDp"P'/',V/LX'?LZR<WmX`]HHGe
%M<,Zc36j#5A*cJ.<@2Y4WYrh0ij&V9=C\!EWitS2F!NNZedtqnC=,(<PSNU4[Q%s3N#iKof@!Y:#n?/f[Q2?-`RZ/7c$2F6/C_B@
%djF'^NCD6\:E1Q$=UkZkC.pmJHk?oVVDQn.J^Q8GaKtRj^gb<G]I5ZFHU82qSEDsG:Qu1kTf<hhEaFMT5%?"RH;lf7GU0PT5eINP
%_eJ3Y6=D<"i(5..KFL5l[pnDocnIAEfX[XgiTe5-ep31:aF\A!_p0Ip.`9]E'NbM4&j*XSbi-fW!uGEt<d9+W<a6S9DSl.%HU]!Z
%8_aC9?U<\1&9L/tpnbo%gk*QMVN='I8gq[mU(2ca;;dTc==V%H]L^T6i`%J7#0+V\\F(?',DP/sBppjb==jmZC^#K3#uqZC+T/Lc
%*Cn&Bq>2A?Kd6c7/+0,c<'^oq<Mr*I/l[,*Se*/U<3YP[\YL42K"M8W#EYPGKu61W/4%Bd@5m%30T8P'eP0EKM#/M7-b/JQN6!jQ
%11B0KBRL0Jq?2rb*M/sD4$I)b9Gdn:j!J;(_F=Vf%1-lT9do(%`Q9PO0CRUe<']5llsrL:13TGtXsOe3JM2^6O%au)R+Fbbfne(<
%#)nsAL636]4iqi&Zu/Fo!<E=3"<i@3-6&&.2AKH#[O@HoIcp'j+M<_QY7a_CRgY2ie:IA%D+SG</.^Eq[0u"]m:/#,_Jr//TWAX_
%-U$&GKq>k.=oni9#*P,@M,]-F$ql-,)2fM@&5,N@KsVGS(=B/A>8@Zn,8Vt`Ag4/]6:IAf_;I-h8<r_Y((;59BqS3=Gs&YI5&s-A
%Z0I,'\:ZOaiWBJfM5&:<C:<#0TP9q8KTn`l/B:O%fVT[F"Bf4ij`ClEQg6C;OV6*X@/*[/#*?[U].dP&E@W:Hb%sm@)FC,7,U7CI
%KKm1V6ad/ta`nA^Ws]Q]+HGWT7>/&Xc64kRk([+Y1(4d)OKl5?;SdU?7Yh0nJt#;Saco<TT*+>66TV][Qm*V0pc)YuaRFnT@NZ!a
%OocP&/7"%sV#!De@C`TS1?kkta<#;HR.F2ciTr>@L)C(!hJ]&X(3U<rSV%WTO6WVQOGP-,=t\!dc$SQn)*oh?TTIYXr#Q*=HX,Y+
%LqG302dh$SMRk@I/llbr7q?0N25%('n(D2-YmGso8iXSq%XtSJE)@p$Kr"t_<>MQt:EU%:D?)N[TXtFud<3F?<A(7n`$#Zu^e9o2
%Yomd@]g4oP$j0WU8":L'!ouHkBE6)snr"\Z@Th>&YuQpZn.i_@RIV\j#1XGkK`&$i<J;#0NF9S]35,sHJW7gt&1U9YKcfB.)9A>I
%fXc')8kc%eYnr$b0aiCO"JS[_XeF5PDQnll+;>#mFDe`Gr+V=`:ZOqs(Tt$BY[iss_NO+bW3LVD+;<k\,S8%9Qtel1ie)e7)Vm`W
%%*K1k8P4WV"StFC$;tHR&bO;0S*06^po-"V.i/?n#ZfTbOuJ2E)epKiGTg=,N9W8:JH\&PZp+=36BR!)"@FRRf]f>!;,-:uUo30h
%`e,D7b!_T#5raaf"T`HTl45b1-O68q.r6L]:o*EtXV&*7>l>\;R&HZ6$+QD!5'[M][5!m7XTEb\3/Oag=p?4;0D#q]8PI4,ROSbU
%+;9\D#8RuKXJ'HbKq:f;:5>r0YRt>26SM.HM,K7q67P=s!)mo9?"B?4\33Ah;[eT.\)I(uOZ.m4U%A[P8-=tsG)l?(1/F]Q8FDYi
%Dt?(_D\Rspa3^LF=QE2p[\utlW@Y1K_7c/pVoT><g*oe4]s-@L,n.cO%8DFVnCVFT`;/mNQp_FR![i_Ch*,+;X.(QpblPO-%Y8R0
%/Vsd=9_:F1'%/6b&;E/%'?OH6@gO%jfX%h/@Kg@;+K5Bb3D%X<0OCct,7I5m]>-un(C%0?&^(t75p5.YTh[pJQirpL,Ydu6*5Gh?
%GYR88&_%B57H4qFckaXM7OAWGXCrcGC4NW^`gtJpF9lEPM#g<^S6dNREg"LB3p?GJmNhcSm=5g)1+M(;Td)QlR).=\9ErmD+R"%Q
%q1*4!0<0]I'E]Y%E4NH1'\5_6:K)8cS`6A%^/rr40\M>q\.7Ua.P=*]/K&85G+fZ+]tnCmK9L)eFpM]YTYT&rK9_<Zn7BE]Cr9]3
%eNb,oaU&;88;;an'h$PNa=7f:ME_CE1h8nn>S*f!-I)3&8^WJd@cKNl?k\qHm!bT_SZ+q^UhZsOKV/a>"[PXS'ssK:Z_0#Wq,5[]
%@jii0G!I&2>^SK9+-%f[JUK+@V2U<>#-&lqKV"&qAT;Gp/Y:VHO_Ff),/l)EMk#2s+t.I3C6J'Ig1F?I6-(07(*b/XA]d#>@j@#H
%?;W%SD!joIKA7,.?^<A[J$RkKU5114W[+ea1.uLOYXu+)r?o`PS4THbW$UX2L:k[oV#/oaU=Q"`g5o8I.6\!eQbEYWSC;6>1Pn.g
%^)<qfkmgm3\:it&TenSdK,O$]].3B'#-CuSp;'F=Ahc6LVbcU`5hKjmI8%I#)taObfbhojU&qiZ85#+'KaibG;6W%.70q](^d0bR
%J&=i=PiBQe&dW>HZkV!+NP-R\><th#3R4j^NY9:.-M\pU$GIX52H7bVJq?OFE0STXZQTB<0casX<tBrbgH_2-ot/-V2!8W5h;lSN
%@U'lRJM20cAQ2LB%!`D'B#e2BAk(6W)3d]XZA/2\JQ+*#%pP^)0CHncb(N8N&&o/?jKP[:Z4Z%%b]:enKcX-batc:9#6eF'`\J:D
%Od0L2!d>$/;$81Y*mb=U'?K9edqWpQ7$/ecRHQuHPF^,"8HMKtV@-8dDfCFK"4J/_+KW.n`*jn391,V&Yj(W6Md.+mj0;9#3CP(C
%Bn0#XK0gppQ:.K=L:;A457pXU`7%O@DX%AE'HqKp_k[gGab:]e1<ipLO@$AWK)nhn&P<8STK3nj"krgkgC6Au.#``V,C6#AMN5\I
%>s]Dd$`5a8eF4]D.8p5g:NH.S;Rq7>6mS_kLE[&I48qF+a<DQ`@Yp0("dta6h[;TD5`u]u]4PXZNJb)0"D3<;,Y32X:Sui>+35cY
%"upAHcmB'\Kp]bI8HO3'),hI\%*[NreJGM"gkcKZ[p8?TkJt-;,;^JF3,m:CH\i`@)aS`frQ!uL5S0Iua>k4Y!p%_01;m_<K\NC9
%C3=2a6+i.nTa]7PEBt`Nef9&=AAahB9[7$M!K"&2B*cjf+RKZM35sY*=IIS[=<sR?1,]ElEI<Ch2Y%e48)iTSB0SZb:3F&jYn5S$
%K*@,n-pX\1>:)KqAY!:.JO^1TJ\&ooPl;ho(pSI^QQ4(5U8*=gboiWH(0:m>"D:md#+&8]:R`LS2T:coZ&fo:&/H"f8rt6b!M?WH
%8E*'i@2^Q>[o$0tee;9V(?bK&m\+c:1)Bao_2Uj!nf0E`\oInh%&tFe,ZLumXMO)ITL*1Bd-qX7=k#pVJt`TOn`ars,uHS5+KhOA
%*AeU\P`9?[YXJP\.B#4^TX@U$Ob4BeGPt6bE=h1baa,8;+^SV0'%+]?$Et*ha!\6-#pNcl6?a\a@H5td7>feI=OE=cVcCY<AHW3G
%d@nAZ/m:fT(brK9HHO#`#uM.J=E+BrQ4P[&7CJYdYiEoZU6<j_i4oqgkK#R6auDM5`sONNr!bdoF^jibI1YZD*)qd*S2Opiff#X]
%%4cDjHmms(/K%2o,L)8o=`ogd6&ro+(N'8-Ph90h,LPSB&Fu0rWrsWJ\-AXcD-%sDF&_`jn1;W_N\ngG#se]r"],GNrkcnc@R+7.
%"I('lED<*XC+dbnE(8q!fcP3G!1A"n"Fu[*&8?j=fb-T]qT2H0SdW@SO[D\'BegV^=\"JI^!K[bA/RZO%pL=e7uCn$,:J/[aVh`)
%b3:kq>&`\bbAfqCW=#!VnK('UQp^Ublm'%4[@\9=#VNNCC(SQ90)"Xg\8Jh@)r@S+"Z%tC1_g1g8S4:.^`&-%<<ht2,1oP/@KhE\
%:[>KJg1/Ld[tRAgiijg=AO<*-TW48=@,4pWYY#&F:eGPRj'96f<0cN5*5g(nM)6t?2GB0bZ].5kQ=bmB1\+]^,XAUsH'okY*'[U=
%$&VD;8Qp`:Y+P2"3(2&^_qZ"%M"2*Oi:oW73KTe4'am2IC#`YA`<j1X<"EE`9'%C.-hIjI**e'[,MglO1i/^k>e"<+&\]/*Ku7Iu
%]&JH#Z[$WF6u8e,2Ai3^2G6QZ6qCjqHdO'4e4^*HVD&ccU=blcp["AIKNbAWQ]+8`=J>M'*X*S5W2TBU>H[3hYbGNHSRGbMM8FXB
%k>5X//h;ebXp"qODpsf>5VNNc*,-[C9=ui.,K46H]X&[>O1dc57uHJd=uuHB$&U]I-R7(MQ'&]e/'o,.O'a@[YljEVKlURPEt6'!
%4i(P?4^j'f$k&2VW)a$r(`M6N5d_o[4@MttaB8M?,oOBsA-2/6K;QBpa&tU7Cmlr?$m<6YK[.'gYN<.X@@t`8/5k^lF@Ch6L(eN&
%b+NK!(DDR1)%Hd*\MO>9YT<Lj(8(ASI8;/FL/?!FP"l`=&S_*'dKUeKKrQ;4i:r7OH/f`'a%?K0OHTC?U=FhGrd[s=PiE=D!3AZ(
%X_$NP'CcAE.P!?$,fGs-!\Am:m"h(F+'o<X9q3Ta'@rZV8R*[H9KZj/E48)B"AHo(-eQ8oTHc2:<W0VELp_2n/a-7]!Xk-$YR#ni
%3N9mS)E.##h^LVp&gK45p@FD5e$-7AVbka/@rUfPnkOuj*RrB-g`,q*@E<,&kGbJ&<63?&2XfUi,@'=#0gC+Ei&.I?Nc;IiIkt/*
%TZ>(5UP%'(Z;+5'Ca/u>PD&=hNY@kCILdYumSd,.j@Ti(+V8\joh6uS34HaKk/8SaOTi;[0QuTCL)NB!,7'l`^LCMs!4niUp^71D
%B7OQa_[2LH]d!UTgcDU\ZUB?bXJSZ%K\\E>*#&LU14<HXNB7GA"R-_&A/_AKcj1pO(V(M<1Q:F'Tnd`gM'Tb"BBEnf*CWV=P_Z_V
%FB+jCBBYkk7/"_&H5<,5@K\\EgVJ!ZeB\AAL"S0c>9^(=JurKX"rgFlSO#sYR;NtXPFn*!dh>G8!a8Dk!AKjYU8ePQ<A6GJ*<E!@
%Wo_][S%r%nbYi79,*rdX:?<dXRkR*1K*BMm-%a!5e`VJ)`dmeFi4UZE))3.3?iemcEn.,Tj;P5s$();rM(=U>R4C<7f#UC%28:d(
%O5;*(.a/OI9W!qG%s.ud1?DbOe0P0kBcWbU$!sQ$kWqfE[\9M5k).BM]h%s&3"7F%KSA7ailb-$'<BD&E0%o=HCTOtK]a:h8sj)n
%=:Yr);AD"#>746kj"N$7KnftTPu2Y8C'OuJ3LZT!###J6h#HEPU9bD&l%Igik-Fba/X2('iPBZQZ!*!:^;ApF&?6SUd%IB6k7V`L
%Vr,J8BmEqAZbt]5)eM'L<1%\VB6<naEq<OU(SAAEODa9=ZaY1sb2kh3Yc!^o#'MHTel.<cT*rAsD'Tdq#Ie3r;%3!Y0$`j*mmhbI
%(ISR@3HFEj$Q+n,;3>25<$-2,oUmK@HeL$U.X%Ri^.`3HR(YsF(TT(?B!Ao89/;o6g^WCTj+^tPMSAl@6-HKb"?(q)eJ0qO]&Ch%
%YcY"$WC8Pk@*apjMIF$-/MPBKCV5>I0-Z`I9,&A_+gMMo&.6q3Fa/r1Nj43>$e$,/)['Q`#a<*-%51q1!qobrDGM!:1(_SFkE%G1
%!SK7-L/2f'Sd&r>Zu[LD6Y@[CLHMh;r0YVRC:9(B$pfQeduRXel=nG)3Qr\/liZ87:I\WO)Ep4$Oep5fY!YE$Lub560.tBuekA8;
%<01seEF9YU/O5^`T3Nf.Mi.pI=&pgcp1rhJ&1r=G,Z[p0Vn5'5XO+XVe@Y5>]j?Kdg#4BWZ/G`9d;?up0e>HC0sG5>q<`?gfu#7i
%MIK-mP%!;u`doE>9FVNtNK#QC`KM#7@gAhtOVsBC6M&tNi"lf-hNNXEDqpP1gFd<a1Ai@#9YZQY6*l1YGR&]<'MUK!a[-8fi4.)R
%-D,QT'Techcn^$k&9:^8EP_=^o0GbtVSn;FZH1;)\1Pn-HR-PK[Oa`Q4g8hR3.S.FjK>#O\UYgDfq<+'mQocg8I#DA6)Obf'H/`T
%7b#XI&/,f;VV(L5+dlu<oK;>rcl>DA9=l*":CtI[,uTd-!TDG!7j;Wci3HC=Mq3K'%BbM0*)gU3ebfNUXJklG96^nF$\[mjA0#X9
%!4J!K/eS6>&6L/l2B`8i+ZW6c)cF2QgN4E0ls&H.DO]BOK(]t_m8bbp*(N.G"@J0[/pGKX8[N!%d6DHJiPK<beqE1T$Vl6<GuS%p
%"6D?u3%l]H%Uu@K2AU:B3$@97C2pEhK.Jl>"taX`o#n^H8*F8gO95_Cl>^9p)r)A*6LcLLMCpe]0h@!;.@d%YSWt"^TI6;2(S.5N
%qZ+?Oa7Q&C-TKL%`^\!LQ0sH16aS\j''D_,9@NP:&\((T+@8=F!Z</h!h'`m=)9BQHYde%j<ZPf3<3,C&h,em:c"7s-Qt?!=ZEqb
%:D6/&IK6YoZE,LFYXh;2$LCX()p0e/ftdDrP)(?6JXnkg'D*ECO0f&s>SL)X8ql(BoOUP(#AqCC;5g$^=!SPm*QA;[R8A%UqhiD/
%!$RL`_n[fKdt6dg1d2+;C!oBeaEgLFbcg#_D4QC@p6$3=<eRV,2Ok8gWWhF__b%,OY,q5<=fT&Gf8fG+6<BJ4H6MtuUZNUsCRaZn
%7P-m(kr/@E(9ppH/r7W;QDge(pD'3smt`/Xm#gR2GEQfa7?SZK0kl"NRmVK92EGP31Q(dd69c/#k,YEc%(`;A3Gc-5#<QV#+qig!
%$E5D2=!g:3Fg3<P/k!B/Dd\@0U@L^/Ha7<E*)gOL1(MC^j(+Ys<UR@E<9*4F+I?ldZUU]A*sE\5#0W%g\&*p]1U-Lc8NOb\?r'0u
%Lk]l0RsQBg_6V^`q[n.[&mS6)A6I8##LU6;PD,H5Q[=sk2@jp#qe>c&)2'Ll'SM6Nf*G!-2&ngu\!NbJfeT8K;%j9<G6J3R8DPa2
%gHL8n;-Ss4g*8d"+DQ?k>[o/j'"VU);Djo!+gf^#r%\YiQ;Q*?.]%Eg;!Q=l9V_0l;&^&2(G+AQM1]C^KI!"d-[N'0IQ7>c"(D'<
%l5,&Z7G).(irfcS^L$7r6D6Q1>!lt-ZHs$g)2aoQ/>NT?.Uj3Yjg)e^#jkML*J1c,ihe20`MOr&?g,Tu$%p@a#I,Z"7_PhHa"9]g
%.sq\Xf_C0K#rC6WL'e<@O1U7R7])A4G[YKG?')jeLk&)#^],dXQA(bq7j9CFbT*X?Zq!+_kKj>Yi=I4tl98Z'g'MaW?\7HC_&Q/^
%%b0.:]Yl"I&e[0=P,oOW65)\B_h'RJ6$+-^4Z">B375^,F9*+cL^+*C!<NNmAC\Pj'pqOnK8::O2apG`EU95G2e8I\F=H=/"(IB_
%P8^`'F0"Ud#qp&S6%,i2CLTYsl+ac_5K.J*3+moYkH1DMIgF(-g>%&gFW$mGO'If87i!T&FVW.n;:cGQ]S`((mVO^bh1#HVe-*`:
%B'cWgbu,>C!.9s.V92-<ZGtHhkf?'uL<F<TG%=`ankcieM]T-n7t]_/9,;PZ&iM)F#TQ3Ja[./F_Wh\.%XABK.@6u`1KY'bJ'CBp
%405;E<;tr*R^,a"cb8["QdFd:*0,<d5)!Fg9j-XJ6/'qAI[b_0OO05'+I^>R:2qqJ@<21Y,BWi#QJnIV,ddgo.&(Z$YpkU?[F#+!
%G8bJ[Q>O_a8_>D31oYU(>:Rk^W5"2,?fmg0#fVX<mU:r5VE!8Q.>b",MN]W@UR'8lL"*WU)`(r-(=E[F*,XYXU_gSJ+W^bJ%NHRJ
%fHBX$TP$AVRqj1PBd:jHiA3sZ,S>"j%A/=c&IT?h%<qqG/_"rZ<eC$U<@nS+P/L&R;I$SN$*;)09jib/Q??LH6odQBNo($b[UnE>
%,6\8tDWX58MN-&AW8kpKEiF(`&.['mOIqL/LCE7F;'HQq)&Xo:6s[>D$,%cmV%`ST)-hiUGt6[bfX&G_k>E+\Tqbcl&Ob,$76s!e
%H`A\T<FHQa`d+O]:DUBRpgk^K:R6R7+kr+H`e&ns*TAg3i8BUu1)`&m,c!:]?cnP/`Z%/L&tml!778?%9_>Z+&k2UM+=fa("UCPg
%r'BTX\gT6EgOYA6G@[82!D,W9%;TF"%O;0q-8:RiM#2G$BrReS+n#%IX+[2P?#C%e9+6&$0Q%u\@9HJ!)E/Pmcn,VE$W8nr:0"X1
%Rk&5X!b!(uLr@P43nJCfM2j,-p"1t(EOup@jhT-"HE)&i^[MQ+N[u2G*0a.^aMP?f/p:din?9'V#XdN$!6['Z\=h7cM)#*GfEGPs
%2T*Xk(=(i1ciC`ui1`Ife=>MP3.[mH<pEGCp5Yas&Xe<h-e4JaM*aKYd?;J3J7,?h9:!ldZI&5sQ7VBHUM(liqp>02,@0LBJQ^E?
%)Mlm2![tg@..0"@iONs&2!RY`astKKLqP;=>+FK/H<bPCZe,G?4(/,0keV;_N/miO>Ni09OZ$#M?"gtRaQA3gThPcq$?EBF(j5Gc
%Ec=8XFo:1B5:STgM4Hr.Dg@jK-?Kg`BY!esKF,8L@!)1n.&e3na430[\TDiKP)baDOKjVRRrG#CX_Olk"pLK-+]0*N9BkN7F4rin
%Wm\/pi1pg]-&^)#7(nK-Op,pI00g0<G5]lh`$(6;5[0M4$^]AQ'%3Z7mOV,X5_Y,bU]Jb/0I0hq<<B`H;q+eE_tR]aPI9KVPF+_M
%=`0($Zlqe.B&g5b8j\*3?o7lhU4Ym#F-7/j<_Ppt7;f;1-%SKH.N500_:EV=W\#Y"@Nle$'<;FsSo@SmXA:,0-6=`eSq5U@>?"?#
%O$#\_P9m8PZ6p#dMV+W?9!<eSRb5cXCWJa!nGT<C8*:!3<D.3<dW'^u2[2\k6u[D[DS-D4N-#1t2BQ`cZm4gKR7;oamT\-<,'?WD
%DUNZt&SK9m:iN*J]Z215QdV!_`\(<A;[#L$SE^b+ZIf/^'bMCjfQ\RW.GTk_4C'"Z:EFYAW:44/\qDgg4<Tm*`8Cc$>*8rU?h#"4
%8r(`Cgga#Q4a9J1K'n$9V(49VpBOZSNI:_o-$NnA1*Dnhl"Y1ES^`^s@o!qZFO\>5L^VNRDYCms1:ZgXl3cNL:U-Z6[grN#ik5kB
%P7d_,bB=NS836<Z$E]e;gQJ_5!X<:+7EnOfn$8[g7VIAtP=;_X:,36)V=6qc5,KH?Vue-`$9<,k(5Si-USHJ&`SqE*Mmo0HfU1Y8
%aQh]SV@kB6N$kBZk#*s9il![PH%H$`"\pT_.)h[`GZmd:%<[S>>nVf\WZ+*C!f+9&:1BuNbbco"A"=D;8OUoe!+RYS@f`SSm2pQB
%!+b-g;K8n$NcGO&`)9NqmalD;6MHSe<?].AC,&'.Sq4P<e;D2`HoM9YDHT<=`]<n*YmDP.HfDsR.,@,)bSFBYFMF83kbeJ:9G8FC
%@QTn$qZ3-9[pq_0\bTIB*TV0>Bab\f-JPd*<HY:!$qb-*qEpdBM)/(i,S?-<7N\9g/Sm=2-j6!5E6*3c`(+pP\.Y,NQ%m@PXGA83
%OW(ON97e]B.+q*DN7a6r-jhl-<ZV5l*9nC8qZ(/2VCFM/!U=,%->FYi\?7#o*-W9?"OI$A68oO-A7ei8CC)+&)8Whl8V_UqBHIqX
%TE+)_"NT=r!;W0Z;,7ol/n6H@A22Wm1.a'#^3Egj9:!k9aR^(?5p4e3WKOMPq3BH#"phZF`47&IN)LE9)PEnKi.e[r<[al_Y$j^o
%e4lX">,JpSGn@5($R"jbNOakSn$q.U,W'$8,1*qDMn_Y6-M:jL8jSOk2"CX"R]EsQLEW%;e.i+b,.A(;#d45hH]3=`\_p@AOq6Z\
%$cB+n"sFKjpGVQOUaf7Q'E^'ngaqP_Jh19Y;<:Rhbt__4(/kZH\PbX-eB141+l(=r*0)iYJWMKUi.<5gC.L>E^_r#_`L-`p?>tK!
%J<D2nC#uW#M$1f%VO=5Bn?YLei@H]+*-78*RcqaP0*AM5KJ2-r]<MA/?NV?nnGoEfS#FpD$4_qb/O9A?=;g,T+b0t8mDU)8!+BY;
%DFFU@eS9*I&s.>,;VJXcM(KMZAZ5\;:_V\egaL-RcpD5@e4gZ-Mq![HlP6*Hoj[anVhhH[XJKUi'?5P`F!$a%$s*q6O"83g[XhI+
%@;8mP>TE/\OT=L48BM=I_P.IB8t[S1MIrRlNm/HeA;qI[\cc]Ia@8$J_H^co3\L]Ca,1<W/(om#[b'KE\YE1G[_/Ia2.Pm`=fl@o
%mN:?5iZQCR;2D-22[]m#73Ih3ET<;9Hc4]Y25qThpKp`D[55(>+b#\<T@fRk@c4afMAKJ)<OQm''iThplD/SSb`ee\\K-U!+;Mke
%_@o13,b;l9i"j-n8K`_HF2sU#al$b"=W>dOK7e];,Va8nIY)mCIhJ;?AY_>Fo*g379sDnMh^gFbQk,6M1h3)?ObB:a66t#O1h5d!
%3GI9-"fK]-Qc-gZ4WM]87]t5@Ube=h<fMH[J=FG0q2&:4!93#bjQ7]6^im4T0^;SG>2e;C69c.\I9^/0[6CkakO;\MU+Rm<rhOE_
%5]jO!E]4aqX=PYq2\s2X(P2>a]J0\=n)?<G-Eu$e5RD"4Fom",6&d59dXTe:Z9\q-bHK<P8;Ep1\3M6l&MND(%O<c]?fd,=FFe?K
%2fEIdF#b(Z'&?YQ6pj_I?m!:p'(&d@67OBAM*#m4r/'(YK)j?>><V'h+FqQaYf1c/7$`6"M9o;AEP0-n^^BI!J?m?C1b(3\*3l&k
%.:mIfP1]TK7)]Q%KI/.=Mo3n3))kLYrk=.4G@P&p$e7@[2\nm0r'n0j!>m[R]J^hPo\]D2`5t>[Ot3;gG&LBPU[@M*-E'4r_;Ws'
%JSn55]LZBn`E>p@Js.j8ODi?#?1j]Kr]b8_P%D7c>MH<j"WlZq._@dgrNAE0"c3Al,CQn]'p&!uB87o),8.ot>i.`.<U0uKf$EP>
%HnE!k32_::iFeTR'sJIWK6F6R^uft44B]thJ,m^g7"#_=$fQPLUa'kUOW8.;m`+9W]ZR?UbmRK;8pIcac\,`L/UYg<:IR^S7c:Pq
%ga1<Hl4skgOiPnfQ*NI?=@N%$$"\4.Tnmr-iCWf/P_1qRMGV`*8<msT;bn1^Y=\Z5II^M4P0H+-4-`5#dDjnWs7?N>-jcJNa&Q"l
%W_V@;i2WTNjT)SC6j2J?5ScQIFOc#a6FB@o*QrA)nIbea$u'`mJ>kDQLd2l*8-^*$<Y$`IC;7)&(eh!LP7H$pa&=Q<_W7.J59[/c
%J[7%)[H0N6JZHHdG;sn9me<`i^PiE#p=WV2?k?TfFYP(u)j+3nOD`+*cq.Mi8l)2FY3I(B`h0g,oj-Hk92W!(,/sZg;a_)V5g1os
%L'#@Q=ej`Yl\E;*9&_l5OG0!"hIf\K)P'jfN;S`'$ne5X$PbuID_CYm.7/CQG'j&k\JaQ%ECrbZVncf9PtMLU8"VVr`pFouUe<QT
%2b[3c.q#HQ_m(om:u#'dZ&nFtGcLEQkXu;:gJ9"STWq212H=Y;e/Q$qKW9k;Ej,:P/WCj)E4ocBf!ZTM%>I)a)`&&'#dr#"'kC+@
%_!3oI1C5?!rQDug=+:V^k!6HYO/;*8",7b#'O\FLq\b3+->OU,K^,n7p-ZIjpIf2q3P]c&5@t9X=3%*\qj3D?3<',%%R3h$\2^BB
%-[GrV`gMnZh/K=+8.<,`%#YG0kaFa%%W^lTM;j-H,=B5B%./DQ>P/2mb9#8*ZrZ3J3Yk:&Q<`LS2!;J/j2Y*[:Uc"P[1gVB^&e6_
%*fEf)Ojb,"__@hF%ijmR]!B$LeIQcLr@Cs`1tM^*J0,WoYCHPp@f>3/q);,$?,<d\Gnd<%iXuP:pi$8:jf0[8Rf)nCJd5Q0&VIge
%KVh@(pXfIu;JWUkn=0U>R9aB>?5fP4lFi=$p#@>(KcHFWEc8%2>:LU.S%`RFcAHK1)-gB[2=hYT\&8>j_&e8??<kc,*/(OlJ]43!
%krO')h0n5pKn@H)nc:/pN^Y75.Z1ncBD4p&YainMm[+gAD8Ngc*7Jn/WOVi"BNTDtCr<M9STr7uP]oVsjcU)A8A_dG&Kdf,hBM'>
%"[Z5JbRG").DB5c77d$N:qdble@1J.#:m(-?`G`mO=$cF]sXmVq]tj[^AL)kShCah-l#YE0BKQ3XCq8;/p!+VW9(b2YOP,Y*1fI=
%PnONm:%&I>NUDah*aXh^R[F[*FFrb\lA\4lqT#k/7JlBSMP`nW]#V&I"\aNq<_j>M<K=(mefe'DF:Sh<0rF(<&Aa^5MAA]cYuE3%
%8@#34Y!SF`bEHg`r:&"CoW<QXA3pWmRjn,oi:u;bb&:"q2=J&Jb)XC)MJ]uN#n-mbP+UpIBrFG.f7IVmi43CRKVn+$jhBTu3k+n>
%6Qp2nM8JlMf<Jd.i+o<]MSC.OK#e8&:;:Zrr$Etse?Tr<OB=`jE_NN%D-_>&T#;heG?W.bQfoT]=g8[1qr%p'M2q1XOE-p@Fittc
%'[EeKV_;n_kT1B2GpZ+N[\o:e^$$+)Y4%Z8h:1(Y:AYk[#`:=!B.VPd8i9W(n/tc<pqK@/[/hLGb$RYJ27AH2ks<)A;D3WZ.I5;q
%C[i5h2M0;GinMU72!LasH_!jM.4uV<>Kb8M2l3Cq&li9(ANqY,aHtip9r.L0R:Z&I,.39fGQ#P7HLr7MXJ=AX&dsJTj]V."<kX`q
%]fEg%lH4p2nY/8u:3X6g4YBXCINdD5k"5pLXX"M7oLU?F>R+_6W=W]'].]15_!hLb]pY3ZMJp%r4<.:>_,=fb;`&`q#/&8oD%s$&
%YH!@uLg$o]@/cpFLg%L%Phh9/*\FE2k@#LU1Dc<J>1?A[7@:eIf!FnDfOZ=iSdk\*.B't,'OgKtWm#oS'=%+")flNR4Za.*]8$Ka
%Pg`ILc%T"DE@DH0TWj[+X@*8NIlRg;p-7^.ET5Z4T^I]#Oi4]dqTY_]<$pcilJJZ["!(+/9hNaJ<2?2;&UE'9#WoRm_cMa\FZkDM
%1=aa2"MU_=]8Hid]5`s)LR5mA!F*l?;(N&k-^?K/_bn&-&dIa-R`rh1(.L*s/DuD`h-mI"*i=!V4_$oUqE=^(lC^1aH]BRTBLW-j
%S`,&3=LbALh$nW2X/H;SW]GXZ%UR-_\(kSBjL?nRa>#q@."a?m=K(H4VY$)p;FKGZ/dg]Zlk-MW8QJrT&u"r@lafn>_T8Y?BmJj?
%O:./[_@9!Id%9p4>R2&FmnY%f873n)SV+Q[Yb2AE<_eA;f>PRn)X;2T7L+/0Yq[539(gtAdFkJp=6oW;A.<I0``8UVEu@V.Mi*;D
%j9s@0:U!!L*(</A-XE%cflcBmd2E"dhiZj;$!0L*D%$DF-8P1ih!:\XT)V1VNUGGjr-Wm1naMP>b2g%nmqc)S/#+D'Y_<d2;j&fa
%'m8k?-<VBbk7&k+0U3itWNXs.AG%,Jo;"VT5"-ENdc9iWCkPECIs'73@-R5QjG>7g'Z8&3N;n1/$T[sCCDD1,X^TDs?X1k$Ut;B'
%MLRW$5FI9A-J>``g75]+o2n#J!]:VSHWZmjRI"^UWT39kQdF0FD=Rh\mna8l7DX0!6""880$:nu;C4*jJsuNAT+"**<CHn=1,7:S
%Ib;S82Z!&h>S4H8Q(6&!5fuE%RqJsG<R@ZtN0RC.Z5hXurhtM[87c%>"HdP[.^T09IP*lfR;-9gQco5T1>K+`p&=-n;TH;&&B8((
%5$QJM"79<pn7W>@Abi%kNtDZFkCDToQ)k1uZY=$,He-0YHp50G?M8L&dqub9mRbr`D'NLl^B;:_'0`afHEmRhihP3]n7Hn>JrVj>
%@B=*S_)6%d-r:Na?9C$>Wm>o92d)q3gf0+9#ZA7kA&W&F<(@kMCn`@W3Va;,jj9p,^rVWX,K8dB9q%UV;IooBnY69s$c>+l/J5nC
%m!)P)C]BjW63&k>&_toVD0<4^)hI5m9unq`Q[:T;KciG(#&IcNZUPQ!8oS]*l1<T=:YQPC=Ze4TL.:okYq%=>0*?rON._;N,'9QK
%"*%aOC^a6o[90@4;A4ejGS$msX&O$<7o1.k=dq*:cZ?9JHuU^57Y%f-<DoG)5e4E@Uc,N^Nl;e,iYF^c18paoMp9_HU%H[e;)_$O
%M5qVeP=Dj2$Obsf+SkWoF+Z[CJ44>[+=KB[.I4\O%M<h]26%I!Pf=YX(GI+Xd-@Wb.ja1_ZY,^TQehue&+ELA)OjQj9hDVcep_t>
%<(V3gnc<36"$OWf3=q*;@?C?%rL/o/Jb<Id2*1PH9BJq3CL\Yj)6"[qU;[jSqI'F"4:9%f;nY&$]g3ObGbChn$0,osL[ZjjmX('g
%)#,OHB3,HAnUogQ0CFUUHq<E;@p&4dFb>gIf=X7.LfC;-9l=Wc)aJe+Rf\YH!]t:kaLQfG-d"OF&LJPHk8'uY1dJs@=RXI/J!3tS
%*1ucK,)_^i<?^2Cn>+(%[/8ibW@:<J73m\!kJ[I?ZU79)nE3!N.'^1BXZ_K)E+sB!]nrT8E<12h*/bKsF3#pFJ4cBmM^hVQUf?WZ
%1uN=&9Mr<o%58Peb>W-A*/qkbo^(Fls)lrLR"#0W+K:u-JX_<TF)<84[&3>),bR0`KCNu^rjYZ+*gnG@[-`\X*oPs1r!aY]3bVDV
%Y_R*97U$$1lPp$^5U^W)HB/0J6<2\.U3I;2[*ioh:XZp#e;6\I;ItE+2GKY]_P<5GLo!NW+`Vl8,Z:?<kHha9?n&(P,Qu?.RM&]\
%7FK2J;Ti+_Gu7HH+QRiYUJsdZ#ZPjj<g)d4$04Z/7fS.Ln3;[>\8M>*B)08P;ofPJ95$(BEXH-`(OOt)LB/O!>;-b07bW3%:AA-2
%MeMi3WmAS'=E!-qhjrCZN6e7Sf'a0+"%9cV*)S7dk0:niLucJ^mMI%AL-$m#5c?W6KM;n%JdpALD71iAf]G@g/6leRH@O=786#Z=
%@[`Cclj*;7<BbKcG*E]hd#3B%'t23M6N`1!h*dh;&rT'2Y82ShEaC1WJd@*D'fjtLhd(#2[)s8Gn7kq4SNf"L(;B'n7Ee+0(0+e&
%HC>n$-#cu..Y+GDP79`tM]e=FK@Ko*Z'%*EI$DW;D7I1n_h6BoGM\u'd\or["X44piW33C&0B=/f@6[UOE0EdO;,R==XBkm0j#7>
%KJ_@Q"S.CN]I7a0&LjNm/pW(K8=&VkF''>d[jm.n%LY.n"IK!GXsW?hpCL6:@"Ht!C73LtZ^"7[KU8b+@`i,4Jg7i0;rMo'akN"2
%&V!$t]tu:#:LYI^f'hFQbZEB(5[s\PJTHLc_]M]+WJ"/dL^/b>/=Z9o!d>Z8+GJJ^m]sqX8RQ'J07'H/3@%NhV&$9\krCX`X@X%O
%`P=]@q_$3(fir\:l[@M%=feDLNFu)r/='8\IJ_Xk-%0>UXdM/H@S9OK-sVsu-mH+WbERWJ1NdqUc2JW8^pZB@/!^YXb?FZ,jE:dm
%%D#'7,jE1oZWPC%J$N1FCfLED//DtM,uhlVMLD;[eVF!oN-*W`9"JQ/kg`"TF:k8l:^\sD+r2hp86TrA"Q%4_(*tRe2qOkUMhnM9
%5\ZW2mEHuS1cm\[D4^$`0LoiYGB-+j9-Q[2makG^Dok4r.F!&\2F`f4,IEmCiX083OR<Uf(6+uG6oeAMEa7tIVUa*G*6+?6Wq]=5
%q,WA9frV,d^p/>Y66%A+cX6XdZ1L.4<QFB<&J`BrR3!rJ.Z+i%*t0h;"h?oBZa%lX"Vb\GEsdro&_"e#/T"/f9fkau1MNK"p*Z#!
%g/,&FGEA%Q\[o3)0GRbkq3?J?,t1K)i)oi?'?M!g6Gm.fiff1s4H!]`'-U8k2d[<m;LD2j53<0MYu+@V<,Xj'6J#Z+!AaZ')e8pu
%8&p2ME&6rER#mi0%N=YGL`@q)*6!KIq;6+_V\1U8Yeu3ukph*[4ket"[#G<@e@78$FY#@<+"s@EQQ>AR^`LTs])CEOP0RI+]AAN'
%TiJh[OaL($)>UW^.4iif2r\3pNKU0#'TZbgb#tJbi)n'#)/fC[d&g^e:MQ4B*BY7ZC#[]Nh<f^#13.d=pO'>+dZ6uPC0Q+eA\=>d
%*4aA5/\ck@YrB1':_>2/EB4B+@aj)DHkAC27ipuW_%F]t1iG#PO/4(29nC>?-V?dR3&UCZbu6mK<th[BJ>$M)\CH4#aWc?J"A'1,
%id!G`KOn-CCElPE(3ptb-[K/7Q-rj/Pg5I^__%NR#>.)fJ]LI+^m*.@=F).Y#f7ZsD]L\7TM@55ZT].Fn#?KPRSPF'3TF=aZVfFj
%%iq]`[%*ta%gKc8hX9S8\R6,FZ+I.0mR2W9md5ksdXE<A56L!9\.C'b;&><Fk0ol).&!FsVOXNQm#ebKD%7*g*iDRp]u,QN')lO!
%(!49M/Z?T"84baLfcsY*6AnC#)2pF%cqg&&=X=05Pn]]QK/QOPB1oh^&m;T@krTQ?/2a%B,PMEaBs\X*A76%m<?0cCJTtcLZI$Sp
%;;pB;Ob<SP*!D_9"F/+0oj=GE.7O*f'pEg-fP=_GbrbXe:#qeIK_7QZO,oXJP(T1(PS(tl3T!#h?Ws'ckhi2i%QqPfNuB^85T7cD
%*H>K@=7p=E$'OUUJ&XGPdn95EK/<X\,8t"]LIN+L@9O!AZD?TE%kn*rh5Z4;(_3ps[Ho)#jDu[^BLG1/STNCY+Ua9on/a?Yn*YAK
%#"%\<$J5\h_8Yd1QD>eJf3'7)\W7^[A>'`LkMC$7Y19Q#Q?s$qZ$>Tp^53l;=b\SlAOEns6l,>L[R0L2?0UmYF&W`TeX@*N,in-%
%ffZ;\pN`omBgS"&+Q?1c>=ssi8ZAN?pFDKL6CVMON(fP3f.:LFB<mV3M,]i<]rDpgIaT?+_G?YgdadF/I)]%NJNQ;H^+2D`iL6[$
%G1srGBW=7l1GW$q^Eq'b`PSa+)q5W7`j`R(Hj-5'8>)-#2IC@K$osdYm\`]/nP=-EEZ8\EAe/%I^j6jM6R^VJ"]XVf[*tTsgp:]2
%m,jN>8o$!cduRu4b+l3'.7L9P/Eg`Qggr_A*Y323EJ^V0HlnXe[/6qb-!=4pr;n9K4N3#UEl!&;"Z3d!\3)sIn*;Jgpar7SojhH)
%^/J.'q=p9hQZ0=Z%j:39#lLTV/FL[g]_Q+frIoFm,$CETD!1GoIR,Y=Oc2Lqeiu:ULWTDahu>rEs4!]kK?@)D%gkRK.Z7]=S"$m@
%%Zn%_GJG;+TR78OKX+Xi^5l59XahT$(X,/:QpSbSnNb%O:a"',7>Rdi(7%BaJ=I.1\/qjsG&`TdEH)h]GEN65O4=e$bQ.<,LB:5K
%,5M`G:tek(?[Z_r.9)oKr>cF^!\K2Q#p3kJE7NmZ^1\4(ju4@j&$6P"GRu@tYq>#eVO!2D@+`0eWuY"PnQ,L5S#K8t'o0OuhN[oC
%gX^o=TMClac13"5f39fKL`]215IAc[%LuRRHmpG=7&BYf)G-AX73W$q\!O0OF@kYW)uq?XG<%o:eE91U*AOB]ZDU&0=,#/7jpP-h
%\VEW="Y'nfP82UIHp!nCd_\A+mIlUl&?M"?BJpOclJ^i($Dj@q^a1g-0GbHB`X#&qL9&YLqL^K?)7kZA:n=:9'g@)=]ad:Vk%kKf
%WTk4B(du?Wl#F(igS4#O\86[E`=H:hh=DWHV!=+Y@nd+AZHd@!1`R\#S5l#"IdUL-VK#C-rcJ+0`-qEKSh4>bY6Hu)qmg=O0hH_'
%l%Gfg\+Wc_fZ+_aR$O/q6DeS2WOoQu(^74pL)!QC<2O"].3bO;OgVQZNT6\;I[9(,0rsriOibbUOAp[B_*(2IMNQ^#&E27>RQ[rC
%R5d&=`*Q8;AoEkQGXSJc>K_OE4X8&Qi1cSE4<AmE(?n5W1240Z%ok7D8h#[e;SGYE0ak(g<*#.';J')M`A(L@BBmFRn"3o1$&AED
%h"t?=aeE'5o\`oqFXkumlYVIQH<-I'c9p(LG*]uCk(tYB;ik4j18FU76l%pb)190IE*LRK&m:pK%j!7c_OTYOkHXMD2Kf".4b-(,
%Ae2M0&7R8mS7EZ]+^A&]cU(>#c\:if##UQ)#54.M=Q*sTc7ZDV<md$KIt=$/b(AP3)+$j"$Fha\L="\V;ph=WE2=2:*p=T\;kK+I
%Etf.I[nW2,$hYYC2VXAC0gWb2?:s"[i$#Uh.@t,p7YI@;=^]Q"&UloUpQ_MZb!<E%d&(I.EY3C`"tHZ/J7k^71G:4P[>:h6^NQ%X
%a3$@EQ/TX`=UYn]SGAe@T2590ejILjU.e@f1&-g>;;&(sDi#,,D@PHtT133B9lI,O9gIXk1=[3J)*MdhO%/=X9M]T:Sh+fNkLel6
%a2dS%#,<:[p\,,iHmtFHSKmM[.,,8(U$j4b>N3BOchJj<UusED#Un1ip2hJ9&Z8Hq<ii9FReHY(XJL7dMdQ,+%jK3ZGaa+,=kjoi
%I#7sH8cmLWEZ@l,N*p0If]QD@pdYROPt2c8RVUkL\d?T\+T"Go$@cjY+L2[^7b,>7/`B896Fkbr3C3LaeAUA5IC8'K.3`GtDQ&Sp
%U,-^<kN@XPX?Z5XHQnBA:iLuq?]U5^mgdZg,@k7n]!`BGaHBbuciF)`9Fk,qn4$79hNEJufTli]>;e(mJEgir2GhpK=nJ1SGi+ea
%\_86jofEfa34T<p71;`<Ksu_TZ8!E'2Cl6R)tpi;ro6EW<7"'52I!eQ%p]TDJNF5p\tG26;%r94Jc/7i7kJ"#b@H4WCf@(cFJIq@
%W'leOb%,Bn.OcNUpI2>"q(1X"njle*-!uQq(B:[\GN"$FX(_H\"DP&B&s'I4cUW2]7UKC%JYr<Gdg]/;D=B(eph$%u.'$J&fK+p+
%90X=hc_UWRCYqX>l]"&qE@K]UaSHn_@@3.#!Ho[f=^7Wc3dY@!Q_M'k"0sOJVJoT*9[H4)<MsleJqpL$`p)XlYn<ahg[0!R8=-@J
%.IYF"/9*nX8i)rQ]%WX3-kK5$q2dhj*%H)NaY^U_CN\U,``XC./5;#i94e(:cYg8Xr6M!`4AI1%&/*<f(mf0#MQ2hE_DN:nT426s
%jTm/ajbm.^Ni*+lM)T.bUj20>3c.ZklL93i]Ztqdd#eG)Di[$3ml1TJ"M15M7GtGRMe"Hjo2leW5BtmOI0apDG\$pi6o5,t&N2^m
%,mDor6;JE<jAla1lXEajg2SoA=!fJ`"54rg/g\Fe#EEq<DGBTb=K.4,p*^EL\r*ZNB>h&-kZKY\"<?_/1V^9rE?`7\q^3esA"UM1
%WC.iJ2Nq8)GVdqN5>6SH-ediga:<h<^2uSoY681P*pPj>p>\lYJ,j("_]ZfucVBDe6h<1?*j$"+=Z>^kWKE9_0d2^OZX+.2#Q]g$
%JY!B-OYf+$_+16XBICI%H=B<P$Uodqh/bXVjcNLL/qPiVVona]7*Qr2ANYntW=MRYcZqnj5`=WI"CcJ/Xa`na.F7GV+G-c^10B%$
%6^OrX;g*]=`?FlAg6"cIj=HGlE[+4JpT=9p+4t[4iXt'G+J>n#j>>fN2_&sLUdT2b'tpc'2hAtXKJ_]'"-%G;Q_1Va2&Wi;Get`H
%f/T6djDVUsRop=m$ZAMqQ3r'E'+bVme9&.9A&K@1(8Z])4>"mjk>3]I)+,tiMk9.,GoV]qR)h%r;(Qi6m));tO:&Hn`sB;fF(o&2
%&l;><1cJfBR!TkVRu2_V:4R&tPl3E^o'AQ<PB-Tp0^ja]62.]aS'LG(XCG]]/63rO11(9E-$>B4D,EEK[1T_.l=)nS2`AW25uIr'
%hL^M(M7`jS5qc[=.-sHE,a"l4;dX)"OYAA&_$;k]0>u,_;&JUr=XJLMW0AQu?pC/R[cf30k$T`CX_$%ug+\hYS0<gZ?ZYltCNotP
%-imMF/]Bm`^<mpL=^Ca%h/$>.4)BF;^3`f#`s#f7m)_#IdV8L2p-69H-nYZ=k5'(<]S_EJhI/[;\3FZ.B:#AcN'5Ni;B%W25EJCX
%%F2_%T1:)m\4.H2lK!&qpn=ShCn.(;fV4<M9g"X]7s`Z1k%nI!;C6\C(>SOQfn*uZ"=<TPdcReUjln0WpC!p_-+M\!30jd<c$OdW
%bD*E48G?n[V6ftf&H?r4KZMWj6\EK>g1tpbesCcuIC7l!hFrW/@LC,n'9gUJFcM"IgKjP]-Z4W]+#6_rNBN6nNds>k/.u=B^=o>a
%;B((\7IWiG1tU`7'#E;R!7,[NOORo)k/\];rA"#cM^7-?@'RdIc.CeQ99L4&3X]_dF@/*6rom;U[STie"/R8cP(G?W9")6K6[KZn
%#2rD?YRP)6<?W"Lo9h/KTmOknXI=NQ%5[!H2ghqRl0?"DQ_r1eil5[9ZHCt=>.9'7hPSF&0M^["h^RdMH3lMn,`q?8G=h9\efR7&
%%[:e"[&:1)G(T]XNlMhLZ3C+rRS7!_"\HC1Y<R?s;2UVu>)8<:KW,rK,dHi9>f`)(W\SH6fHdHV)tF,re4I%)6Da>2([K`UW[-\o
%@U1N(47FVha3l*"7$[V@X8$K?%iI9kNn/0qot7nTp1)ql?B$Hbn?u_V2_`FEMGNt&fUY1;RJX3MLQ=2W#I,5G+PQ6PZM%+lajF5J
%)#+caZN!Jo'G"\FXjpoDOpV]8O7b6(a0JeoEhfnl+d5mHl6D6OW<<pW<:YYpB'K88mG;678[*K3J9m^ZI,c"motCQ/[U,EfHeEpY
%RF,t^GnfRMdiRP\+-U[mfC/nXj%<r_Lj#gVZs!'4Ed0B3o/)#5IaqgVr`l)3U(GDl5X.q<"/#%\lQKR9la^ooD+b0lehYHV0UAS9
%;Q_h]@qeQlWHf=Rg*j,lOq]L&Sd2QHT:1D;,iu03O"XgMX%8(ITkq+;HsF=I/Q<DGkbFRl4eK5*n0_H$aFh2dWHTY9N])fm>1:Hc
%=RXHHZaa/>G6S,'\R1PbmWisTN9=D)7lq[=.5R)RX#iFf%IZcBhQtuY7SqO8*fQrM^`H2GV@G\(YO[@\Mhh`iYof8/]ET)9O)Y_$
%$.0^ZW/P<VUk$NTlBjlKJ<Z,YZ(X5%JRV3b![XX*aO#q*U5>&HZm[ZL*D+gpG7dHUqmf*rI3b"_CeX@j%XNH1;^sa!iDK<Vea"cF
%b3[Qr!FhH/]1Pm[&BhfI4k9<Dpt/pu4pc-Wkm3>>4W=Z,*V&ME$q;5'Hd<M+4Y8u8UcV$*nbLP&rAO4G?H.#/#Q#`c.'D`tTLP3;
%Fq;pBr)80cHH/ST(G(l\C!GpA3>Ur:]lDG:[#XP0"@t)>a',>Y0:r0j]A5(9b#i6Xh=?"WOeaNHacf5,m&kl#%oT]^ahG-HFfA+W
%*d`4B(^b!P#cW%AdF4#LZDf>ebd1Dtm7Y@CZWMAdl_1hS1p&)'8M_=,(Y^e.XGP2o'FkTF^N>pTFFtPB_Vn527(;EX%bEjGQkRs4
%5FjOJ#K:R*9lV8XDkGG2b>B/CYFuOuNmbp;&521O-2Ci>cM!lHTLY&Z[q[HSp;`2KMJ$1]OIZn$0=tnlpDg@<>+7T/Z\Z+oKT\/l
%bZH!OSIZl7!qR\J.cPj7;/_51Jm9.XFZ_VHT#3=u&O(c]@7d%[Zai<iJXud+_HZS,Rg+S78o-[.c^!KoEaIqh&ac:]R_s.i2Fk,.
%W+"pTST2E3KBkH"iWKfcg2dhL&]FM`+,@&]I_OZ`NWY%_=g\MnW?\$5[35@-kV8tJ.tVD`V!;-%;aP5i^,(Zn1=+Z*#DK#K*>N(6
%I$4;o`18K=ah2gIe)Q94a[mT'"\2]s=o#N;U9ZCO76aRVR9u"\AY?7Q2siic?Q`IGh^psI"0acAfVfb0n^U#(Z+MhMYIDH^`u4<L
%#PT('+m2QiE+Y+7V?^(\/G96kId1=mC\Xc,4NI-_ZT=H3CS^pT)BYYpRLLA;i7[<7Ks=>6%VQ+;^KP]4Z!Jm*8-PB.h7bYqX7bgE
%K3-5Z1'sR+]/tE!eXFMu?L:)u4sIl)q3Ae%MO13Ji?4%[b6O):f/uWuAKSH+m5[LM^-g%#p#Z_eZ(%OW,3d(*R&@H>$qjL,3^JZi
%Oa%TkQhAcVk"f"ZpVjMl9ikA,.u1ml@-S*>rC@f?QV-*cU;dCHRn$m<aTgr^:.L`S\3?A%'MSU(rCDAQ1/D?3?(N3j+%R[%ri9[l
%^*tiXSg<^7DdO@)Zt*Ro-D'QVZ#n;]8Xic0lXQlh%J_nEKk2:-H?YstP!"u`h#E)5rp"qF_$O:UA#&PAhDr%E=k,.B`V+Z(2`5ui
%#YC9aCcUP7dM5I?N'%CYS3Qs<b_W"eG0eDDUiQG2m$<n!i>;pnc/7GLbtYd9*_.%G_U3i;,1h;r%TuDG>8=4M`4@Lhp&SWrei<i>
%BX_e]-5MEVA_`R5=dfg\.sgplZ#lu!<1%QS=I0(]o2udRjISJjA_J0ilq+N]?(Sti\Q;R9R<FA6=OOo-Iga1M2&+%cl0b.\P1E5h
%3%U9.eMZ5kbM,0CLF''Plh/;,rHnbI;]HQ-%Ou%0!B8d<F8Wj_othL@fdQcV?_go&*M-Qk%uBlhO8&a\rquN*+P&cakhcBF/ou,n
%!+HP11j(DJd/k+clVrjM7):1D13*VdY1g'R@U8c2\6`8;",CK'Y6<.%#dU-t_Cl@<%8of]r:C(<'R.PDc!qJ)8%.PQi`s&1,Nne+
%BO%n/3o*.C7(ZI%KKmt=:r,JTW'u>D7$K2qdkN'eitZY8OX5\9.67=#:C,9J\@mYsSiK+i+NLc5>b^#R3o]6]jqA4^,9-7P=VCc0
%nlUb,*EC<eW"!a7$N:B+NmuW#]9?2]q/25^On9E!=sT3h4O[L=b)dc<rV"dH'^M6Li`Hg`pD=ZD0/*<94Hh%\-NST]<TWC<84iXb
%H5T5,2!b%nKjipcRI*$h/C\\648bW0WHj5R9KVDZXT:\*Z.[IdC8N%YNW[pIV\Q)*@/&6HVWLr7la82)oj?`T*9T,"d_nQp]+QHa
%rH,T5A(E=l<7L%M6&A7=A#P6QST.Kc!V(m"!)D8>2h+<,Pq2PA+^7rD2d,4d3N#hSmTi'K<;+g;:82E^.Ep&n(k/1i4:oaj#0e@L
%j-i9*na%aoZ"?t*lYH10a[Z%o>bfB@7aTFeb(aJHh5_QoTfJ,jZ!)!F[rOh'OD/m?XpY%O`knu_5:^d\K-Z[YDBr"f&SIGq%r-YY
%MU1U^7$cW'f29&7aM9o,?@=pJJXEi,jG8'*627DaPDJj17`U39&S,)p+0Z;(_J/OoGS'-a;9a2:ejU<9+HT#kiH0KaRKAJfGGk21
%65KTA(/JEPKq"6GWkNsh6&+uI"Hh-aE(qW%.*8XIlP(ji*Sq^qQPFAl#/IB0qn_RZIN"[Q;O3qhFU1j9Q`k4K&SX,ue9E&#mIg#t
%Od0fN+h:\J7+S+G#q-V8$[Y"!()p>M8(&[Nf:sST-Gb9nXcG2^,g%Bj^NrHch<S=G(@I8!].)0RmUKJfG"T`H4p&`AQA_E'NQOf*
%$!(;)NEo;@oQQEVFsBEQW(1q\2F'^E5F1IA"&W6fQh[hYYhT9sA=f;O>t$,dOVI8n328EI<-?8@O(>/&<M'6+-(Q["2Vng[,,B/H
%`=*_#6%c1H["52L(!FPUI9>$bpeK:_:Lu9BRjt(X.dLR6T6CW,a6Tk?6MhoW@""QIi?3U4ctklInhBHt@s,N+Bn]"rp'Bg'CdsUI
%l?nM)*nD-S>)uu^USOY<lVF-o;e",'*ZRR+p(E)k=!PIiNN_oo@8J]hE3$LB$bdk&0T:"An0?-\i]m+g4_$[&`i2CqAHaol3@HkZ
%_6IW&=/NIn]s4Y'-@/bu\.iF'kcq3ZAQfdL?7BlVHB[!2&O2>PNVEoq:uZf/F"=sAU.=5"H^7AE4jpY^iaDCLdaLO@C0g&OUPq,d
%jTdcA>82(j!sqD(4h^-BWTVM4lE@A?<ROUDZ6_O_bEf,I<6EY(c$'Z4<j&UlT0\c'<G78L@6;r8D`(Z4X`i9E[qBRA@d^o=8BKRh
%YSB*]ZNQ3#OUfe2K]_=6p3i`=J.d2!+rs\k<7W,n_%.2J3,geK<7Wjen]O&^?7aDI'aoIp`(qQe6G1$&K-']o)X!#%H7"2,%<[k(
%O4<O)`?Rrblt**\MFjZA&mR.MiC'tU]=m__e>'</,f`SAY>.Dg'u5.;W^l''M(PjIZ><_6l1JGM=cS@+InnKZ/cHp3>EcAUBMATS
%.&#=^@OB(-g]RhpO%NP7ZInH-?nO?G<sqJD;*c_1p$i(VcqDW(meXX#r#Dt<efR7&%$W)j-O28^g=:HHd`-PR#uC"laNl)-VONoo
%B[ELe8).?DVe;Dl(h%=1k`L[hGV&<?Udru7Y&&4EObRH>?[u'Q4:cE^SqMDhNXm(rH3EM-9h/bX&l_nm<7YQe"QLB!XQSKt*,K6^
%3Vc(Hp^h_RmbbIW3H]1N",8<j^0)h%r/V0L&?=i/79-R*:Hgd'L+gdd1/eEXmcS%,2?M;iPP)s5#U9IEWRlZ24^tZYJd^[c,_@GE
%6a@c4gL8No6'$o`%l!?;L`Ye=p2Y.BcW?V^G1?M25glEJO]Yj/WCPr(l1q2HH?qq9OW=`#W.<%'r'sFDP0W?NWfee`<d'O7a_Vdj
%*KO`FP2rWpA+%rkr]FWI@Qg/HE93$qVHD/,?;0t`YQ.[c9+RmlQ?gXkPUue:AKI/PM$KWGMhWMbnK$:C\OIq3(^:5.206(7bRV`]
%bJ]N]kQ=DEs#1jJ1mJ3d1F//<#pn\8X9k&eg*T^ZL2pBVEeQ3bMlk>Q>c&M9eT3DO7Kc6h^s&T58p<^a,S`LK)p(F`/*i%nRH7,p
%KpAIX6nOf;adQ@@D^g3&;K%TX$Qsbk!SintB(SWXJ<3kQ9'TA]WL$h8']K+[>9D\nFPN]UR\uf(%dlt*0#b'7;:67YV(PPsjEi"B
%_h1KHcXU\[Q\Mt[rtm7l1H^4d$RElO9bGHN6^'N1GTb2`_Q@Z3!,Z<mkU`QD5quQdSjfKKIgggJ*q]Cu?Ku1:FF>QTU`E`(aiYVo
%"@k&`[2V&Dh<48OMB^kb*0Phd`mMqDbtnbBRQVOUP8jI*<S_YT1_*DJP=`;1C7'.'U(2C7Rt,k0L^dn6Bmg%c1\(")OiKf$Mt!6t
%j-c"%`+NuA#>#l^J-@B6(pEJlLSiLsUg<MI)dE6A#E+7];o3oL99\A7p[&;^4jn1U(P..+EYKnIA'N':jCd17ePr\4WcWM-bEda'
%n6"-Tp$$s3XR`lN"L[FH_1nYL9O4dVkcD(4rlnPJ<OjTHi+_-mFD[M)K>W\JS3>i<k@o.SJj&bP[)2.C(T1+3J]9aj5R\2J10h4e
%",o)dbYE2F"nJ>-pU4cXUtLd^=9Q-QBXf'IKVU'..3kXXpB`h-jSf=1EFVX4SOhWI2bc(%E4b$O.)[U]mtXN/gpsu\=L(=l75U'8
%@C8L.?GNf_XWn":$gB[!,l\:`-g&ej]OK2lp._F$jAj'T2<*2:/C4f3pSN7KCPT6:#0#-GbA$ce7p=e=WcsSR58HeO"3C<Z"`]K_
%PjV9YaV&[2aP@[D;B]4X_`gVN+PB!`Taitr)]qBj3Pf<dSdG/(gdu%M<at5M["L9g_JZ^ekoM47`G;KZr._&0Ss?fIU^CgNW-]]r
%_^Pm_+L4i8<;s2rF6]shQuNYa(Zmc7/C`iWL2Ss`+SjGm2H'g0/m*[^mZi@4c'9"C'l9>%NM^B:B'=;jot?TSNOno!9UClL!Qk0Y
%$?;^MNsk(/OY#"ueo&;d;Fh50M'&PV,bH;"KLu74,)Dihk-OqXT#a5ji2[nh6Hl59g"6oM!H=NE6G]E6#UmX:`7q4)dcC+:"'%ni
%O+:`^A7-DYa3r+5X8anoa2E878$Lnaj;Qd9fG7dNZl-&Z/)eGQ:OJ*<%Ifm%R#0*`AEXSu[>[\a3.EI4r3kUX^2n2WYuKV5S:Gu_
%s3I>9s"c^g\Ha/`Q#"ppnOVU]^0i$3N8jmAU"6i&*_R-XmEHK9oXnCYO\AKP2V.cgC3OKXSkJ1f!'scbW84jp.=2B$7=@^l]e"Po
%#I7ku2O+<aP+"LpV1jdTB)d\A8e2t[@=qoZB_6.]l2K4t&#>^R\?57P2jRj&'MM-m]QBVA[[TV87CRQHHp>=u)gJGqQp6-Q9slH]
%`rT>3PF=NOjO*&UUnIX!+-]qX.cm?H9m\'u2EdkTiH_e?N3nCG7q!fMD)_W7C.Tog6XmAr>.TN%#S<6O3!/b2/S,=Ko:=T/eXA2n
%aa.T$MFa&X_An#!<5`J/)7TFTNlF2&+1B5!RM>ACoQ'DT#OEq<&X4?0H>=fZ5AA9KBi:UE4,hLk`g-MjUdPCJQ9nZY6I'@7-L5k(
%SGUl*\q%k4l+7HVk(k%bXrQetm*RFP;2YGVd[!8"e2K%6VXdQA.[mrV47FJ3BlkZ.8L85&`0>)48UD_:D$Kc,/*<(%(+5r>XmX(b
%:F3'?i_:Q$0O\$ZBcs_R7A:9ersS\g1M>O-\=1(b:SUfC8$R!IZ9%6Bme7tpV=]sK6_='c^$QI,&VU!B$a].JpISn0J&K61[rE>%
%cg,nDm2!<laCG1-O(4_PMUFY5/EETofZWXF'pQjcK0@q%Oo@$Y5\;R4d9<o=Ccqs1Hr,rB')GH3b2u.[J]H3/ioKB\-I#$9rs&6i
%'7:R&*6V@fKbnZt8di+YZN+OXLu!&SC$ff%&q@L-^d1VeoBo2O85S>:UH!\#$C#<jLD9P\r-NHLAWLl!KPOesE8,Vs^QYCO3AQTn
%diI3Fbn5<*]lg/PpJTC+`QLB,AYXnPrY*E5=1n_LkC6i!MuD;TcKdki*pu=0=ond21mJ6HHX[6g9R5n]=_,P3X6piNe3s!;7k8"s
%Ka_dr8Y(')`j/ogCcaO'Ka"=kH3%#Z/_cfK7$dNtQV,,?,"jgL;nG7Z0R,"^AS5b\R*R\L?EGM3?HN1MHq+t=2GS%,!i!`Kh3;KT
%7Jd]VAmldT-gl2jiArQS.q8]+$a#R.,8+-D_^#-TiOa[M!g5F+`_D!/Jp-3-dOMZ`*]0/UN#WCG^9?KG2bC'Z;Y_rN8FEn=N`o7k
%0`cA(=#/7]^:'9;@*X$a=n;;!S`rs"Zt*1D(/fit#5@U!b2S[)C#1)!Km\gKEIT.HV2G58E5#V[SW.++\0@/keh3#T9nd!%b\.M5
%&WAiAp>QG4G:(T\cm^=cLYPkn_foA_\.@3-%<$/GW2r4<a@g*d"3e_RUp<[3^,jiGQ*qq;?g0VOA%cdAR66aG=rX'U19KVib'LbL
%do0Dt\12Q!Q>*HB<0kW,ati5H*m0XHk#!,A]Xt!E-k!/C]NGao=\#.cA_C@P33`WudE>Hs6(?"`l`,O!Yq.no[;FT!(><8KgG:In
%mF#iiTOHndDLn9Cl:+&k^.*<]8gtcW*6E6tDJD\%l"U4M$hke*fhMrHE`U/]71<nELu.$"&Xr:970lJ*;,#i`Po-jRRMi=\Bo4\;
%!0jW",:]N=/?X"<<RS1Q2L-^/.FSun(8*3h7>cl8J;\RBp`rJJ$Wi4&,4mFaf_T43T&D93/[458_&s^3mhouoh[h/RA+mS.[l[-!
%1./fj09K`<'%&!"+c_6TAf(2ok#lB"4`53NQ!I06M[Q_1.1a-3Ys_^g)+QT#]HGNS#=.?,HeiMsGZ9$[<EuF$c9J2(V^HVV-YV71
%B:ei0So3[8cOq$#4MfX*M[<QY5KaQ-=%V^^U!RD0.iF&!Y5;kZ6iMsGIHr-3[q:*T.,([u\<gGQDc-q#1X`a=Iqq$t\#qA8lhh+f
%Vm*78>7KA`g/8&9$h!clbGsp[+?TSA0:r3^p"a,3+"Z_"*q=korV>o3Z)iFgd6D,Dg5Z^;L(;D4%8>?TSq-ue9pF*ZoO@Q8b)j.O
%"DtaTT;7fQGdhjcAU(BiTc5o\TS7PCl!?'\^.qXNqUc)n$f$Cs`57h><-M%VS,J4+HYEqYP$Hp,W'f2+(T4,HrQq,7V-(d)%^?:j
%.@ap7,RQM%/aWmJj?n@PK;J"t;&&IC<6eo&$5ToqZ^5Q,8<('PRt4Gpblk'?[#F!f'"Qj7<hnlMd[Gf,'EZddT[fo]9HF)g300lO
%ji`7)9WE#^ViM<C'kVi%7$;0U-*g5(463@d;ct(V^*Mqqf@Z1K8]8i!)Cj^Z]rk6l2J#ds?&^@u7Z2(`HFA5tYJ%(6fITtUg[+[t
%8?&HTOIIc!HF?:l_:WQ6+YCDJ[C#+F>(K#+0=UYCMfuKLN2gEApM#'.b+(gXh0-d+4&[ZT:Tordqi8RHRo-[Y2i'4X3Qj/2g09:h
%N(\Prci8$\=4M-46!c/#]:02^/L<VgDED%@Ba"\JI^WnHbPgl9>.EcFa##,h[J8EMn,jcC]cmHsE-E<=%LteX0/$.Dj)ur7.\ihM
%SK_m-J$kV!<lj(OJk%,S>2liT'uN)flDZotJM:knjiCLJRe=9Rq\/[2cdV]M3&Ks+,+R$Ad&b1!QdsCX8>&J!/09&01]WXhL"-PH
%4]8P$i@fTN#^AX=5a2njAb'Vc,ZC-SH#,)tg.<(\])-JDP^0/u62RBTk$V2leX*Eof?eS"oOO7J,^QPUAI!3dq:r_:<gI=sH%KGk
%]BC/a6^o$ch,[S=2#[;joHjfLGjWTa/^?>'NPI`0!L]0:L+ZI4eU2R_?#-uG_\Lu0QXsGTVYr/#CK/h#3Ol.fh]&stHQWc/g/q%i
%BOi>a8d,H\$rr.fShe\6mA4C`@o8>BWci`$j]Q0QUU8UdE6D).8R%3]"D1b%Lfc4O[]mo)ZCi,j="6u;6Z8&U3Z4LOS+,<pV0K=/
%cftkQja`t9hJbEE+rN3ug#hmJ#SEEJb-nfGUX9eVQQqVL-l>Z)P)V('8dTQK[K%Zpo`*`44Zj&DW*C[H[#q=X,/Ut:%9BJ"06;tf
%/kb4mI%\B_Zj9ntjG%#;V<)aD@-I2nM2gKTH.C8V@`Bt<d<[b@W-4e&i'sp+_-/Bq_K31\M8Ia#1`.;7+cXiAMQ"[k.rU;^s7A<O
%1[IZB#05fIEJ>Vn\b=,-=C^d`&@2W'Y^O&(\p-<u>n:FMQTHcmL@uDDG#O,,7fct*DH/S91JGZ#N3\qQ9n?!#bPIdn@2ZlX9nCO(
%AW>3@W:m*6"sI,/$odc6E(89,!=n+>gP,SWMJ-s$kPM\jUB0%pJ]E!^Bs=oj4nOJq"rD<EcJF?j#NJcZ0^ICP&0K7>1e$=n,B@Rp
%<<G?uLjO2N(2M/Np'rd7PtuZDrQdQ&g>Np;SSC/'_p0Q6Z.4LGhXTFSpuWYCd.*d`c<>bl2;4;aMQ<8eV_te#]i<obHs[Me#<)%m
%XP]`0#>1V,?KFFaF[;4q-&^pM'Q)m9FYc6&3477g%I0r.pT2FT,3ktainf*Y7N@UBOiW)F_?X">5\Ru,j&0'ij:J5/Bp+Lt6K+uU
%-p5,8WM)D^iR+YkHlD5h".=l)18t`cR5NWA0Fu%('mLLdOU:OVD+p35>0X3/^>&S'"G?LlD)DTWN#%t[*VqMhNH`J<;5M^p#X-;D
%Zc.5n2@ridkq=ZIBYMUU:uJXN*>4:pF@]3:FNnlJ5@$p-5JX@5<jGmjNi4J]r%f9NCXbrP:$%]A-/n$&._rIUV,!?$jpOsJ&s[`@
%XAJSgQ(rYJd+#C/,Ulr<BN8[qL?g"E=j2Cf#[8FXqU=i2bSbk)'KaQ_%tX>BpXtu>O<0ls#Qc(+je,Co6EgOU;m.7eV%[GM7O>ZO
%Wi,AKf<W,O)L7*:kXb*2>@b'ha$COgX]n6!!+uls3c"7Z%kcg,K[hE!3bM_B$3MK*Qah*]gal=S[\C;V:lgi\AsS6"iD(H<rlm,[
%D.?&m%WoS(Hun-Q7+Ch1YY4,<:/Q$1R9+J$<>_L9KEO=D_f[k)J^3P<E,Y0bbT4,,mKqpZe8@cT87.:s?(2',_B%L7>LA_R"@U<6
%O:;kF]pZ2TqhmP,VLK9%\itF657#VY4Xi==53OO:#WVGT_R$a^!0Qr!QL5cD/N3`_U^H6''^<Kd=p.G/Dq=/ISe0Wc_!Cb0,^k;-
%a.aF?=FUTJ;fP_jgj`RRYQI(ARW7e7ap+hc&%Pg_h48NJkF!@0<Hl8]0A;'L]QN-,%uM@:JJ.7"r,@NGS-Z*XTl<@h?%0&R@[:!>
%0_,2#Ur1i\;o]Wh-9iVMW)G-[(-A@>*`1u&=J:\JWd'QLdem[L"?[&,f\$4me*%Mg_9)JM.4V&,gWY-p&"%]"!f#J*qNMYX6+<DP
%jksjuR_4BF3Pk(<.\OB@+^>u=Dg*AD,O9dMFJG-h%O6Ra`#;?sgf3m0*Wlfm`+WR).]Bb1nQI[+36!hpNp@,6T?CQcSNTWU,\fjJ
%3Rh5#2Qgc7W%0>h[jG`d]b$6;`G'b[=h952Lc+[)#&E#.c4X"u+i`YoO9T.kJJ7<bgA0rNSd7p`)&@=I10Qj9/8dXOIs+aa?+G37
%,FuEk'MMen7.j/Qb3[e1,eeS_YJLp=$N#*0M])JPfG*R$<70"gf:jmDG_3RY2'#E-^PIrm[@(tWmetq!BbNh,ZsWo^4e-&QV/Qpk
%IEn@m8D?8o:-W)AFHF46,BP0JnH?5E;36em_AOR=jg%]1fu4c\_]ALEbYj5r+;J?`""/a/i37JNPgODF*HdWq:'[ADRT4*;ED/o_
%\;X-D+\c]&GUf^4!q$%?'GYW?KG@B$@H@MAXB%b.HU%t(WhKFD_et=d,DLaYYpC+<b-Aq'_NFbC!I\5K1dK)!RY.GUr>t[nlMk!!
%%_EB%N_*L]OldjC?K;OFB&p:Ia$:Ib.dU=`T%34-4ri"'UcLSqq]T#",.Jlu6E$;W^7-B7_A0Ft,8>hP">1!\J\E(26IJVQ@ns\^
%`M=#,'IqXf*B8aP#V=eV'iO'R(?d<OO%cW?B;)3RHh]TX*PLPU_Bm;qB;*Jim@-g*j%p-m.JK%O6;<+[G]RkFT_t+^.<gNmZ>^Xf
%B:TfaM6Z2/4-\o12'\Xa1CiCe_)58+A@#+qPoQ8>KugBUrug-tWT?,`WSDDESquPoh<L[Y8Tu^#eJ42EFO<RFOE0[$lr7'/SnF5u
%La^bF/[p^7Bf<6ngOPOt_1ETp//\m&+lHL,dK&"pYIWrXU;T3i$9:8,A[-(.3#Q#&O]^o)]2_13T-Y`75V&ur'`Kb#U24V>YW%D>
%BCVSHpC9fh'rq_!Fs7JV^feDSi+I;=!X:VWC4:oXVL"=bYg>^dUeq%K+@8st6GHAA8Ta2$Nje#j,ZCo7&13TgYq15Qpm25[XEfl_
%2`[_$_!eW!WqEXucB?lM9*[FLC4i`o^ID)NWr32K<P/ZUiU]_?Rqm+GKga7XR8aY]D6)DlqK%a7gS.\FJ>_Y^5R1rT44MW:hoc3`
%lZX&5hjL@/HOjb'8h'sj'0VesAD:GGNtd!"JIg2AB+MU?,-;?"N&PXM7>+Lp^a2S6P%Fei>*<VKQ_idP:Ia99Cls(Q\f70FPn<_)
%iDj[5"?=S:f9d/qZ<7Hn[XX<*fS"U-jtsKS6>NSVnbQ:m4HSaY]c5-#0u;6CW5Jp&CU""^M;W3mnjNgX1d:51G3-$:'W0NFA?o&F
%5EBF05UcZ,>S^]1<#,/hd4Ftl/4trYdFLS!],U:f%ROg\!!?rITj+SB%A?c:ACu9lp+@$M#8G:36:[]T[/$E,USF<c73]3."JN2j
%P!Lu^Kf2%qV6>pYE^6sA_OAMrB'F(6cKG4Z54g=t[3*;85Zgm";'cF'c?5+ZO)_Sf-**'%V`>#eYD;5L0?qn[b4bP`(Mo)6'Y=eb
%>Dg,;!FCV$4di/*+]RQ!1/$bu#FD9\3`MWk^`<mTcA$5c4dn2p^\&_29gbf)Aqk,EAXgH]+s\qg*Y=K0<=8c]]TUQHU/s8)U`K:[
%-^U[clBMI<V+iQ9<fX2C;'t<UE*:ns<a"-t=ZS,OdHLR]WdN%c,^J;5:SU1M@dDc)R^gT3DqWtfb[D&,rU+@1c;q&;$Zf.UlVD.U
%j%)_.ml+hOS??pi=CDLA<7]C:Lr0F[bOW5*-;-"ci.I$V]T/38nK(h*Q/2QK,blhLmY6JG-UdoO[`AsJS0^:OUhPFug@7cna]+L>
%ED;mrb*3bT-ligh^u/lT/I)&YS#Wd#5Wu>&CoFa(:g*AP-lUe=*m[;,aJG)Bs.`0@Mj=u[cOE.BnLZ-Fqtm`*pUU3GDn2>_X<edP
%)]PWgNIC?n>sc#?$)p1Lh7\eZ4]G,PT/Am^p_QmFJ#TL(<1pPXJ_-'rTcLO$C$WIj*kg;]PpOb1f)CX;a`#QE;]@;DcNR[X5TuQm
%Jsj8r,rmX.N(l1OHQg93!6RD@im8Gk[JUi$WKLi263eu5f*.KjD0[U(<sEERq[7WpEf3_.T0kUsWf[`r0g`MNg^oPa_S%;1]i=IL
%+Ckj]"H9Z-H"#B<GoJ\Rfh?%&kk^qW/.8(eWcAR8*]BZ6]>="4En`1GikVj5fCT%=3;rk_ne_4B+oS;2gI;+2e34`->5n2*2(KYA
%?s7:d4-6R8SJ);5PK3'!#1NG<d"?'*555DI5A\25$I_m</u4>,$$:p)GdODfO9;V)mCmNM3GU4&^iLZBMkk)EM]gE_\HJl`dR9,O
%;'V6uJZ!g?)dYfLp/P=YMn+B2?TepP>\gF,V(p:RX@$e\4iFH+)Fq(NCOnQNOn?1jI#fNfWsg,4jRc`g]EPRMaW(&hEA4glRe`aA
%L*U^1SF8Zr@S'bjn"O]1PI0Z1oIU>@X(foKq87G+Be%$1\LO_HA*RUea=Ne3'IFU:/BL&\?+OQ<\V;Krb-&1Z;2TTTBBa/\'8]l/
%HR^HD"LGZKr=P!Dejg0=f$(B<X3_s"n+U@Y,\=U]*R#j7rgu.cfO\iY\RD83`.7gN!ip\\&T/jl;cN.+K=5g*Fpr7.P^T.PTY=cC
%5@6AcBY(a"73&eHXuHU>(C[k:Wflik1R`.O+8Y4K5Oqmimoq0(R(gT5"KgjZV$D:c71/:NEA?M;P5<M9LMWZ@H\p6$VoPX@RK)JU
%FchY>?0a;/dr>si8b:lGcHj:UMTa/b(ATNK(P.t,^lCXhXJ@UNc\qa[?R.7_flm:$=o[uE+"Za(J,bF<rBl5:%4nPWOb<eX*m6kq
%`cNp;X]#TdDl`r4h,c"jQ+5:97+$FAJhHkLSeoDn3iCXL?jAOE7t4&tiu28:+<NIl19&ghfa>/8A[q:j;Y\0_8tut\9_>`J3LW8K
%a1[Rq7PKgR(I'CF%4-&>!?PsM]n)asA'u&QX]+i7Tl=4]bOc9GBp<>i5;0%ug$;`]EQ>dMWriqa(d0AJl032V7\&u[o(54,N>VY7
%^c<%"';qUMfY(PnL2GL3'(5Al"\ER]<H^,(-e2gf,i(u$/?()oMGbddCHAmq;MtgFZp'7TV'O=EWa/1o\u>[?29n:o+$c.Aol'6\
%2jFc+VnOGLR?,pleea[!)i_f'L3kd'Q'_n:\B3Ih9nb8RcaZP]Y77r%;9Nag[u5-(ri*UV$1Pr3FS%Q%la;G/_&tBeN1WE6HT;<L
%_);uWo0]fd^-">n!U6asHr'9<DAEd=J*ZV!c'3KV6FSqJDXu;!5OZO?,r[]l>FtYX^c9Z;TB>Y"H2*YTi:qDq(C]6_=APf>@mOBN
%&+PIo]8-%c."RWDCCqLbik@=/V9"@<7i%#jB+XC?(JRMHE3m:1<?*i?=ZhW8ZR#EhFjj?8,dA7oLaj4h#PBpm8mL2G5E/CH#+fI\
%)TN<_UHb!!TT7eIDPX$Nl%D0`e-K*L@hu]+RVEEr^8WuMRa3,H(f[8h'n3P$Q6J6J),'_dWLabLmZ%l]XJSW/i_UVQ`M]I[*b#)W
%Ro<ktq8Pq(*fY\+Gmq+8gA,b"pGs#W_Jo%IVpWW@2WOJU3r>&):(U[71Dqup$QYB^B%_;G"%`*R4H($Or'7Mj<qYnn;(R<oY"N?X
%5J@4K$OBoM85hN%hVR9:9ki%68$Rjr\k;\g#u\K+UcM0Q[HYo?GS[*CN(AArQNjED/S4t%@o/)'E?@]'e-3E8g'28OH!iWA(o$77
%rp`(PXQ1iQj[8Odm+OQ`*2jV#D/8nD@RH,a%7Lk]+'d=*#u^tjVi[@a4g+'hV2"$@bKKKC9asn..]5B'WTitYnC'm!&U)]h$#["I
%9s.LA9:j(:<j88e'T;`;<JPe5<leANc[b&Jq.r`SQRLJLp-sD>=0!*LE7j(d@<2<bA')buJk<MS)EOl&dmLHtNS/^_(r.P=4\>:.
%,rY@#5/++XHYa*so+!"$(d(AuW0%Fl[P0$/"%4*rO\6hF4jP9H.=`>6!cP'&'77Tp:?+@>R]TtH#-p\Xq!$oiNjpniM"NjS_]h>M
%@YtQs&;rNo9(;h7G8a*e,C:Y!NAPA9I6@p*jC]]dC,84Og#f7l[)eu]-AXY\J05F5HE/UE@[3C^Wqo=d3$p@k,bGtm@RB=Z7S*Vf
%*36'=UT-dD"q.2;dM)fgMm];1gETs,gpimIO19$b*DI^%78'?!m/PbV\/-Ce*m@co!3moamktpFlP"uPSO&YMce(<1cOL69c1TGf
%$6?i&RrL=e_YP8WIZP+VXC09Q@F\Rr>Dbdl.`k+MY.aoY:7h#L";7Y16k:,T,=Ck@QFUse7>bB*O9bte]A=f7)cURJK#RPnEMc3=
%NG>hHmYNX\6@A&&Umf_l2d[V!Oj>:-#S7c;.l4(/@1iEb&Ph_CNc1E%\/tc0h@:`ga4-5<UMi5NpfDh.B,ihf]\Iif('e^)$945i
%'S?[K[O:kHb+Y#V^$"fU\g(d;=cUAq*=6/E9WIR`Lj077F[Ec[Gir3<pt2K=p^m)s]MFD-:mJS_\\<ooBCTJIe/_Ui$11Yc>Rqt-
%RfM-p*N>hgHE3G+nOuJ4JT:d=Wjg:>dh,JXN<`'Z*#6Jd2K,7m(tj!*W`^5d(G"5tgolhm_Un`BLg9@4N?RR%@*uBN[;F^Xh8k@M
%IZ+72d"8ODD:rYX.Bs'SX(Zj#YgAcn7g8h1pS1Qu;Bpkf3t1*k8^n^J&]0_.M[d]rG:H`>CA/IKO=!P,!X\K=">/*H7Y[!O^;(0n
%JR=3P#R"%*$A7V7V+RHB7Zj4[1Y'T9q`#EDe0.q0&Q/TLKnMPrUV[c_r>c_+m"S"R+BVWeY1<If&qji64b7lF2Z9C"p`l`&jP#P'
%TT&APDl2X6!pl&"ELa"a-+RVA.!lo3Z"SDLS^IpPeBG2Z40ii_58^JG*;ke(<=\KLbT=SeX6ee'jakq6?>UG\WFqo)%N7VRGQBa/
%Ju%abRmB?OM3%A3$@L1=(1]3Q81>Z`.!_a*Q6Tp:$O5K:%?`bt"#id,.O8jb#B?d'f#R5uT6i$Ge]7HXA-PY6JP^.T"eAINnK")M
%dcKton@(oLlI7t<GGl-P.B93:!DQ,2.C_n=$'fVg)j'%q=-3mbV5R3G;7qIr@X)FX>69G2H?$LRIf0J+qaYVnaZiMY@]+o,'A#Oq
%0DAqp.MNm=&C$cZWM]I_j:+0-YiKKmRB;kQm\!-bEH,R8:`:K=Ts(H+?3>kW[?&g!Hf.SLU?4JQ8>8CQ%Q>)%i7X/l/ZgfA=GVS`
%D`@NjDX4<p,EL=SSE".sY)EZGlR"5`L@q.-FLEOU7^-]45<noV_5aMWh0VPokj?=>FgF.J!#I'<,(,J%-`MUtTur)"R3<h+Re:\i
%Fm)S<7fK?dRW7j4ZB2*/HS(`oWJf6rg_8sH@^SBbMAO%MjVTP59NLf$?t$Fl4dl!ChRRd0d,+UVZV<lep*5rj>d;8V0RpLelpcK2
%gqOa2U<b;tW'ah9[ah^&,HZp6-baBq=u8A3KWU"N_P)jX>sD(W/fPY/G8U7;?rcJYP79Sr=K%L#l36XL1olH*&O&baq1B7_Wq%5;
%\GDR9,c0V[A.`[i\9/)`&o,9eRoMd)W\:`8-DZNK^lqQM`76G'$=O?C[/(mp)8aOR3<T_b.@;A'=Sdi8ce8>gHsudAc^71K`g/_/
%1QF?,`FOaKegpc,\7fYA%05TTUSUL]F4g*/!-oE1]KhVF+dUTFI5`Wc<f.=:mi[ER"OrIED]ZcYWgZ!Wh*J>M3fEGmioD(=+Gjja
%!f!`?k6;8$8WaR85=1pNkr5PoFL.t#3"mre;=cG[:T0-2#TJjlb+u;r(mU&rF:T(O$s.tL4GC2/+oh.oMl_VfO::-EYYYT%-/WO0
%M,JT/:@b?'>(LFjTO,oKS2ERUS5Jg04N$Tkrj*7/U%Z1lm)Nh,n&n3n'Sc/qf'cFk!sS^F5<(3nGX*%_,Gi<H/^d/;I2s:ClM[g"
%$QP<0Z*NU<8K@FeK1%f)P'r<@8T76/BWA(rglB6N;@2sLLm3'V`F2^YDI1+G=>F#)Yk0LuF+iF7T,c)5s#u4\SBlpH.s^SfCu8Fr
%<lD%(8;4N#&TeOQ_F_`(g6QQ@IdAaJYpe*EF$6;H<lK8)1"O\&1GDqGSc:c.%Km/Z#\[E.N[4=o$h096dSZi4lEda;^lTi"OGsul
%an&#,?(dAZ3FK(F1YHi[Qh&pqWK3T/+SEI&UStnn%1&8&/KG*4C1HnI+-VSA@T`%)Pg-r>fbC!Xn'G[B2Str3;Dc4f3a;-9Ws+D>
%]7N7@O8>r2Y)@O]dR-75D]9OpT2BQVB!P8Y%`-S8PZrU#44<V]/A+I[RD&b,Uab2mcecZq,VaI$<29\.?:TDpW?`kGR$+R@cYIEc
%8M;oIA=b&U^^Wfe)YiZs2F=h69-CIig^41MbsAL#h9Xc2h`3fPRo]rF`R`-'PsVMjUd>U\"sj;8'og#"bZ0;'RX)uf9hD;5nnJ#V
%LT^DI,4j)#Ha;BhC1+8p8&DfH^"@Qt#"uQ."V#?C8"(L+Bc_+6"LE@@8"5Lh",!F5M$aZ-P"6LO_?_/r8#&W@N@/F!1pQepR%uGg
%"7Ti*WE?UO^9i+S%$dC=`rTVjL-<W8V^J>4%s/2^nBW8Wml[R'aU5]SNFrfY5BALRX9"%@pVS'.$7uJ2kut8Y'<<>=pur68YP6F_
%K`':ChnRq_F5RBBf$=U^(E.=GM3.9NQ4>"Zf_Da53hqLmfg(T=AM@1nIul%'iZ';@K+R,J2bg(]'9O2q44;eS6ZNc23e41Ta<m=^
%0i_-'J37NRX)Yo4-uF']d&[CJaXA?+!f!Q=WZm,uL*^"$n,L6IQ8-?+Z!e?L(#(Pr8R?'of6FP/Qs>^k;MROB*jHSV2i+A+dDD.%
%9u!5bLpkHf\UGb?&?j^N>^2l\JlmM]NAu#^3<Og'^MDBN<c50'bCSZ?*r/sK[>=Sgo(/U3P<rro#'31p*TV2IHhI_f2R,c1;UXO5
%Lg4+?P>91joqX_FUsl\sH8AG[FAH%YYuJ#fQibTCl*-Z-/KVopqmO`/&$Unh.6`P42+.CWdpuOEA+N^d@`6kD3tsd:BTU9kUdtcg
%].F6/>PPXdqUlais!@:Vd;^)CY((AM=o#fVMtN*ls8!\Rd_Jnb@R.27C+/q)JNB5d6=1PTUC!ldrdb"#'J=sTdL%JujedmAf\usn
%i/sQVq>1OsdRmkG,&366eH5XI.l'ot"2=:RIHQef]J(hi?cZaC6*00>O!'`.A`b+VIfV04"qV0gRmf!L7SW!PDP?n$mD:s-]f/[p
%$i*q<=tnamSo=f@9.n/FlId!K)m`AUh/2`2VZ>G=b?*[&*lG;ROhL[%=Rnu,;-[6&s":i0+2Ml!CG*igUfn6N^uQ-\!Rl's$qs=c
%^_'9>C0;Fb@%-6tUaSnfO:\Uc4Z$U$n8*eM]cJ#Fj@d%M(U9Z6UEmm&BR,_A-3,03NPo2]XGA_+nRbD#MM^S<n;12YU%l'MWCXoY
%ic#Z]?rU_lO>$GA@A(ldk^-ldi>,'rQYBJ&b@*>m0B#K\d*YqA)#Fj)0fNQ)OWV\MHojA[R]=MJMFcW.I2`9-,^HcXd3NEZmeS)#
%k-=ii$8't'ZAKQ;0M:A2iO9c!ZB)ci?&rB-`Yc2K#V98[-ptZE"))tUn=Z1UAimF-H/q4u8\8a\c#f57IP%95*p"Tu`^B&P+B['(
%.qa?NB-cn`pDd';"I@jpQ'9#3/Q@bgSi"W4\47@E"'n`#(l)@<=jE?sA78k&N8;iM'7q,L!LIFNbS=Ef7BTLV9(0daa7YrKli6)r
%[s/[9\7[V&K]rT;p;E:[C02^Vc+nChG*d:#1&2:e'O"6\/7[+K3EJ>,n$"cDX!oToVN#Z1Q2K1Fb25'e-UPp.i6oV)&?PI:n=N%O
%;ARg(O&ETJ"]5.?=G5TFXBY\S&"[WH[DDBc@/[tVILrSFs8@d^rDS@J%0ET+8t8?\";YIc.DJ[[.EX^Ii<1R2hN>W@e2QZ&'-qP:
%?2+KDi/5TC%MGb]qOnHh[;u(E+"\XI`;2B*2tmW:]TAjmmiS)t-o0"H\n<u6$/8^\#=;J0l-"Z$'R[,+)*t?Ko+kJ\6=SXPT-0)N
%Ws4?X+EBWR5SaL"]VAa>lO'5B^r;rrL%5F]OKs>J0H6gV<5QfJ32V`(^`?"\erg>Xaf%W/R9G"2-BhVU:m"?0@#n!p4b"c7H^p'N
%R8a[YajfJ*-rXGWap9J\mK:6S"SoL4,*o2kq4C<[`BQc=$V]s-A3%/gDmcD"!A'H"3/isVe_O@9M=%LQWMFMV=Jih*aPL6d<'3fd
%dTHea[EP*;fZ5P_m`VUFeH()QD]EMVpVd$q#A)K_2;Q?MQn9J]@=2^r)B>@"1ghK=6p#lSKc&muNX8.BA<+WUhIU06*m:^Sq>>U;
%c!gIC-&5kO%#hq;K$8?];5SfU5SS4G<gES0U07p8c/[FfQ7#(3/RPOqV($@kXbAA0lk"$rQUA\bI+VU[+,+d!>?NCD9u*W]Yd>l1
%lK\rdMg4&-'%CDnMW2<3KnV:N'k`#i+/C>%Ml22",,(CcO*WOTU0@*RY[>lc6!8b$OG)6l-sGC=MXmi%ZjC;!G!,k[Ga!=6j.pp.
%C--6r8g^K,8Lta;?L\l`oDO'.TPU=f[l>j>K\)i/^5ert3($4^\=7eKTVZuU!Y@p!(>aAO4T)LE1>:;e5D$gp4Uj!pd0Mo+*00)(
%ErG^&DENYb^"tt5lN"2Iebn\E`0)V:CB5K>Zr^TOLa7j2"C;42741#q,)LUZRm)t1?r9_!8A/"dp;:$PJ6glK0'G`%eScHK,?;IG
%L!_"hnRN$9Od&WQ$e7/r+2*;)jAoWH&!DNh!t9k:MBuYTW?J'TB?-&b65nC3L2R>hcFl,ah'f('.@1h!6jHn$.h=k<-BTF/P!UY?
%E\P0XPreqnThT!1TI>E7P?=d^\m"kh53IHC+dK/+o['$m*KJM3@48R62o7_r&-jEkC/onkqD1oh.,?3r@8T3_cTYq&cq!GB!`<Sl
%Tp*BW=ui7fTtr;lG'3td>I*g0UqosR&r'r[Y-`q79CP8bk6U7NO'<S_'o8W_"`D0gcbLrb1TN68EgVI'!Y*pIIA7b`M"NjS_]j%+
%W/)EoiU36NnseN&8e`f5PYVlKnpKX'%YS$M_9EE4.DTEA77a2+Fa4B%ok#al?A[6?=FX7D8/XrEi(p:/WI37:8KftT\kQ*HNK36d
%N$ZB`&+<pXmF+YOm=.k:E2^@E@f^K/UG\>6U)]WH@U6m`<OR+L&bq/>)/r`:0-+@oB@EZ/ohc8n+&7!sY*\ppErL$+aX<H9(g&=.
%$!7(p`<$-VUsTQ$(2Ba$h$/+c#+On;q&nq!5O^q:2\"[&&5B[EkLt.m'#i-?LP2+oe.5YJdO"k3RZJGe9*>0Hg-l].9F=@6G;`-K
%2!6?:os.\%Y-LD'/=,uipdj2dfaH%=*l<pD#C('EmB2=b[e=+<#L-ci<GE"E8BO<cXi4q'S.3c@.9heTBRDue>gU&gi`eb_%+ghn
%Ur_F2@'&7Z&-iPf<n^C`$agY(ZlpKdTdih[k^tW>k7E.dWC)BF5&pqn=\1c87ADINrP0SMEf]X=,tYbtU7+oa*oQQ9=di;lS!-1=
%r96pSaVIlfFrcMf]6.I/li4Z`;#RHnF7FP7)<n9h(`UBl6Ont/C3D$/`4B#CDmkC6"1C@C7F#$%Qhp?%S$l\qXGE]k#QN-<U[N!X
%3g)@c\BR9KrJlLi8dL0N7nG82Wlqal*raB+?+qSMUdeAncNKq*RqiNF8KujF7Z<Ea3KsW(,aE0q)d5SV+`sJRP&MrV"q$WY17OQW
%Ro=ZV!EE#s6J9giZ5\EPi)lqK/A1l3I)bYl]1;@q'@@G]K$'m5D'iRS*8#]r<TZ@OJ0m6n>:QV&g[4C-D__/l0RUG_q1nF4k7^A9
%"lG@T#%s$B)!`"Co669q%N1;HP"+7)-9dM0Nr@4V8BTP?!/XZm^,B[L$)bu/;'[TWPiGdi`X5(rL.>XI&6TcN)6#Q5Z(N#2/u3!>
%2j0D,`=Y-Dab%#f*[r@M=Kmi#'!2Be#^'C:6<j)D,^-8Y0p8?d:EDug3Z''!>*=OhGI("7P8gdB5Y2\Ros%Cm<,V++Whf,C!fk5"
%RH-.130mN=hsT)gX>Rj>F>@NB;f4+"j4he#:V+H5h3M[F0EL:rEBuZjE<i+g6#X@i3@o[7!-(.i_7%pC0+qd95Ra33S"n=@MVEN'
%IcsVinbsD9O%Pg%58`oUVAViSH2>L#q2rpN]u:lY8;,.\GsYfb]:KZC(Q%Y$4nEPHZH)cdP;qXs6roi3-]qCCeHq#nM(GV-aqi)D
%M*(X[q]M0i"G<N@7LL?%!\go.,:RG-"-"Rk"3AKJ,dH2W[Rm[o*#'V#-'ci59hS&Uq54b&1/!iMJLm@oGjtcE8`e+4rE=EK2*Bm\
%_IoBU\LDRI6DO?`1V=RtcroJ)"`DMQlmr;ocAO](hKApGR%<6cI>7a;%7`iSf8F1/)b3W(EtG.>+`^:a-0Z?m$<LFW%uM!+DVR_p
%+,@W88Ys5u#)FO)?P?(iCA<#n8Li?>Rp2%4@?22[V"^S^Kr:RhMWt(I.4Ik-o`8&j\C1sNQ5PZgnN<+4m[PL!cgf2Cko[b3^5\m6
%3&7I8jB>4_r\J0aHf5l]56api=>85-]dU^ce$?%pAuB#AG`V/4!qgsXEa-qPJlobi+:\p9j5pVWR6!IG,O#[lQMrYB_nZAB9(NiY
%,`.qtnKLOmZN^n2.Vn\]Q6_;q>$-t6Jj]\?,SfM.#,NT-enF)CArT\5NFeD+#E:$p/[bU=Vql?JL[Z&Dm;*5'2-Ohi,ILA;9@@>!
%_[&XRQ5QdCm^;1bdqQ9]L[ch<6?O^.9@M[I^+YV!FZbWU3u!,J$E)5NA!pM*73tm(iOG!lPO=&4P01Jh@Yd\Y5$FVA8_dl:*_@P;
%ONfAFoW5&3DN_pJ0MkTC:.IrK):]m1Ar$_&a^e>:.ZVP)25fs(8U%Q2"H)5%NB^TuWjgVTQ?spj(J;fiq`c8@-f.ThcN%t)S//AN
%(nH>],BSrD[/(8#83Ps7^YSq1i$a`.P+$;r9?EuBnQ`;Z.HB?k9^SDm15WSCM_WqKLQT$VW22't[V7tX6VtCCMjE(8nKCouD$,mm
%g+Dkt&i911r\7"nM=jL:C^Onb9h'Do$ia\.'J8gRc;a7>F8#O')@\pu9$MM*pBn&>m8X7IofEA,7YlY44cO$Z;5K-c_df.9[:I-W
%P0%<`oC]=]!YS^^Of]_O<\/2\VUjm[-'Oorpr8cRZ5*/4[D$KSC+Y#VVcqOqcrb'u"WH]rJc=7L]nU/RS^41+"b=fB.U'AA@gPa"
%1kEf9ojB9c,j6dld:n<O&(=>7,[;.Zi2H8GaP+^Qfs=eqj5=RV$H=/j/<a'\CU#q/047;`R@\X"E8j*jf2,bO71._66pT0EMG3'I
%+i$UVU#@jfVe!C_%G\oYR3m+!UJL>b.XOeQrR=RQ;jh22(#X'_1SZF"GoZ/KKTGmEoVF528b9'#E\r[0",i%T5F[Urj*RMkGae"r
%7ZGEWDt*sKA9L(eJRX+&b9[n7Na5VcMIi9ZHK&$kKB-9O3+Q,$G)'R!mLI:C,DpNK0!+4ta@$$L:-:(TRh`68&[/X),"Y?oMhdA[
%@+C"pPjJ/[$VT0u<,eO$T55$"4X=T#?"0lo9P#-5(N?Hu3tlTbacXTKbq?o`5DX1H%j>O$?p_V5lT(QTia6kja_..uabh3aVW/B/
%/YTYXSX%L7i*;Onlnqc\R]^H%"OD2*=FZ9gF5RbUS)@^+adf@NXL!:%%dMI+o2^;Eci6NW1=8FBbX!J?ocf:E.6at+G0"6cfp%Z,
%XJL?m9QiPL\(QC0G*K/u9nkB#Z@]`:S#*DhG\Ri1ZBK/e@4]NXB_$Y'PB*b?oq&'W(e_16V/-$HM)<(REbs@J-.kSi8VcCUK;hY,
%Zg^]VV"rIWYOa(4)a51ZS@ecsfV\Mn_cSf`rWS3+pU-q>O(+Lrh@^<JY`?)1#H5]@>sBm+ABQ@4:a,Frl(9T(aS]d#HmJA_mbJCP
%17+N(Xi3&`k>'+-a.=RN<'2<MXV)\a8Lh'(a>M:QR15E.ca-`:MuKaR$b&-6_NSrM[@]>hgQbuZ4s%>JKX\n-V_!kU*X!2.)(e?l
%.3lf9QocE[g!L\%C;!j<\(f'YLAk1<>WlIG)^(hlg'_EDS]8;Q(b<`Eb9+.)/kNKn\XSR1)b9C4`Ua:?F(dn)NFI^4d10#X?pp6=
%TeJ(h=A`:)L<6Gh[0R8S$rW4kQh-:_f2hr=ejYa37nchbSAglJ2,l_@'YCO-6b'*1dlcA/712f)?mI[r4Bf[^[&P%_Ml\Xm76!Ol
%Oq$GU]T-^+:%D.E-FK&X1>-EZIAi6A!l#LK,V<5?.7YJJg]NUKR[(YaJ0raH@$Y;pCj90@^(6D_c-WF#V_V!9P39+:iZt-]QH:`!
%^OTpM2trNWWqZ[QR=$h5WQ2J9qSOF\mtdBS[R3uuEbAl=Q*-2(JZR:(]ApCgZ>SRuM^EHo%L)9nKPn=t"#m:c\^?,.+VP+?D-uW`
%B"@iFl;r=CF%rO#<acJOe]`$A.(<HBZ\keC52jNb,^o0Ir(OdUh-68mS6A/$b"[:;J#e7S^=C/;DW-^?iYppdD_:RL>P>M<=%KNC
%/#h.UU5ODK@-kI\>gg*=HYj?tkBGiK<YR'Pqrk>fRF$t$+:FO2I,TSTqr^UARF#UBr%3cuJ,]E(MHGB+o,en:s)-)r!FoE+AEBW\
%F>+Ki1\+d6XGa^&iaFAP94I5N"2p+%j,['I#gMb>PRKl*N6oHP(FoO#KF`o)."k8HC>ruYl"pR5!jQcQ[hoMfmBm_-nVg,Q^\0M)
%F7?!"e?4UM2$/`YL]1-o.(V#%nAn&#4&t2:(_[km75kPqLN5+6T4:^5<A*QnOt'p</Ji1Pf8,H8\[[PARP.JmQ`;N9?P2Uug.e"W
%aL\;Mg[:h%P13Z`,pc.,_%$948oO7#oMIoQc[OYNE0<%F8M!G?$*-K>8SuFD92^X#La<5K1GDX'YMin=V#FBM18IOj3(m^d.eS%_
%87\ESX#C!!V">:0mmC%eZM(%NW7=tfP+pgcYD+mj,$EY'Ft_^bX]T3:bFM)0oY0,82Eg>@XLF*a>"QFQ<JGOkUW3])]lFr._ud4t
%G6=ec=$D\-7Wa'X-'$+C]I(IXHfT4QG]s*qJ9NE:iNP^^qNY(AnXD%7.=L68H<,tj%`pm(](5KP4Z>Cc!c<T.bg"I-I\M#rqarjJ
%/I'Q^7%Jug6^@VA'k/gJO&G._M[t;fkaeqG%?"82/"&BslINNQiE;0UO]\"i(/DM'7+U_DQ%RW.J]IUiR/O#\@V,#:q:Rm]V+a#l
%V&%^).G&/&5h75GFt8[g\s*5]F_h(I(\s&jK8qQ^ZOu3WdA1Q^AeeB<MV"gerYOZAbHTst0GJ,j`;s+`=1a=lZKU?P+le,)rqn/O
%8D$0C9tNqEZ@Aos?dDt]J"F#DG4k#:_*'V@.D)^8\T._Xha]!GH9Y`*^h9)"1CciAo'cjRqQ-6R-?(8lgNUajQ8RH?gf/ibh80-_
%g[,6-omD"p"fW*T6LDpkYs8hq.Ni0I+I<E:EkM"r#jOjOg#bp[,2.--\gS8g/l.\O<D[J!SngW<f)+gt(Sj\1"?\#P;:^djqO=BK
%C0JjtFb:t&Hba\TlMi;7`Su-F3SpQDMtTHJlpL3FTSn[6du++<p^jTU92r8@,J'c:o"`.6oO1f-UdZk@,Z7\K0=L,Ng^ttj:^iTc
%<iW;5QF`<&7p"([;T/p:qUBuu,)b"d<A3r3(<t.AO7pnF3L*Hb&)m;Mn$=ks9qEXfRsQm?"PPM!=Q4`O=mC.kPM#"q#t^t1=[luX
%jcbHeSalpNDS"$SMccNqo/3IZYMX/AZ\PiJL(LmYLa\`:eB/:[8rLcqmm\V+^Cl9=Hdh9!1!Ua&&UQ90e*!<2atTh4#'"Mm%XuAg
%8=[.9n=HZY]gD?bf'c<,l[Wl<"<Mh:l`nt2TtPhnXN/nnLq`LZihE`1,C(nt26N83!MX[uD@%@u@7KKZn9;g5SeLsM:Ek]T\+In_
%kHeDUP9j_/&/;"SfG\U1MX_f!Fu*-WRbZ>BAFYU(Q]XeDBT/H4ro[6>pD(2_1ID",>ATSnY/se'7'?F#0]s"SisgOp<Lq#H8f>W@
%0IL5Kd8%=6/7ur04%Su^d+@\T\;a+k/C.i)Ne/rS\72O=@e)W^;QOg1"dP7l_<Z9?&(3oBP^il_[[Ycs>3HN)]up=g"%F_:gm@&h
%#Ea7^_&6u$9>'EJ,It@^,Qo77#XB\ARfsc>oA6tCnaTQqj!N;^^p/-%j3f73=L>?mO)R>H9fQCiLPQ[`7q7]K/No)YKSIA7\9B04
%qlGcGO(cr4efmE;*5SLg'rg%(C_,OOrlTAHjY1A^.rc/?1'fkjmmm`E,]aJkgq(P2:oe5R8-O'5F`;mq-n9i`J=r,_kO.?N+f%ML
%\]kr<cpjW3&;`?W6"MsZK_3pI=2r*BSY[S3:g!9CH$,ns;?l7<3#/<PV_QP#ZtA)B_H9C'm4-5iI[rJ`pqg,]PHaT0Q7UpZLTs`X
%g#3WONM"^Dg7SP0c=!_440(:hT\9!JHNk)TZ?@=Pb)O8IXs:Kr]M!p_IRc[@,NZ3<,6>g4(:@`bA+@T$+]TKS6->7r+qmA^-<4&)
%4G9Nr]o<m!RTd!!MhJ+BL5d`->qE<$Cr0qX5h/+bTusASQ(f?]<GiRJV9WPX$8`MOP#qqjNMSS*%ctPWM,NL($&.bf3m)QLS)\VM
%gMF904_BF:BM5]4<?Qpf8q'p4D9c$cO=f+un4bFIFrA^[p2"q_iM[%&j]SZp'[1WW:rT5bb#i?"b._!h8XDE!NsJ%O.Nmj#&_*PV
%*/cQ!.lA(5q+)3q7)i"uX<:j1;qtmk#.h>Lg\csTE`@<Z`XGGcquUVp7LgsbOtQ2cStf'FZYYL(V-L-?dK_(<XW!!<oeEB@N=I*@
%PpT^_&X#95!CYA(T_cf5.%.ch`gVuA<k,q0d@XTD2COhi9/J`!$DkjEi`Rf:81gf/((7NKQeMBV<u(>T4bAq''?%=mM]Nh^Q$[<*
%eJR,<b_[Z[jqIBq@S[*VkUal1c?5bVBBNTumihg6F8+M3<+1`>hL9Y=i(7f_F<$T0%%V9-%$!'n8MhF-,$.lj%O6/T0fTBGB]V2S
%TTr0;-+k>mN8ept,Rqh'h@2Q]qq7tFNRO(nEFPOcQF_`1g4@1/I?mH3;[FmOJp!8@l?&d#!tqC1U.&Rs6Q/GE(OXY-,MQ/tO\h[2
%MQ\/!V2SU1)f&'_9DVMI$M>UtnHPh7o1@fX78kLL[AZUW=Y*^Xk<#tOW2#0q>/)CM.FrX&TSO]Y&_f(O,d!cf7"&JFpM+LJl[@Jp
%>3QW3.mbCPYU?-pJ8EX&MJC;-L[\d5gN<Bb;@a3$=Y(Kr'`%T``R9Pi^N<kg1cpAsHm"KId.>63W/menlr%5C1aAEX)]mG7`V6VL
%,G\$,o7/$!`^9n]A4\9RKmYf2,bGFHH4N8T;+ZedZ@s\'g/bK]54*l0a_(K>Yu%L*:\XH"f9Uo>8tCs:+loN3AnWlbB=EAkH<HbW
%I!^GOn:E\WZ0SNC`01-kFf^2F/,h_i2!s_1,_)E"$Ql4OD?UgAG6#S?6'@>q.#]I;F;(/$d6qJk\LAUlYbM4(daD0M&q/Ps(-k3I
%2dI[XSLg)X:[GK/,qZFK]\Q8FXi+!;!rQSEG5!DN<d)?42bPH,oFskJfo8^&+L+`JhamM-WZ'755GR4"\.:2#oe$7f9AG>.U$.gg
%DKVZ_*gM\5hH3<rR%6faZGUXgrM(.`Z`]LRJ,rnV<c\#Phfok$G9k+H_I@f`LgipZ-i-(L#pc\/YRc6XVXXZoP02p8_*_+&QoAG!
%#q)MrOgL:XDJioT&q76J2+`,V9>I1l=^ZTb3@RN#VNMsu9,:V\fdufk2O;k\bA*`Xk="PVJL!u?ZisGe[!%oh0E-('HaBa)TH5\8
%aK;2C<$_up*R:0T26d[m=/A!jIJ4j]M0nt?$Mf#MN:f74IYUEVMIT6F!TT<<i_prb,DDVu^][5/?*+8@RD`sj,)itk;5C<HB$$k6
%aX2B&1]%4SAa8l4gSg@M"i[3"SnbrUJ?d=9j/@ul3a&TYY>LJ']qeKT+>uY<eCJLn&t]4!AkNIX=R*>[rOM8HWg6JG/!sXXFuYf$
%6ONee]klW3IYYc8XVoi#HQGh[>g/\tOi@EAd6=#FYe,GnP3V?mff"o^>RN:7,/V#Y@$,95+VEdeQ6_H?2VHg'SZHIsCm"%t37b\Q
%FpD!K#nq8/ZWfGIA(`+1qq=8)&m2RaJonFi'E@cCAp&W3EGpTM:,eUAoi^IJWE>ARGW:="6%oKK,8OW&9+0]!==d#NEqV'83sPZf
%MkuJZZTY-pZ1Q#e)/4(OP'#a!Gok^',[D0FoLE,F98q8mK\ds,oJD[g/p^1kO!Iq[`CD>i8%%\T-9I#;^B=+=4"4<@nPR`'$?.SW
%8t$6mJ]*]`WtcFl,aNkp;tpIkc=;+n+>fR,ThXko]#D^kk+eakhND/7:ZJeeZD,[9l.F+b&jS#8JSaES]qMQj?%/l8@hWF6_puLm
%ac:(q_m0<+mj4SVN)E+$#D]/)aJE.Q#4"fVH'(hnfI:F&n;kjV,][snOA89@`83>5N_c"a%=.A4Z>S&KU1@o?=;OX-d]BJQ:H`Cs
%Hc`+o!%DVfgX-1&aXhaq#I1XA]koR`5V1#DCtp+?$`qj9mQhgHDXBbWRukmQ^73I=UraRe?^$,$m^Jr[WbrQ+[p<"9RhSPt_\+Ic
%ljZ]j]c8'5>qe@Be[mcSK5mPdIgh>sG$qHTJ+L3L0&?#5<+e3e*7?&RM\.D0rfJR&)1+:j,S*UHI`_g.fcaZFappS_.9Bf_+XJt]
%g^[r%j09eX4nb\HFNPYddXh9n7-+KLUhM(58M""aR(42nV,Qme%Iel*B(6f05ocg&BG.T-i-i?4[oF.701jet3irG&UHDK#DT!u\
%J8t:rX^^\N'sHdHo\-[h^7f`oTlWF`XIo$&qH<U_),&mi/:$^nE*03%4BYZA;\mh,Ioke7+Q,Jq+Afb_9a]8ZV2X4qOh'#fW`XG0
%THAZFP+9Q%#^E[Lo%\A=KcYT(Rucc,#=p/["0+31!ib6']MB/57_JA/:L_F5G$QEnJ]ZbW`WoAtkTmFoRi<3n\,Q26F<9LLP+>[W
%5NWgXBhC3%gIdaaEqWLlD#W[Vk6$3@/b[oIVlHEOH^CjgW";a6r@pKB&rV[)L=8,F==,iXG7;6#h*q1T8jA[CPK3=jJ8)?9beUU_
%!"rVGHZh]D@\,L<?s9Q8%UjDOi5@-g%p53"cK[C#i"=MOYmkEVaG1T"d*5B#6fKO+]0fJ9Rg"aA;sNc[QKSBBf-DD'OZKbjL/i>h
%V(:a=[7J22'_rPNLt-Kl<(?UoKEX?2`pV8S5g.V8Ou3_-W$C\10t!)*dH-lXd6R\%<qPp:K^9`j,Aif=Rd*cTmRXY+ctu0BRNTXF
%1?lYPA9)(L,T!Lip#/cr'XP8'.VT6R$Qta\"6YhS&8UairEgCP(U!:"/BHkL9nOtn'Uq<Xi&0M0Nn<!?7C_/.K5T`6e.HO[pr'P3
%mMJe!.<HPiP?@V(:,[F93#($-Wm6tN2$?p:l?/k[>eBiX*/I!7MuXA\;tW73[%E?Ae3jb0JC(379UG_n\oZ?#Is%RH%+MDqmAF\X
%8D2=%4:<^Pa40Q2kiPqQBdKo/BR0NW45EdZL*`k74Ioj%d&rQrh)g&"55(=sp?QCAah;3+738%`IAIpMn89X^TWl^[^jh6Y\eRW:
%U/K<ta';$I'\:_hcb!(Vkg+a.c-.a(IoOD`^]49DL%X%^s.Q[rn(.CmKf*j,e-KJW&oVh/oO.fbN6V-05E]DX(>n1uK;iCTf7FV^
%fucl/nmMq$7L-bB%W7Z0aC]V."N2Qrd9"2RQG]PEOQ-;hp*OM)jL2MY#i6Qh"C.S(-G.\F7/!sf4+NiLT!`8X!?V7ce58_n5e,Jj
%_89;^@:OYadD+oK^&TuA,3/8DIWM\7DPQ5QjXZsB7iTmLD&`Lg"MBnibWm@hBO+h#8^`EUQ,;ttRs\9$KLQc9UjU<=p!";_o%=[q
%oe6g1_U3F6IqUR(ef!tL[r,H*hNK9ToeJB6rRrWE/L6:;$p^<0ObK:,%J%RAmp^PaN4Sf:>`^M?CmN]s)4jnJC,&0pT4Z'9AB?LD
%,[a30cN`!@9q9%\B)*fWnuJi<84o3;10b3lqCKq%HM!Y-1);+%,m+hUH$q&s:i!cZ>mZIa.4gc+D1t$EES4D4)iKI2*A"<1<"2J/
%n%6'$1$86'ZT56`c`\[j90D<N=h7?BJ[RT>n:<mrg3E'W>Yc8c7>'oG7%;5lDUh4GnfP='&i2[-0?rq0W+fGH^B9"[`HeR',`Kd^
%n`h#aN9UDpoF<`J^':SVNa4kb`iQHea"sa;-dM'iLON&B6TO`?@D+C3/Nr7&bY>"+A-eQ^b-Lrj6j1]Q1K0#%m).+\7*;g65#YdO
%,2\e%Q,Uq/;dY`ff`QF*e7LnZbt[j>gWD!qd5RTuUhjVDqRl1B_I0-$S[/j3r<rGcMCn.`$L.c5E*?r%+[/U-hHte1-_M"V@PLEE
%BH7T>%B7hp8\.ij3"rIZ8U%o_GbWoE[@:U$Gc4$6?,auO)p<IIjFHqq@DA578cg(#Y7m[%`7-C`$Z?Z2mn.Q56QD#d.GJGdQ<nKK
%YZ`B&oD0tQrB@ku1Ijm(he_cE5(b@]$PaXC;\*\.l>>AH.j"@da`F!c*?Bj=-j4`+(K_a04<)K->[\7ZB(6=hT5S!sQj7h9:#PtZ
%6*MUTX;GR1Zd"t%`+DZRE&e\?Ma-G;K$'Kl3#.B.2o`^;YWOs/>Kf_fL1`8CLQ1Q:'FQa#$r,mbF_LgOJi;E#'cj7l+K)Ot89<ZB
%_4;'A4d.Y6FAFRVCFGIAJ9iA%:H#RVB43ouj8'rg]l5JI.Gob!p&+gc7[1K_AgMeP3@=EZR5sP/:qZ2U$4fGmUX./7[%?A7U!b.^
%rIq(D^P_R7-FKN%8#s"^#sg"\<fK9a9>h"GMSgsaBOEQbhqQX5IXP<1A#;=J=4>VE_n0*J0ig7WhQ97S*>eMCks>=\m'aMk6XiM*
%F*3\-AYcpsJU?\GFE]e*5c0:dlBn]d!TgciEmW*LmIYFDajBEGW$ie<CVWo8"PJec0!cu')1-`6H'NrO^;m>ne=VdIOcGHD)GE%[
%TPQr,#YZ_&F8C:L=9Ue?V@TM7DhlL"MS/e-VN($9M75L^VaD84,<F@XN(AZfAVE0CbR"_)K,"!Uo`+`K8%>K(a'*Qt:"MokDqQIT
%_ET7t34,Y0Vp-+BH+%dSC'C^fB]Rb"'n]OsUNB+$:_1U3Va@If3#HbfL>lYHgs2%O8LM+jW2@ADf$C]@V;@1dfR?qsBfti.ecJQQ
%9l7L.jP6IT7l-.'>X\)n0EXoN9u`17E-&-K&rY3I_Ij="1P0X>LI:24X\1ipB*k.QJR;(HE)dqeiaW?$)PC8%FBE?m-rZI`M[#&*
%&C-b1)Da*rFo2luI?n<ZiCcNheRQOn-q0n2p?P)6.;iE7OROL%^m(,F1s&]EZ81a[dQfI[^6WQ/JEgRu(SMc#LH-H#nsp6E'SJ'L
%js&<.qbtZgI5eS$#:q7T%p<*#;g&_9E@@0IFXqje9>V7/coZ8K#+-95">Gus=>P'tIb:.+FksqNfJ#?R9Beh7$lqhBUDQG5"s5@R
%"VELe#iXP5&.X!,5IV4Ll<^uf[X8^+CY_TRd0m<Db=65=`I]9nmoOIT*`k(b!nU.Tq\7sN'iIGu#EsnZ/V`5In9Q<tkODl-08c9`
%F*[#ReJ,R>FH`T0\@8Ds8G[4;gC*f!UYBC+,`Dc[m`i!F539Vr8=r=*TlSO80nTR0Ues$31Hl:bD!Eod1K_)i_Qk!gYq6u-JkbQ-
%&RD&HUkd*98bs@t#FBNBJ2\Z/ZJ)I!N/6aTKj"Olb\ScN!D"[C$gmQH5`=1,]F`a-Xtg[kj(sYMEDC/3HE*`..%bX6X7aNX'qY+Y
%V_AQ=lT_a8F2$GR8U,<YdH=29)Q[]jmC8plYs!7eC7*.pLH<:O8K>CJ"tTr5IBsGdUu5u*$&g$3Q=<f"d2q'E6gMSI7bGj;YRuW6
%GB<?r=<`s-jZkL`_O_Mro%DKqj2Vrc_,<^'*;!bi3=BPh?9e[t%FGb@_h+Qn5&O46N1XB[3CjQ1dQ%Wdg^KLmX"@\20lU@23?6b^
%EAP=;*@qMCg-Rsp$[l&6r1fi-r94B<0IVt1dR@,3Om<c8_PlMgoB:Ehep]\e-H=RNU8!sN.]p">[3f!d9"dO[UTJ\cp5Nt']i-qm
%JNhd/r)g7ZX`a9VfK&ZXbu+-;NMjTV"sP%'UK6q(A_Zi!9CLD%3t3rrn[\/&LesLED.h>j]'YOr(M)E;faG/t]/D%Po\.dk3H?YE
%+Q:J5*dPbgdO,MdhV]TheT6&WC&/PgipTJ2@hBou<ROEr4M_X<`E@GCMG2g;`E6*oRLJU>B)"jQ7#W,--cLZnpq%]u\cEa$M3sl/
%iF#NSF\D&IhR.P0%Uo1W/q&pJe:'pqc<s#hVm1!Ge.?V]g`W%Ul\nguD\kU!Y<k(KGdAtP98R>_UKu*RC/*ajia1@uSLtqbqkVgU
%/h\^_>IKO-.A+\Jh-`VG'.bPR20JEEJ8%Z>l\?*NH'l2[@=gf>QCC4W,,JL:X/NJR[@:on6Uiip$^LoXC(V>BJQZc`1dfrja?6hK
%)_@7LCoA=i)-gaX4).AM]BC<d*A$!O6#r-%4bErI*,LhbZUBNZgqVbG0k;m\D%T=ge.'HO6/b/./radS]W0ahp6TSXo<B!1?cRL8
%9-]5%F#*!S\nR#@I1Y&\C+Qq)!Q:9.qJKs##rkiC5/jfm(dHo\FSHIDK=0'\9X$Y7K3B)q7s5A12RJ(4M8rb0bNbr?JAINX7GOPp
%\i7\+S#4$ml%^;\)EQLY#L:/YYkh)`@&^B%QN*)B`pc;g(_o;WT)DbTV)RlSQGMk:Q%Ce:2Ya2SNI)!_0SMr0O'K@Y>@L\UmuUJk
%;El!:X'XuP7c[\>[Q1#'@9$'dnbMIl&O50tmJ6n#^RR5#hFGS]MoEeq@!G.!\;r1/?s)hb@f_s<d4$gr?.cgn$PkWWL3&K67.M:P
%_9uFHDIuAUNl+]:emL$S&`4"W7P)U#)q7aHq.*^P#<*5.m3!L0\l1H3El-SBI6Z?\+^`2"OHFBod1hpVe?0DLTNllXH,gT"F#]P*
%dJ-MbpuV'e#*DHb0fU$HPif?>c4@S5dW\XIrIESBJj!V8chG>0aF_Y*@RanL3d3Z!M2X;/W+T;D)I&_h/?m9_B0!uN^!$^A5$N!M
%r5D\V6o3#?#18$>B%b5EEHVL;bCcG,j%1<Fd,6u]Eo%h2ICJ9:qGdY6GG3cS9#r=2g+8/_1rdkKDg[3!WRcQ^[],U_.@=fV$;M%+
%CX)-IG3?K2Y:i8767[iHd4h'#)&Mq=iCF0<"bt7Iipcl%L2fpWoLD9>m^$%1=cgS/aGQi(VYuL_BY$LnAFhI[PisN`3DI>t/='nn
%ABbB&bu$0X_fbZtZ*_dr<W6,j?6An>H(GuN@M!_:MCknfoYjiZ^ZW;5hF-Sef&N@GeRu*=b[g9XQ`!u8)q?3.>ma[kD3d2]nsn!A
%nBug*FL2%5+G6M4oM(o\15k/=LH@[8da?Zp5&7).XJHYaO(`)Y1R9Z96jnmVP&)`l7I.?`/>&^!L_@R@^-ufQ%cSK81Y4N[]P)a.
%ZQX,F$7.Ja@#ga(SI3R%bg3A2s.-(`(6@C&,3bQp.LK<r>BOL(q1G`7:6dFs8aD*n1L_t4Z+cUIF14A*2`gP:=hhFiXIBFBNKDW&
%_PF!:_6Q%-]thr2Q&s14OZ;&EM/nu^#619;(V"GpD&#)AZeu'hjTRi(#c9?6on"ICN2Vc&374TlBf7o>U5dDkjL#O7/W@djlX1Or
%^P'ET.Rn3rp/i1W3?h.QlHhIn0$a)$#/7o7V'jRKNJqPuW\%pRRe45#0WabjZiX!i5!@!P4>Dn>_-P=mC`t/!Z(/ck6Q(Z?8$s/L
%#L<!9N4iHgUH.WQ=R\3nPI6'B/9(2R(N:CJ4J-,.g]hOm[.WQ9p.<0<2Wj7['O_F.U#V7YM1C;3kVV@7<k;r3Jse8#>/IrKkgjYs
%.%$`6]0R0K1F6%=L_fAJV^Uk??Z\o54E_[+d6<jZL.,qN*E5;<-#E3V'b55TAdWjIj_H\q4jm<:Kjj,-VU6hKPGTBa2.P+cgZ8Gm
%Ab_W3:E`W#K(C@PD:11[NdjhRC^[LEp!)+qn\1rjY?he.'BUhIbq_0JFANSF$bG9GkF%b\Mp9$o_c88,J[K1hD;GAYG1Qs,d9.-e
%YldP$I_M@Bfa(65U>=s/FHfdW#?NU>XuM5+\EN953_:M9*\*c;Ou/WA`5u,C7T5l/?KQ6&>uGc/dU'`q?^et^0"=fC_bC^[]4tTB
%KQt,%^3$";<TWt1o-cPA;F5E,-SL]@=ABf,1oIjL/2+>?l'Ym>_X&V>6l3^L*BQ'Z@@4RjBhIb\B2;/A5)ahlX4?$nVA7ac\F=2N
%Q]R!(@UF>\q)#3EFbQVedgC,&_<]QRRL+&-VH-AIr%ou+OVKgYRgOkYX8mSu9&["+n1j.*_?K8OCQN/&qQYGE:GTcd3nfof%O?RA
%AlmkHJZ`Gb#&NEekPq'l4$#\%3(XCsiY[E%'l#Y:K<B]mOr,,l6MC`-28'S/RBhKk?I2$))$=E*%,EVVAGI(1[#!IiLJ1'oL1*B&
%A2S*Ve;-e8@ONm7U8n\Gb8*I-FXf*t?=i#>*3;RL>Uq_U`TYsfl</bYa?!=ZcJo$fB)a(Y9_<RrL.e/s8hG&Rk3@]FBtJdiQKsU<
%fR-0W;YHQg8sF3UP_n>*&UPqXN,50jk.(-a'`I:1@h=3\MX*I;,:Rh$,@l!F+l=:qF%[6Q\)kA=@+an<M6?&['Q>AJrE,2:^ceL7
%K5X:<I3YPXGXa'):n/s0;(QL+_d+V0^.d#8=n_2*lQTNp1rCd(kSAQ6VKQr4doqX"hIOdN:4b7?$[S5l@&/S?`Q]fSlBQ&i^b+X/
%S[lXf?$D+7.C'@GT/BQ<V_$`Db@c_38)hG[qqjV<nmCE9h4_T2s0qFC07Wsi]_lndrgnAn6>:')4N'm$<bu;1I&":]hhZ6I1NYK3
%o-!H4nUb]j)8Y2ao"l\.f:XY<S7Os!jGl@-kb!P:>M6[KeVda9`XZ\FSnns[@\V^DX32A2]L(Wd',8Wq'g*!2</It=&b^q:Ean.f
%./]eGOYlECR!tGWDR6VG"l>ZbVA8R'9>G.q!,b`)e1D.g:d-se#_n$KE)is^i^4fP0P1TJV%eeRal-\EbYT!/f#kfL\7VncM[NrD
%KMlW06C(RZmS^tOe`&7k)%#9VZj)iG?dTr-*O;p)ZJYu-psM"q(<MYEnKAJi=?_)JmQ_F'dgOKX8&=bT(Cq+a,"mBtU(FI6jlL"g
%mXe:T)tRn-YVY#-=2mb@MSVWdG$E\C9O2Io`#[_-Y+Lu;`IVPK93c/AOG.V3Q`%BOHuY^d5q4Vih)60[VrMZ!dc*2Q4OKY<o,&&_
%qV)Qj@lk?*JnR-5:7$da)Q%!o@-I-O='94(PueJt_@E]:hD(,@4Q*RK-%A+-kqFcLd>#-^BIdUX)h(0j.T4/%[RJV'oaGX<i`HcF
%d8-9*)+QT@a[cGZHO^nr$bL,-<E(a=B?YZ/[<h!cKl!\bc?rY!fHYP*Re2DnmDI/*>fr79f.\jbe#D#p<jLLr'k!DqWZ:gjQ-:L'
%.f@ZC'6pL7qQS5:2!]lP5(`l1RsZ%_h*S#,H#QbHRM&kB&u5M\.?i5=M\Mt,=P,7!U``W9"ak1PKTLee<.0s(U#l\O>Ne[f.20?X
%:si8o!==O,.8<Hq_n:@d_Ip(pk2eCB#sWLT$UG&d)n'$?K"oD?]dki.]X+q%*?:9$$'I6WJ<)KLdd+(D>q%p_j&WnND<ArEh@Cgj
%K4uLkku#$%?EVlPb_t&g=umSa"_4p\$^]")7:)\`XK%'*LeS#%/aq6B%eSq=?<Ptt$c)UDCFoVs@#L0t?!K\W6X#WR?E,1oLDOR=
%(mKDVOUO*g"snHTV&b@;kRNEIbRucNq&d$fFXEQ%fnu6JqUH`+Pr(H]oNn=_A^ZsWU+abgM29anbs3A9Lu_WKHEn]Z'+/<l?2R6)
%FX;#^K:*9];7*l>1s2^LP:*g]@\lEB4VEB3ZjTA9?"_T?G,Ya284dM[bGAR27/M:[<+Lk>73$6OkZq:'PL$$UX$Weua4@]UD"s/m
%A=%Y-mr]HX1,l50XeXQ[<#lmYp>B[7kqHYU)*t6IG`[al=9q/Vc2[%=0a?B$b"URX3YFN<DY/?,3s"/8ln6D>7N>LU/KE#e*Uj!0
%9k:^X5eFRBS.J91k4B'0%`m9]SKZ%Op8O'oq&ZYM-o]BqYr^BgY`$?!Z-eChb*:0,F@@3JS8nm)m<pT32Q9QAjJKf?962KqK]"$^
%I8gam2JS]jdB4;]Q%b8uDD!mqZBRpl%gs>]@?epg*ZT8(/%AfW)]!U*2pRT)Z7]-3Ht^Fa8%INU<[jtf^Vk8h.g<j'Tgbl`?o)d>
%'qYgZ_.M>")jHkdEP+*'(gpaF.e0D('mr1q/HV&0CUC(EA71`Np`>u'"1rri[d=FE`0S)[:K,Pe^uC&D&.C>@6eI2`,BTF9^m;q6
%r%39pIXmDR"*6F_%b/lK57g&dkXQ!n;p#=VBj<JYfe=[GH9];_p,'l9VZWaQJjdJYc)fj#+GS&./re?aTfUst&Of,$53pVBK(\)G
%m_#,.,:P\,66M]6KuGKV<0IMb+#I(*BlqmkBF:-Qp(!5m/A[APB`l5AS>0_P1*SlO^U3F_N6I!P3o]85\SY\]mN'^@o/)c-9tHZE
%6d_9P!**@JU(NM^.%b'*FNOVLZB:-db(.t8NHI'Aq$7.+qP3RHLIL'Y8E3@f7F^Hj#Wmoki[o#q\9F1Gc@SqtHBnLg\C,nFkUmWs
%C!'<LGj'jR#XJjqok[[_GOtY^M"W<P<-OfDjCpXs5T"-8Ls#o6-Fe@8ktY\sj.9#Q6o?UXcrju_f$f9P'4/!!6YCeZBt%1rPK'iZ
%bBIaVY!>SdFtFJV+WQD5PXA;)%VZDbd2Ef@GrQ_;&VEA%X:9#'mbC/i=9jsqRGF('58ol8A9$Fe8=T1Jja\V9M]<pL/T3smF4TdE
%`DTmiOl.Ban6+[!cpBCF/'oaUkWgg!_I2psO$^-<SF!_+A,L`Pk6f&'bS@PMjL(E@i2tf*<GUiE%I9NJP=6Ah%IRVVG;HOc%/83h
%SB@+3TGJn!ObAXD?EU1!cjQ6j55VNmTGL:](o/1*O%!F?*N5#FE#<HPq--A&YF_]m-?W%:o=nf9QGgbLi<QSM:9^ONS_u&;JI#A`
%@f?h?J2'_hPS\+K/CCK9FC+S?9:<T6"sgG#S;X'`kcb0l]dP*sMk7o'QjHsOa9LMh<Q[!Keq#,fQuD4"R]/=271I9IF+Y`49+1Ts
%iD!pBO++;I/<Rl8Md0+TWG:o)]ekS(G/q6lqUc60UH4"VS!QcF[p<S'mLrX`'U9B:BKVjNJ7J8Qdd<TfNc.I>.&Ut_nVL]`3B%U(
%SS_l@8qTuCc,G_>&`7VtP[DhSeo(8VUR,XT#Ij]&b.0]hi%7%Se($XJcf-[KmYGO%fY?g\">t6REOn&[Uh%\4h-UQbiPh`LZGA[k
%$'e+Hn7T6?mUi9gZBuFm9J>O^/4`Qa]P\4Y@k+Uk)%%[RWD[JV3=A_2Ysu#U#.DSbq1^dU:1L90\.2L>SIA/@[&M)\+;$/]Mj;PL
%i7b&3(u.NiE*u-oPsSutOtCR*Ih.u)%.Z_Fd<r1:$aqg:2c#V6-WU'3O'=U(o0oTGL,<,_8d<pWCVp1jV%SIO1BCV0TZe:To)KJr
%EVYtuZR=Ck(c1]ZBe:`C&1)tAgb%of9??utCp-96Gfppn(C.ijq,.]9JHaiS_AFb1j$7?6)q:XFs)2s!=>I]Q(B;2FE+lp6&\3_X
%bY=7.8HcL>gk:Oo!\5%MJt[-YZEY-%'"=GJH$S]l*V+e,1=@HF=f"N\2;ble<*MpMDi0(ITL$*rMIg`_\gu7;dqZVB9!<ofbOQ'r
%!OKAN8%,bFR@eUW`kk=<D@.qc*&+G$8CN73Ysi!5Rb;h73:T^9]O5Qh[t@IaW=o55L]s(q'#BYHZaTDn)Ao'I@tGN]^dXfBY9cCe
%I[k'O&M/P*2ajAU+NoIM9rQdDc_lDk@&^+$DJVa%iV5]+]Z<eeA6\$s@hr!a*bDnjftO%[]Sh"XTj?S$CC86Chob_%dFF5[\!5m@
%F\h*C-!M2:R:jf,R_rXdDl5`JVl\^_R>rW,aN\pU]?]p1CGS?86!iV%f"_Ze=C#`1(/!-O=jK/FK:Y(o6+i!_F]C=G)sY5eLpf/(
%#I]]Zb5k#\km8fp&.'*R2_8^<n^<mM?Bd+)F7i80W:&Kbg;liQ>gNLX0IjfS4SjefRFaCs5$b!m,>TPSZD*nOD0:Y*/&>:*iLq0k
%CU>c6`d;R"a7hbEj]W_6.1d5gc$*YP23D%bn1JW@)h"3f'1gion1HJZA9eh&ap1EZc%7KW+<&.L(c,s_@jG,diN8U6GV.aF+31ks
%Onl$'\ChS<r5I")c,(g6>hSU!Zg9hnCh;5F!\\SY1&^u,EQEJJe/_2in)gpW>pY#9I>TW?a$T-UWJiCmW\_Ym=kBmkI^=O;mc+OF
%]Y*$4%c,SLPT9D\1mb4TGo+#B0(g1PU=#`40#P;7OA.'2YnNM#I(/kX%F.`HUnKJ!LA@U`C1ufq:Hgmr/?DVup7XLA6^'&^7+4c9
%"Gp_4O>734bW1PoSAh8IBrmB5XR+Wcnh,:%=PdVLWm=;]4Nkebc+]h9MNP&N1^-F<_D\hhh,]?lr0jg8UFZ'?fWTW?/!OFI8/g]3
%q3ec8rd)&.jCFEhYmQed*UWFRgt+<$7Nu$i7GhTP1E2P)7pDDN2b]o&P2\/IFb-qX@4)H/d*bKGpc$-b"Ku?aEO5u%`4>BR6F7M*
%(A<`JBYgG/B$6QT@AD2[c(aEsTO>u<XE9F,!At(+;&3BtO1)i^^)raW>3>?9O/_N-.#DuT92gZa)m7h67rX_DDl,G]KgIDRjP7^O
%>OtTY#usSDcMQZT%DJ6dD,b]Ke!PNT>5$1`gDA<,bR4gOTsW45H-mBt(X!JXcos]lPFJJ;Rg"jYBM5$=Lmu`+'Qpmo+:]rp9m6*3
%#M(4RM+r\#n7QLj/p9YK@boL:a@(B+.6=tP'Q"$q;-]#^OWVH)#!9naI$P3I'@sb#..+Qj>Z\GOrJ2)&KY''t%7,-UQATj.PuC<6
%ke3WTrLgI%]L?I7(5Ckt\JIioolH'HH?K\@Q$cbPW"CTN)%4+Tdf-CnBUr6gn:FYcV[k6HSha8t;m6XZ-5p:%$`os`?oEN>VP[\+
%0oidLVQC9pJMB`oARcn;_NVCe^a%QEC@GBIKPE!+d%O;j'kt0pAd)*La^^,Cm<#4MN$2N3::t.&Xm+@bf4_?4\KG)lX@8O+=..U@
%&R_t'6P#!RB'4a8Am@9dqM[(aUDSLG<iFi7<u-ML>)6BrA_]E8aB,YX:V;'tK5_ncB+ZGUGepD\PJ]t2`Y1_F1kgs@1u2=$!p^[u
%iC!otCu,Z@Tp)??KY,2d=BOlJ()<QB4QR=6k_RNhWe`7EQmao"FAFiSJuSBWOVLPW&;pQqe8[ggP[gr[7N7eo\Tt:4r<Dk@X`n3`
%*%Kd0RR,>,eb!"&[g.`')o]AQc,"$5R^n6Q\*(<[:a!tr,)&WHf8s\nXDu&!lj(pAB.mu1kXq1Dbd:D$1b_Z&6tTrM/37&>pU!C?
%'JiH0RXjmAC=Ph7b8O')q)$$+_U,2p$6,L[okA8D,%d:FoRe\L>[d1a:7(n#Ni-eVgf%JTN4Ht_\?BqHq=FI#9#E(IGd4I\(<+p0
%*'i++;CC/M!2cH?q[FA*>,Fr1`)$_AU[Y4A.q"fD5oXRc`D=RA,)iUnQ6&^$P@Abp8Kga!`6'5UFL=O5KnF"$p>E2r-F/I%[%IY0
%mnp1M#!uj`aO%prFJ4sHs)RTA=Z%pO%V5tNFK5J<m-^%bYcs%_N2RW=^b/_VSU**XED2Qaffp\&!dVqS7U[RFe;C,n0[?[;o9Zai
%4""D^/AQLG`&G!e\.mDY'[Jn%Lk\IKZmirQ1aFD^kIDAk$D<:&fj04j\-ne\*Ji(?7s[,&V\+e3WL)'[\ZEp/MS<K@[<^"5>q'k]
%0RFq8q(Uuc4^.WDb[FmLeTg6<clRR>2eeP"#3^;<Yh4qGXBa#;+YT%5i2.gPC]9DQ=u!$kHEs*%0Wh<e:KfN>C1fJn;RCM<9[B.k
%f46n+0kX4Sj"55MG2AKqR252\:>><R9tMZf)F(q2Og]e#?+t$>!6rATrU579-ue1P559_8rqc:pYfgs7rWTq3F^b7jG0pZenZYY1
%;N4)4/$(hs.#EkT2t/m@'uaY(7#*.\J3TNH8TSr,G(b.h:'e`D6]];["EG7&89H,JB%Xp=arX]t5>&f(j5&b.kr_9DOl8cAV\M*3
%23W?3(LjP7jPKD'31Hc2q#%)#lP=:F5N,j'c1i7AcNY^&h4GqmTlTarqVVDe8t$00M^`$U<61bP\,ug&$58Zc'-b9o`,ogS62N-L
%YrCqZ'pd@_"Gi![*cBsn#8(Sf%pOU]'*;hZN&\5FdigTC,gK%G1e3d8q?sDVkX3?t[8<T.g0[8anKV0,BB2+t7)mPro[#!g#_^mH
%$AQXtNeLb&b<M$"4R@Ys.AG%m/3oe9?`t][G*RY8o9=*#a\_lO1iJ*#&s[XjRpb_fXF&Zc[P0<:?c`3:1`(nmYRU.@;m?M\BH2/j
%jI<SsO__m@U>g0eO`qt!Z]GONod)lL7L)#'Nd)r@Y2(a>(b24BVXl^S[R;CE*o=:u5J.fEo>,=pNg%brX(q;;-:L.P1YN\ci`OET
%A?9i(\jrm0A]g_!Qnc0kQo"N*<^%%b)1m.3&:3kA+j<Zk.<9,u1J,tp7VXCRB9=6^9icfYMWf#G'U3<DS6:p6j:AKtCL.Dt=`]XQ
%E0ma7ea-)b.h<Q;i\$)C1A*@',)N*!6Bi:*O\!DO`U48'Oil+#=nkH1&TTs`8##Tf-.(9U8G^OFat`R@,"Y+CjX@d;`5Y#'g*K0.
%BQ)TN0hRP7?dK.oqL%e'_@(i-'\RVB(LHa,T=>tR0r->,q-rUGFU,OW`2#lV-"Qf!-$LB*VBPU*e?^R=Y&.O%,Tb?X9A(:<T9;(q
%l.5N4U5<L=c(hKnM=;S;j_``H/*fMih@L98=I1Q^=rH5=q^f.u@<<nQ\:YR_-AXlR<_,Q)L&,Ep[$*k"df;c>:/MZ,%:f[<KLlta
%O<\rXHLU#,E[9^M@)8NNZ=pgaKKFuWSBAF$G>MhE"G@4"OX"P:(9&rMOb6cD"'?-/=EQB13/e:8W"\r[CZK+[!>j.G3Mi(<WW><s
%-Vbk3(*A\Fb)tuM@RsUn7BW.4C6GFogYl"Cjn-bQ^<*H%jO**ei8It)i.P,Nmuk7W\>jgT_A1n*]+@]+`>+e=j@<a[.;\/38RgAR
%6CH#kU')a>hDsfkCNuM2j?p?!&>sA^-4)AtNf#_&VEp"hB.0B1Mdo?b\u)<rVeCEBP(]"c-.%n_2n7.dp2!e`>^\4Re1R/<M0eaZ
%ihlSsnf;No:HBLfFs%@_6Sl=D6@_(cTJNYR2tFcp]f.Lu68.66er4<DiX`RU/bG3]F?L+"OgXKoL3^mo3"g7C=U`.f,DaB02EkJK
%dNXI!F_&qp0tCNb,AS@f7M$kIV)CpN,g!,F3?tlC8J[:(%@3/5&V\KNZt+S'33P0g94jm<$J80.SAdD=MZ"g4c"<'+9G2Gb6!P:l
%.AN>pP,X:?j&;FJArrpk1m+f.;B4S9m^\uI[f=u^F#E7<9_1*i(c5\=d54rk!CdDZ#'p#^CYKH2QY3%sa9t7Pl8$*K">PH<$#hh4
%;>A_iCFtB?,`W:DY^h^/e$0KC3[VYe/R8uB-&-]nZ4R].8!W[m@jJ;M6[C8;2W7WE[q).r6F[WAhVcOhq26;#FNb,Bei@0Gd#2jd
%"Cq/#T7s>O`LYTc'[)sND[9i)S0X`D'!`EE\?$#`hYg^P7cU%2i4'#_ON5MVi-Qd,Eh:QZO[,g-kf(ZO)0[3Jcn[93m;4pP=2kQM
%nj;,CCKBPnkVe_bI3B!X2*(!.,Y$0f'9H`*)oR#:o<Y,#OR.bpW0[B)4B1i()\E)N0:_fRN.ft#XE,t0;WaopLIo;_oeW'WC]u1X
%]#c-LT^7ZoO@<K5\4-:.Bf#\H]Nut5(O-$Ah4J;$?GOc8(BgX"!i]mU>A\D,'4,ss6fu^4*S<o@!Ft0f%.e$UG8(c"L4%^5G]mt^
%/b/DfeeW2dmZi-J9>#*!H6X-`fU34.Ac\^`R40_I5pY[scaog0_QjC?DQomT!o/s:?HRNC@5fN2]!C.IK9?oMl@j3pi1roa'KB`F
%.<+LG)!ZhOJ!M!Zl30t+$>?CTIXs/qH'2+nC6W%(:._tJ1(;.e78m.sdJub@X$_+b=rOQl@,2N5q1^DqLCD8YIl)kB/m:2tB:t?;
%FLO_>!+eg3`S1242pfaug)bP`H<9%KJR5k$C'7/q./\@c79<]UqH+fef%P@t3;Z>#`t&!e_XZS3!s#`oYh8FIK"&96glt+Tnus#F
%Ta'(]g&`@(!Fom#BR*R*6[8Q=+0_!,YN[AZ@)I?77l^^).,+o/O;oBaSmZPs3Ybp0[6aA7OX+6'Or[XMr*TO:U8X>LBk&>eYu1I]
%,W'(";p#.h8pJ\mQ,:9@0!uJ)6C3M`93L>0?]/*c)WjKMOs8,!PcPhm,%ePP4B"N!'gYt8K$ek[=,A'8;]1:B5?FC9T-4((\;%HQ
%%d(:ie'*[<)t.>dRqg]0PafoS<h$"NY!lKM>NS@Oko9bn^;6X:^:Or7D99W\Su*5s[_6\)F#D]bj.gkge$7S"c3-M8mme-)A>ZV!
%"<^h#05D\Y$nZ-]Ym/tG"V5S56!jI3]oX%N'-u^NMnE#k_SAAO7"HYg1"i3'fbSZ0@sJJ,pD)DmYmi6]Z84/d5lmgh@.=cm0h?>t
%.1n+.F8mFUWq6=IQWT[4XbM,;')9<qF@C$q_TkD"PTnBu=,2*qXA9HMo000R%c+dF2MThPO`,Op[]"o,LLR;_B22$*CIjh#>XO#D
%'Ai7#q1r0g3[YT!Rtkhg'":o:b>VP>8qG&K0,,TSqth?)6McO/IF1kE2<g]OClSQaA<!rn$\#'&rT#+W0M6b3K,_tl5sXdk4-TaJ
%"Mt]mWYud+)\h67RbftsK&t+N>NDSPU9>R%"iDSLSOK\Xq$_IWW>E^F*XN`*l:!S1d0RE^lVEjakOn3@\O!Z8pc))@a"D%7iVOJW
%Koh9n0%(!"Ooc`Oi(46^D!u@W5W#!T1'nlBY\d8"(#ip[5`2!Mp[[.gXrFT2WfDGRCDBjZ(^_gFp!MnQ.+fY[`o7gb2Y#@fg;&jX
%_V/N*Q@SOm"[M,^@6TS_;7)7o\l]RrTjQ`9HqmAg-<&DF_oT5n#dJWR(Fh7Dj]M#KC1CT;U\,^$KQLNq2nQ:1N/@4f.4XB2.bA(U
%]\k9q5prE"%GOH8_XS]KU#70@c03p/BW!`_Gc,:\9]Y__eB:p']8f-.8pAVi``QI&*!HO)&"Bqf7jN=gJ.2@Q>k\W\^sMliD6a8%
%F;,2a;0@a]JAIsJYXnNM`CTdu#UO+t'9!Il^`,nn0Mo'3"g4fdlr#G-+s4)M[*T3#7QMIZ/5_$CR.mp(-Nqd2,>0-#B[Tj#O>:Qo
%IBjUge^^,,8VDC0hdcj"M=4R7bM4WS+Z<*@=tplZV/hVBELYK^3D>gt;D6o:IJ3eP5:uP+--/\ts2$0p+h.@n/S%]U^Ypn$Q77.Y
%@N2VWLtHC]ZkNaq]XDuC&R!O*8`n?MU_r$#((/c*@4AP@T3_%4=*F6fnff_]r9us)(h3P>=H?p!Xa],e7J*9*"F%YWQoJ[-X`-0B
%0@Q)e9$9aS[VPN8C8dKpMdTB4b:8mTW8G$[d:r:0>cWUFH^VT5F64;,73b@fT+1OhJYnt%S"d]oI)ClLcl@q'\E,G%YTEsaBOX\.
%:A]V`RLe[0GG8f(,N4W=BP-3j]MT;95TKK%i'c$.TAn+lBI;bQJ$UYH*'g#2mU_Cq0CtoH`S0iEb0VAnpq3118j5^G$B/5qT#0W6
%;g9e1N557pX#ETfF##L(RS"W8L+F,j$LRtS1bfS+ELHte;_F2+P7;9c_3aWa^6XYKP$BaqI#gLm$EF]3O1'XS2c5.*.HK3W(G#V/
%KL??GJLN`KD\gGlQ(O?-)iK)C8Lt[1L1i/jV#16aW)(pfO!RN__T$;okedshj^'Vu8MjQ;7;a?1fPrS@KM9d]o/PXe;;I9eYs8Wj
%dL\+Nh7+nWLPTiNEX[))fJk6to/j8LQ@^E`o-r?V6bJtn<4L>`&uSpU8pT-R4[UWhH^S05N8M14\UG9-@CR*hq2lN)Q^O5QQXI4-
%k&*I>A-TfqC->1iA76CDW[bP]%[Q8'F/b[C!ABk@c%]nI_hHAZ82(LL?als?<K)eNh+W]('Iq`.-<K>=T.<#3^;t!q/[jSq<\YlL
%[?&5dP6oS5#^Rc`X#/lQ.DZa'@c#((/ea$9jTVC+Q-OV9$i5q2>2rK*W:QAA$,i'ibAJQ-EtnNK2BttZ0U"q4Id$p:K5a3'"C][o
%G1fZ8kfZ/,3+)oe+VbV_@'K=L,f)I=L3DU7%G3qd4S@V:fmk.]S&.KN+JKm&i?ieZ,hd"!EJ_A:*OT!%KpiAu3:I9P2SF@^(]:-a
%/r.0>fC@rW:UB<XJhi]Kq$2:U(]qPE3XcZs-r%sLi[A^U8;GZ@MX(PbF,W=J9j13#*A?ZQjB;hen3o%uW.iqOp@?`Cr5f*)a3&mM
%d2*hW9mML_9X(SC/;k$?TbBHfHksN5>,KZg+uM>cH8sP:4GOE:P\AU!*ums;qY2X-"A>_A1,_Rq;`K>@(,s'5"KcMn77U+aLYhY1
%VC[hH_Cml$2'NS_r'H_j#jU-afciSur<UGH37+"hE/9leZ1Aq/J*KMaCQ#Y4Pf+\(B;Lr#0J6ArZ@;U5,,uP5r.5#4SbTRf1*8\\
%f&^8RG(eOCPdE@YO1rh3^<q[C^WCn`f#tGmk/4`@'t(L1^8IqU'-082rDH@O[>&5/c)3!p&Vb"7Qe%(rD<\teb^GqC`F#LA%NdNg
%[46J#Nipt_HB1R:Jj]/q\ks9BYD\JK`N4lES[M>1RMGRXWO!YRI"8A'PaQ`:"?MjP)OH@?W(Kn.e6oNaXBeTXquVZHc^:SrEmPiR
%UnA,+;3er1)f.j,.@p%8'j+(.(0nabka!Yf_eNRn'5L`=LJ1(8;$R!G<J#t`Aje>4=bfG/k\a%#E_Dp1%F8!sH-m=oP\>=E/=7Vq
%+WUO!@*j5CnLq1?dd'$@e.a9VZ[RRC"Q;_V0N""E<pTug;qTHr)lE,d"E#]p@&E<Ck/eMns+2\X)f`U4C(Va#8YKjr*P!(;nSW8W
%B>rGiN^4A6MKcWBds<Ti59'XLo%We,!gSu8[+n@LIW]N\Cm^^:+Q-SITjjC2iGso,nrc,O$pF0NN9#_kdPn"L*4L4nD[3pA^RCW-
%,QuQ`q*U9nbtU%^h+!gsLe-JGmWkkX@g5$2@>_lqK?C>.meIK2?.P.q^K[]ln)W50@aag#f@9cV_I&*VI(5hrPT<uk044KImpK#:
%h7s!g1BRq^r8qAcqYae!bAVlZo.PSlR_S#m:om!7`G3*U&CD_,e6kn*Ct/X]*o-<(AH[&%VmN2?5Q<*3G=A!6V>J@m,+Yd>Hk[Kd
%MBpjD#.8Lt_:>e"HuF,cUBI:8H:g8FT!6A`\8oO256C_m'n`-7M]Y#MT?Gs7b\tAn\_=7_K_fa].$_K4"X"(?Enc?cplQP!+C4G/
%(&X.[SK*ZF4ST6$gL[S.nO&g52p*a;;<hRZfAhWt>/-k=0U?IiM'&RSJ(fH(Ic`7o3!KIp&)HH4r+KXYgVGm\kqtKdj+hue3lZ_<
%I^J4Yi;b-*+ra8"R:&]:l"qCDb8++*VH4Pecf-Re,.CX5A`56Y'`r6D%G]0-qgJV>l;\2TW0hF1=WNQ4/+h',5[SHD5VZF9E&dT,
%g:T%+<;sjINi2^P]m.oY+PJ.VgM$5kEj]a,]1BA9J4OX>L/0c(/AE&X[P./fO!lLrAXAI7,Iu>VGn2'KVXF^)nque+h-1=27.hj3
%3(Y>/e:9143)J]#*('iNEXqRK0s75^pb@D_;bt-*CRA_9Ren/GI-?H^de?:f"6/X\j]k@**0)3WLFC)d=j\YWWU^XB5m@$>-C:)-
%nqDt(fJ?RYcM:.K;A.Mkr1*DTlp>+2+^=B6dd0/S@8CtV$at`\AfBOe7*r'1P^-WI+qR/iZe'3U^S[Ddk=%60iC)DM:RHcu3DSB]
%n3LMTN_pT,!Y!k,+#9gXc;C>:nkGE8r,LZn_C(l#Uus/2#eJE3q.<gWC)pWrKg9KEja*pW_.m7/,n@I7Z0_Hm;D]BXQG=dmle,;-
%5X8.bcqY]EA[!Y3lQ;DQ,T%&3S0@]7lc>m8?o@r/`+lR7gMN*6=H(/F/6@1ERY;=@7pA#AZU>!r)CD7DZEYT]BSYD6,'<].8J.r(
%%TZXB5GrL(_?qg?T.k<)N*%&BWp9NAU'@?dQ.S;PZ60dS/1jj(+@Lp.f7PNV!m8d)/.jgVNG++Q%M#,A_L00*l<7+E1^fQSc)\>C
%gU1fEnWF`?aO/,\^U+3CQT9cZTT29mPcjRd5JdhZ/Vakq%A-WcG8Nn"C_<KOr6cpc-ie9-,3@iR_KS,e_OlN3Olf$;"Dq7uI9,p0
%oV2;56u/WOBoA\Cgh7&LBU<UE(-GG\nIQ5UpF1f)I;nM1Xt1Bp:Dk@0N2J\i9iIs4[Kd7%`ae(6,,rn1&7q;r^6GIKIX2"Q,1XcD
%cn1a4F)51jiDkWg>qROn68RG\",3FU1qf4h!1fnQ:<r!,H_`G/??Xk[(FYm5L)##JdASB\^?1+!>+4Q"f\/()S:p<aJQX1RW(A_W
%i<[_8'+:KC:dBd[[;IE$6.676%:_fEQ0V'r$eU9VO-'I]EZMfgAs>.grZMQ6-0laC,'ST(Ps-0Z9_sRaK:>8(ZPdeQ8AT/#H*f+q
%PcR>'%VCQSc[ZeNlWNY8L/j%d`3aU%i/3(0"Z5ElD,HO<2AK[$';t-\h'B%<GSXERc@5GrO9FjsI^,IKTV.Y?k*R$6%*nu-S&bS=
%H'[.;1&oD&,kO#`.i=i]Z;`2FRuKt?;Nd;a8Y9qEB?f?\>X$nC!V;f"8DLdIhIH'o+J9^'40/N\2!JS0r^\TXl4XXN!frfX`4c7D
%OoQ2Q>/%WUJ8c<F]pP%_[6htFB1^73(*1Xd-A9_CDFg.j+P(:H(,4@CY&$bI9gbi?G@@77V3@m?DON0a(]5$0VsPP\$>=WgM!KVY
%SYJiJi]sD)MK0#l-::Wk=`WV2^GWLf$d,pP,_r]O;,k@;JkW`f0'+B-OsD$[YR(9QgqR8+#g3GeH1MqG8efZ'\0R2Uaj;S1\kZ9?
%"dF5<iGfY4?5iO,2bDGSQ7D1CUjT`a5m,Zr/4i_dg#FWrXk$n0?Tp:)B=4q0XS7?f2h2QGN/!""\#!Za6m20PLlVt4&REAt\AWK6
%r%jRPh"m,>@$8"(SlRJTkKlYS2!ils8AMP88L=hPW3r[VNc1QoGW88Z`;hL:_MN?hNCSM6`#o3P7499P+*-=BdNWJ1(&@qd!/!'>
%V]4??@"$[<>IGb4/7LgD#cM\BPh_?+J?3ih$qeCqO>]K735GV+J^THJ_+-4DajD[;Es1.)1^b_;7'G4;r-qdMs*d%K_^HS*afGU*
%RU&h:fqSP6>oUcVH4^r6M.Om,AAY<Fa6c'nY@*okQT5'JM`cu]3#Tqp5Q\uc/BTQjE](;g=Ye,g+O>gUTbsC:90FHl=RoFmGf0#l
%B"P1\r"H/mYt292`UmYcnCWcucg4e*4)WsVCa']35leT%(2kVD!/p=t$R:I6eR-#2!X?V0DQEjd(G:+Fqu@dCM,[Z3"AEe;dp*/I
%eu]%MWrXdPBEqbAc!t.,3*+q\##mB8Td;d6r.h7u"!G/oQB_#n6teMn!aCs9lVb>9iZp$D6q<@Q9$,Ms'nUUR(>dRJI^;-E5H4;M
%qb\PlP'OORJZmtOA^(sRlYXhNA:8)[\nXpK-mokd0>rF(3oKdngb]:F>7\&LC,MN)cj&)Y'U0t<*S[%T6mc'ck$7MtDYjTa*<\?,
%n);uF\5$)&/u%Tdg2goa>8tc5@Jb/=.C`'dn+2q%%hB\n2*6["X&D+.$EDOjlF6O#HGM/V"bj!i$aY4mRZAg;UBm#/GmMU"!"(]+
%IC:\>+jq=ojc*b\cDM^T\kHRc)/6J=@2=fQ,Jm0):lj78JTL5PWG>BQ.KbjlVqb-p>.b0u/SamD8>5m6J$:U7YQ&^jk$SrsnQF/5
%o;L6NO*s*Q[,RZn+`u6:3O6h#1n(r.>odge_Gt;2M67PYCYDI;A@tDRpMr@+:C,7Q`F,<A9m_:h(TBuWkJ/Wm>J#uZ>Zl/Za0K)G
%cZ:p/peGr%?>b2nb@au>=dE=7)[..aBFHGclZVqI2CN!&T%S]9(a#Kn2ufRN!J80(,=;(XV4Sqr6&.,I7'7frBEK\_^4?8fQmF7c
%&hS!/(<ZL,^"I$KDUmLuf.3g:hD/Zh!?m`b,o+%n44$tH!f+9Kns.e(0O*H(*>dS>rJ,2+d6Q"%8rqG<CN)5KJaI>/U:ttr1s8s!
%]5Gu0o'U0,N69bZfa+\_Ua*DE#qS#HJW1n[c!jN/-JWD,)HaKg[oA,4X+9`ZIOMITWk\<?/0"[nM?HFm;Fk]X7/j@Fkch![L88\t
%b!J*=8)Y4pU!c4CZfbK9iQ])DpD<KP`n]XDZApAcF6_4r8)XaqN'`o?D]0SjC.*"rC4PXZS<kO@#cFu_U5?ZEc.*M#=WPZUh:/kT
%OF3fc_m(a0'4G^8NlVR.2uJ=Y#+B9]$]L]X?/.+<%d?k1>J(0+b&r<03j9?ZCH),6cbaR;4p9&]KX&KeW*!+RiC05DW;mm,85\K<
%"]t1aj6h\UgP0=^RX1HOQ5sUOL1\9MPN5,+0j:%9EMp0<WY_O!9h]nWeSYM)FT_JJBmd_*ru(qu0JLeqBa/dM`o(NKR+BFD/9mKB
%]:n\"5kL"H=k$5='Y`N3/=!QE`D=Q??ac2QN5Gq2?t`e,D-l811l$3I,73KKrA!2?!0R)(frM$p;Ao:r=`@^>!\(I%b%?-*QE123
%l;/8LHAgq-bl;>QEWp=87?DCs[O#JgMYt_uN%A%qZ'B,g_jb>Oj#qiFLWd`&lSDD0QD!<2SnT+$qN^D<QLBRB^'TM0Bh9'L14iai
%'qqlLC>%[$p(*59'u?3(F>eiH@GZkb2)J['n]h1VRPP5Eg"_@[Q"U>+2#Cf?;%,dc3=6q)9q':?C`"(%%Y@J`Yoq42/s^%1OnGf$
%2?Sn;qgJ\\QE(jQd9KS@dO'#%\Jcd&/]h'6JT(WIgHQZ/EP$CAfVHK/\[i@T!`65WKC`A0X_BR<2sJa0P%D(Gs'<K1Wthcj/BFP^
%g-BK:L*-'0-8=R)&m<92l!c+:g4($Q)s@?e!jiH+JSF=[b;(&b\.p-9?k9Aa=@=5V7#Meo#EBhPU*`OHAjIc2,ZK(d'`!>7&P'-?
%'?iYkOY$@O.QcC1S1h.CD9e2!@X'Od)2t0uW<HFJL+cIaB!e-^RRc2%N/5JX$k35$a/)3%[4gFD\e\=d)G.4*h)/d,r3C[0jmED'
%as\dicseQK7Rf/oQ[drN)k)BaOiT>]TR)n*X(O&,@`<?T"uELE#mD/r"7(c(PrR0o-4/O34G[%VgqPgfKGoU'#STm7SCH[t[-H^+
%`aLE%EC9o<KXI\9+sG1jmEM&:IY8gdU?I#>T_,6;2KH=@\B8eS>LVsCfX1"X`LU!LcD;.!m'l:@PKV@]O`[n_Bh%eJj2+oIklS#?
%OPM[!(e`G/3EkO*H-X4HfT:c0f,RjRRY!,7juVp<([Ur=FnuP[j;G_!*Q5d3;'N1Kp:sY61-$s27%6l1$QV6Z[;lY$&//e",ic-q
%'^a84Y0^Q-patgggL;`!YoFFGVs2oA,t;*:Xoj&[\C+3.bu<n"cG=,CBll>]L$2V\E,SF*0YS_>\7au%_?AW'?-b5ooki2\R:b'6
%kc*/AAGPKrr`%l57jc4(>*+F_SS*\B0Dkk"Zn+US*kh5>80f_Ynur`Z8q'<ic9X7.eth&?bA^i0*:%Fl,:b"-@PS]1_BDgA/:o0<
%YkI'9((Q[OOlXXd;6ht/?5O&5[S%^a@OtVk,6l"Ic0S4WJGBY7!M4BLL=N-<=L'-A;n#ceNe?3V>emI">+ET676qI+H5%H3OY,/W
%>`97*BA;Y1dHI$]>[WWS<W;Z,0:70@A)Z'-nefQWk$]I5VeMN;lTB+W/rX@FlS.k`=kmu#;;TcDX!(1&0Oa"IKNLrfq)$Vp_aW,n
%9XOZ'/?K,qZqjW8PTR,16!ZQE*n*BoHpuIr,uMDoQC5<?RCIVq6_NM#hWI9i:<An;jfdF(W!N#a""7Gg$<G&uZhL-^)iGJ>c,j\0
%?trim.>q0P[1?-u%V`]sOuSTC5%'8IjTA%]8^(n/UX6i,OquOK/p,c'j^/dhJZ0!j[ep>1"goDu"&k9&iZPg%#ca9N7d.CDB&Ck"
%?t)u@-ko?P+^p+6@48?tYlkG5eX1m4H'[d9k'fQ#V#;p&"E9)G1(J'8<K-PAkK<su%u,9C9BGI:g&IbBV"_KQ.][EYp+iSD&KCa!
%go]DpEJs3"7'tP-3Y0mPjA"7L8;npWT'f_FWmu5q4sM7<D!*-SIJ?+DI8KBMW/qRqL3lI2ib.I0os&HFc9-0m?_^_#@D`QK4L<Gh
%8KgkGqmkbCVV4TGdhCP:Pc(,92.^3Ug!+A32skJebVM'+2-",A)Hc#OEN.d=]6PH>3eCqg`_ZJM,:qoO*U0mUI$?p"k:YWt94b^f
%d>$QXSqo)g/Ftg:o%1)F,$9<ko.P^WY7'sr"Nq>GJsk=3L?43S^q^]6$L%I4lu0,Q>9VlG9:Jd+-8,3DP*)!(J2_ZL8("TQZ@7GL
%Iu(G]-0>M!ruj5eZ_]3'8Gu&@Okfu<./"bB+?Kq6-Ii!L(rm9us$PjV98(@#iUT29e((%ZNN)q$ShBU0I,jXEU8#g,JQmStEeJtV
%SETnn[Q-p9/)Cj;++j3<f[^i?pgMXHQnV1D+K(na/t6m<g2QY@K=N+r&ID*SS.#9?NRfZF,&K)d-Q@2j6H84*lS?TkrA!(1U3\gF
%$WeH^R9reN5Stb>c*,:3$Yp<bQ!_LpQfp]FO"Z585>]5@eI`umfhRFD8-k^/02Ze0'@[&hVc#L=+@+>I/#1DfD4Z)?Qne7QHl:]o
%o^!Wc69qh@6JQCWj!mc)17)m:9f-j9X8H#dA#cM5:?\@6Bio;u^c'4E.A:VdQh.h8BXOrfdC0s0>9XNCQ?(;hFFoU$GJ/Y)+Se4>
%.45]T^9^fcX)PbX88#T&^0<ESp`@`-O>?/D#UIn;=p(kB_Ph"5l,FG%#`5?<6VjKqi]Cptc85[GO(#o;pt2+1NX/9:qCcnj+]-J0
%(fEOEW+f$YbY\-UXgs3IX@GKBBsu2GNdKqDc%p@U&XYRm-4e74H;,Z&5P&LM7"Ja&4h(.2*1g'7\BO][Cj*?R?%FoQ!AcqO+$+[P
%E5k[=ZFi[pE;Y6AkRQ4-*^=+G;DU_^kHi6,BoWQ>q&t2OOZhBZ,sMqa)-Cn;-U0irS\XebW;M$,qJ<7>Kiid0]`7?!qZ:&P#dGK8
%cRfdl8&nXUlS/Oe%rq>AD(lCCk?4W4&*@#TR+N5Cf5h/7(WI2!Y48eH.lVQ<%A*D-"%=YD[?XKQ#HP%LJ0.:`eq$^ZX-]_]S!FWL
%D@uM/Zrl&,L.%2jW.q:^RbT\V5GUr<3fRQ_I^o/#`-;O\rt'H+]p9E2s2,IOb2S-fpur^>L8k"-ZF*4Qj2DHk'uj%g;$e>R&0t0a
%]^Q$B_j/1F*5q%Q-Ytf!+%7qW2Wht)R*hKRB'2T41ttc>R6t;.Asmr+\H.]9e;b`7JSKXsDI\9.4au#e\&V<&58a[%)li%u8Dbs[
%]&\W3&KRi(#j$hY8QFW;(KC5+r(rJsZb]dn)S,Qg5LdkP-Uh8r)DOItaJ>0C>#`aBO73(o:c5n&AoHDL<fTXa1[eu,nW`!jU$5g[
%8?9,G#b,I.DiH^qPFA>M3,.*@FcS:^p0q8tGc4/SlY4>DX,0l0nBGP)FW(^S#@1Wf[KVA!_=dkXRD%bI-2NEdhjHNVLObf)c]O8l
%kpLYh<"(Aq"Le2VhGKMs@J=g)Cn1h"OV!cofLs0\OA3%Ph:r*jHP^Z)LT9#<*iS4JgmUMl=&pBB6!:W5UkZ!?/;N.KZ%-]%`B:/b
%GK58#:if0^VIAL[:kfWT!CKNb4dhMKV,KqLJ`;Dm=G!pG_BE4S,72UQ%.j((2o#HV<J=jPAZlFcr\'^1,>k>[?oe^O0mj:l-+$kO
%Ra10CW<^';/S-G:hnA[U84/%^(mhYVJ7amG^Ije088(#5BW#ni-Qip%P%ESi[Aq/B^=aB4E5YITG"/iD[igE]\nJKZ![mZ)i]fs=
%L`S:=)uO)QLl@)uLBJG,AoZ"UE/iJkID&LA&Do%^)b14ESA[XX=pY5Xpb>Z#^o?VM)h:4GS23s!c34)@GN]I-;6E[fK)n;\=E9.7
%E8Y6paq0iYUR7d=1D+Bs<(F2.O!f[L,7?.bc7.Hl(igt-@cKK7AKh1#Pf.GJcD3Fs3=SHb!#n!mc?qSE"j(q,&PLD;,r?N0=G3Bp
%fXWS5,>+'Uo<#>a#8CYj?h!2A\G_?Pm5>n-+HgtZMi\)/P#05(U^9t7X-T;b`_M_O3RC@u>%s%[JmjA1[IiTg!gf5+OY[Q@F]`dR
%J'W=M"GY3c4j9_WkNrmpV:r?hbh3&*G$.>L=<JU"T$,\goIefL[r\9EEmjB&*>k%PJ,s<]b`nBO/.W\d4S@H0K7R(gGg1aphi2K"
%!qFVEh)F99P^7`d3$W-7TiR*%!&BM/A[=o41L*dZd3:e!\X.@qC+%5a?()W8,)O`>iXBq6-;h#t.3BTW+pY(9@Y:dNp2s5cc:bW7
%P"^r@@KA0mWI]4pG)!aujM@QHEU$)d#A<&m@c%(Z-8\K8>S/sO&\bSERe5,hPlV\'PesRZpC'o3`lg5Bf<3*&06;9:E+.d</KD*Z
%jl*h6#ST6.7X-Z.=VdO<)V]m#9TOl@blc6Z6MRpQ>iGT_EpO"#iBu)[W/_;%pmHlS!=0m#-X=u7a8elkY0WaHS/N*>]b+Cj%Z,AA
%:d\2AC\-m[<9aR9SqT^C;2Fk=.):4'PDIq)/bkVI;O/sY!s1A:O"=am'8o9H.Ecj%h%U\LPGm[UHHH:WphC<[<Z@&%ijL-X"!d2E
%--o[]8n:$/#0qfN2!._p;1d1^i<a)U0<q;jS8-.`?C"["bp$fqc)/=j+-jF1iH!kKj)`U(e1m.lq38:-l;'\/Y"r'&R]eTT@=;/E
%?KVlT9s6_jln=ahge;s0+/^ih3Mp<O\%)c%c<$L@,q%m(BmK,^E8Tn""MWIFkpq^`6$0],_B+?gB4B?g=neJqE,dmSf<044fDUu.
%Y$[s"c%A)6R)h9gh1-`k79V*tTCE$Vib+)&R$BB'%*"&IX3G.YapH!'Ch<d&4)gX$d1/UfE:C+=&02PlWP)"s"Jt\-.kO@;n=J,o
%)`V9"(&<Ar-A@o)(L(p6q?I=_/\hPQ%[QmJJVf7n7odRe1VBaq0/<515M6pcqpDCeB]%\"2F4k*69tOm'>(2K18dSM7fJ=4":f;r
%<lt+@,mD+SgO60r;SKff$7ubB(f8u+W;!M%Xe`M:!6s?P/lY9;l!ao.5SJo>WfFXr"pCb\Z%74L,BD4a*Kmd2*hL?#OF88W8\hut
%#b'Hm,d\g'[YNY8)`Z4O3\.ZKV<H-loE>G)_'+foe`'f-[aE"V\]D0`E*.LB[s'GW/3YitVIR@5/3lS,Y=G+CjEJ$@6]/^gUdIYg
%[PDD@a7=B8SEETJqg(`6<35g.:tI<I_fnN''N2l/VQkr,$6Ge,c!5arB94M`*2Zha#%K4fq(E]i94C*A`!/F`#emcU#=`S12ueFT
%E'piI&IMf@_6bIZe:(dB/XWK[]l!sRU*b>Pfc,$%)'`<C=tmOTaTeEc%2"f&"_];c7N]tY1t;(Pp<9jF$GqMook`WZF9+38$We"R
%YiMq]]ZO1Z9:"FuWAhi"EO4Ff)M^lOr9Zg%@ca\h8IG!,dBabp986t6NL"5V*QugB%A&#[B_\RD;U$sR(c1_eMorh#@.VArdTdt4
%7sA?g=9pM`7!0fqC1AGi.VgI8PK6Igc#)ME9-Dl7;^pEk-`A'gY@+H5SMoMk'K5J!?^l[Fj0>&W%#sgn&85YnRRFA&#ES"M[f&5=
%pX?B>\;HtQn7G>j)=OXq9TA=2md'/_V+f1c4&X+T`dsC7Lj6J@:&Mi77O-t;RJ(+/-tq[<1iH=m$IS(PZ)"f>NOg8RF)r4$)OlG7
%DC>Yp+(kt+aCsXBo^?%@Dc1+L50mH+A/]5DfZALQW6IY-k3m^&^EluoWG4Yjb:G[/aihQFqFMmo:c.ak,m],TIlqrs,d[;cmmaa_
%h*k0",?mu$)*WJb<(<0ueJY.R$nmLkHB6rVm;d39ko*;a;!sQb>>`$#)4L#;G+Bbg3GK!jUPZ-H&7Y_YQo`@a(UTm8Y?`=uBkAVH
%'Fg?p<6D(+YVbQB$^58Ti9rUGU5>^K3>g#/I%;h&U03@EoM)l0,%H>;8XMZu=c-f$QP:E.1C)HCbAWt`l/l<U]<$=DJoql53N')d
%2-G>H/@oNfoq"H!`]F6:U\/#_=sDhNKk&&3R\S(H-aq.<9YqO'@;*C0gFX.A%VuO#n3p)X)DR/_:hh=TOrceSbEf-0@6b=(Kf/KG
%4tqtn$f?Yl.+==<dk!_8<E%9G:%[\1;L)D)MUj>_<K:;2g88&I(4?e6rG2`D?[P&N(IQ)q6?8WWU!ZqBl1rTa896<;j7s8sU/Sc6
%"4o(OS5Llm1q:-%\E5'i3^KMe(@*O]1'IbsTB]@S0Q-3(%HAZ/BseSN^s_h]-&u]tR#[p:l3bp_'[XmF@5P'ij,hcKp^@)799*[1
%)VQhme[]6OYRWr.)u<qkSos/'a:KntdfPgX@50rG-oPh7c&GWID]hJ!oVuR-6a"YK+Nh;.(TOSci6B)OeZMGLMpZ4W8=5FTBTd7B
%7.?_ed@ADZ2[I"RC>'K$dr<%NSUG-oFlPT<^eO8#['@5a(0@R-oC44:Ph'a(Q^M^6[Lp25[*stZ*aUgbAp/`%I`H-S:_R^+-lW)h
%.-Q/S(\=jsG=Dte^sq,O?To_?qeW]9L\P9'Ws"%o$dgSo><Rn*YWj\3dg%[;<uE:>Z=+Ga1hT9L6`hbKMF:SPDc-.m')6AN#"K@^
%G6XbgIQFCn&K5Md'c:AN:?Y*Xh\_8_E.o/q0bh(Gpu:O=$V&/=ePejC66i_c\n]HZFOm)_c2[&,c8c&*,Gp%%qVltI1h3*>IZC)3
%qg^nrJ0+*8(cMH>9Zec'J43egP;^D)00026<s^Ft_9lGWqCmj%i#!n7k\=$>3c1%WLW)cf%O.,rB#:6=m@m)dMo)_rN\dKi5V&@O
%&IE@=(/2l!Hl*\(b<;\IKLUAW\VDb'6XOaORb>aWDNs.0,emjGQ\HYARObgcgLf`j@?RA3SI`5Pim,V)M]1cKS4a$Ee_BhH-82`c
%e6`q3e!,N3.:]B/BR]1PZ_)1t*+QB2gAh%R"gdW)mV/]k7"!1@056&Q/2i)b-LTAZSG>",liY[I'sP%if;GSN'AkuJj-#"V[4Ng4
%"jBck'Ms%ll=K6R/7QTU7qD\b2GcVq&(Zfc@"&M_K?V@57re%C9#5J,*dY1k0URaM8qS&GY!m=j)bEjCV`qF+>ej=>#,WO`3/N-J
%PCgW8PeV;B'=n@qcW[UUCY-^J,8cf&BW/ma7-2:1/j0iKnI6+W\I[LZbricL%`+AE:1l!gKh-;7'J8*.2[(I%4&Ch&\&,8^Joum2
%g6`9Hq%3Y<=VsiFgk.ElLI\>A/P<o;ece"$a19(qc2C2Pq=Q@7rC=uIQ+G7^(0`^dQet!*;q8ZE$glc<&:1sQ)]\+t38^'(U$f9b
%iHd>jL.$ttH8r(HfmDsB:=mQCT7ZGq>]b@91a36*imT.$N5i=)2SCoJmGDZPAqpE%hP(a;;3)XW*`_i&I7r2MK:5RkliG7_Ah!Bk
%ag*P\QT=+]jTX8[M*\!MXr4$,]%!`T9iEH`6>DCJCY-cVl]Q1S;]M[]X<uLT`Gs.i=J'Kn<>e]AP:m#E4i`^BpY>`),&'6u4lR'r
%k<G+5=/R_/,`R%a%RGUCqa"-bdKb2_1k5K#09YJ,5Q;pArjjf`!D,YG!!CT11r+tT_<W-//_2JFG]5C>])OHmj.^6Xfbt8`im8"9
%hsok2Y`fpi';hq.@cD=_@!:Z0@Ssi!h77<%Y'h6)YG<>0>d>l)*eoJCm.gG4T/i1k0`9/6(:&NB=?d<o^aV%uNT\Vm<=kX6_u@1W
%DN?tZ0-*lFiK/lF+pb]]blm-1d%DM+_U[*IN$4#E8PV";HtlkGI!'NuJVN78mpH]\.<K<m/6JX.gAqf>;&*2Uo6]s79S6?tJM[]W
%[j5g11^DUY+00a?.?:5O,<,g)IYj@"O^K_5MIs^PQtf2nO9JQuiF5lmp8&3S+dZ*#-FsqC_5,c+OYio]3C<Eb%@=&OUbRoDXmhK;
%mr+<G+Lc;)L(=s\@&DEW3Qker)GG.`auIEJ.p[[F(78+dQ;/p"n)pTR^+\9o^Toe:,8K4&MP[&),YqUXg76rc2-H*>^b)=H@_*+j
%ctXcVf*DpqQXtN?-D\tcj7HU\4t"\)'FpNGf!\'M7mTl,pNO!g^l3&*&_)qq6@7>:lboZ8A,-V\Pm#5=@PYu3gI%N.S7j:&W_[p2
%EsC<"#jsZN$Srk*I!bSGdoKZDF&[_=CY;BmUgD,tUm\0[6AWjM#c7N&P(r>-PtgY6>8(2/(J-FGjdLZFC!ou-X<+30`"n[cPp.W/
%R)C\DM\ipd#lY1R]4)&,UpM4>1aknpSCEQnM^YP`&>!H*OogN)5u3ZHWjtc*GRDQf[0WuN$[JBYqo?[eOB9%c8oETAGUd\bCJc"u
%rDitq/P<oNo3pHsSg>fJ0docY$s*X3#a1*Iia?t5a\ts3ePdL^)bNJ/CTUR(oDEe.VJm!<"7tooX;UhS1JrSsJt2Q0e2ockdX&<i
%6ng6Xk%aLWV'5DKe-i.!WAF_+&<3V5OU]c-.>b=oY]'S>MDOi'5Qj>%7=m1N1a$i/1[H`eL9SjViHiQK;0:-g8<%*3\_D9EKRt2/
%)/8+D"FDW6r@es`W?-AsZ'tB`4??^VX(*.VDN7*CEm!Y/GRjkFQ2PE<+kk$ee&[8633NTVk<4PSd1HaGfjRa"lDAFQ#$,@.!,HBY
%[cgn='Z7\]!1X8"Z6:)r+IXS;/R]kQ#RMbZ`$Wk4qf%U;9HT2kOXMZHP'pb\(akIB;ej6cF:>UY7eik9id="!oZ['6SQ-C^i*9IV
%g1WOuL3Pt#.X!&!O[Ek9V^W8Z_50r'N`@E"ZTAE?o7DZi(ZK8;>f[?p\k:3GFNVZ@RM55?Fec25I._Ih;`V$:K7O%"AAr@A.]\)F
%5IR/[9!\aG$Iq\TR?<A[lr2BPhL(<(3t$"7;l*Z-n=(LJ"<C:OLrYS'LrX2-r6U-1lRC#7r,>dpaI9Z%P0]SK`DenJa\Q#TQA&7d
%JeHR9)&TWAT;oAQ\HnL[D"9+d,AK*B%c5RV%q7sYIL_MSVgu6HEl?]sb1L-q*5Sq3^HIV_`Qi#c'6KlukoWtB7FZH]kfR.+eBk1`
%[cT,WS.Ck+,nK;mYWg>PN(9Yk!9VJtB_NWLA_Ms7''3sKP&#+?"tcqJ9.t6kMGKpJ[THd)r#tk3VEa#"=q*sd#*c9C)Hr6`LWh+T
%87^[+5=JQ,+]<d1Fbak("]p/o#8[p,o$a85C%=^.^_mWBT.DBHH.$5VDLSD\o,-WP#C]2%'c,Es@6_emddfF`Yg5B0h@C9@g_<#`
%I\<rglX"PnB4_8fVRT7-2i=RIM9eihR*lLi%_&Uq4"tHuFkI6m^i!\D7K"o(]7Hl/&8>bY5:n3V*e)H)3cAfChj&'d[;TC8L/mbR
%<)X>>-&^?o6T?lL]Zc@mrqR`X</9K9@Smo"dKr\^\mr*R4p.HAL26T.5!5M.Ze1Td88$Lb(6K2+ac4:eBmq>0>n*_'R4$\?3Dem/
%)U3(0%&a:,gB\$FO)cCDMNQ9]M<+D+^(eML+Ip!c9(MI[+<@mq(Sh_c(.U@)Aon``AfSir!-dFuD.#3+;79n7Jpbn,,,3#lle:-2
%CYHI9#88,J6VP'hP:b::)#07'RR8Q=Bl=i#K_4>QM)SS3I!s6Fg9?.j0&@d%W%;m5ZU'o')[hJS&W&e8%D9_RaY9-GD!/mmr$0d+
%e8-TSDn3f&aGbR^fdJr\;6jW(gPh4'RGKD""O2uD`GWUm6BVQ$j`_`F:7OJ*UJ.n1:,@.t@"K`\ro35foc`?p6?P7NhOXt=ONtm]
%)g[Fj,o[332l_XPpe4ZTD\%Mr0?4_9&cg7F<;hL["GLk!YKh^hiS&'7#XmEdA?\&t,n#M=AjAd?(*d*P&.kn?%7SX18a0p9#mF;$
%pTOW*ZG:uGD?aTiLc1c>%7/Tfquq/G`0u02Bb(@cYh:s+#f5M0],!BC4`useouiY??q;Q3,uAoU.0LHa63;fHn%L%T$]87RmfEY@
%c&5$01d\jrR.YJU>]^U=@u2.LJm=KADRc,e8p!4glU2#@'l1LMNOdL'RicR=N'pU]!D$mWC=j%U`fR/I*Y_bdSAAWJm7*pa809HF
%T5+=I1hqd+_#%g]\fENuVWEUB,'CtE>qW%eC&ahg9uTJ'FPPN9C0"[SRO`BBe_T?f#d-sdAgFY<gDs@P8)!4\/0l]boR6e)8ai-g
%;SWRn=K:GBNs;fX6h%s.#cOI8/6r@Zr%L!E=<iniL4lcMkYV6g&cu2'6b:,)a213bT$jp,?kN"cR)KJH_X]Ga"Df&HB,T_0.o^;'
%Sn>MKC1"Nsg\;.o9-k[2R34dna9Vn"k[hRC2_REJ:h`.n_cXh-;"W$Shj$K!FH?pb71DZ'>?$DQOL3SDSVbHUbO]tUc@0]%f-#_B
%jl=[%lJVtD;m<tE#)3I]Zftq7Y*O5s/BV6cN@\;Om\"MZ[;ZT)UH_uXEJP)UU(JsN_-tdTZZ"cj5jU\0F<`&I"%CU@dKDg`&.5gr
%Pd$D$2mYj$_BfVc""efd`F&+sie]Q:UU\.-**a^0IQ4]h@Kl9[qnZ'bKCjuN]D2kVI;TE(oA#q,@[<tnF)$:t;S"C6-Kf:E,)31'
%h[u(^dc"HTnH&(4/WnC)C8S7<]C>sGf"CC?IV!;HU/no\NKO;RL9i<<7)bYbL.-,j8Y"dCi.IXDSG$eP6q9[n/iGdXR>4k@;)L=f
%fc3W2rXd+%<[C9O^3XK3gf+SPguJj/LXjbKA!H:Ei]r7"Tia$O]paFH,D5hTR[BJSiHE(#C%R,SfIEl-:K_BgY5:tB=JVdOX3odo
%CmW.#6ls_"NrSCg9B+dOB-oLj)Jhsk5WLDcSn9`<)6W,&Z!BlXV9MZ^@*DHi$e#AB6q'7NOW:]\eSEXt/?kInKrASm0P-@k=:3n?
%I#0t;`8RRiYWQGqfqaL1a_0*)/Jo.(:,_hZVS$7qClI)I>D2-G;n]k<[@Y:dKGi.bmB_>V:U]_)@sjVp"[$;S'R%\f1K,H7Da#tl
%X#=<*Z@!\UkWWu's)C1AZM1XkCk@5._T]$-UkCF4PUJ(`oA.o?5Idp9ClJgSNG;j`k049T"C6WL3sPMBOaF3)L<(RXQUQs/$[W<"
%QqZO",`3!UEn[nCr'Ao-L2!'P)Fg5d,q%s8U1<'F<JT,G9.Zki<tghRZ6$4SK.\e%gG:pW:Lgt&@&uhf7KsV.V`M,6.G7='r2b+%
%DtKpIO>ZV7PD>K(/s]_R0i[^W.&aV,acSGf/U`$_7OReo!GaO7P[nu:)Tn$AS+;.Nr-Kf_eD_MXikQ=S;^';H-P;_7NaP_?WT?c,
%p5&Fe_GDZP_h#cr<Aa_pokoU%9iIkHhV\d-6K\3j`lq<,]fOD"?Fo03k,>;7ajJ0SA$gMGkITmW\73ZZBF:f9?I;dZXcRd-Ha"P>
%eiS:0AJu)rMW5W<B_Gb%.gX%*2'-%][9!dRE&HOtmFI-\O*$.j\/IQP&ro(*L;)C&\imud54(sDDUArqb&_P>&:K[01Mfql;^MHo
%6V@,%5K]h9fb8e3kJl]h<3Z"r]4=:7bTo^L`^4#(7C6#'L<aM3UMAjHH-]AG=OUetcK!7^N'[%K"?YapQ\>j;.Cqh^@OJ4W)/M2P
%oe'X[2`FFb=5#\rLCtVHq]3b^%bEt!3!P;jBX+J6H&L1"o`@?bI$W;O[C&O7/*f/2e7(.aY*>,MV?q;UHm(AKX]_59rZb+(?lV^j
%eTQDqV+edi>=g"KFeVmGnuQafKgh]BSfG\#[18&c/D>e]a2i\nAn!I%\Pk:T%8JE**5.dpHO*b:*qqX0$L[o;O0BmIl-d\iRRo)>
%Mp8OEDj\ZjmEj>L"X7+5&'%nE(Gg1OQaTHnH-c)uN4t,S(b"XU,-oZikA5sC?[@5aE?O4p(*j*`@FqSBgs'<@-Odm()f2=$k8i6l
%7_0_oI1QsudRjGlTSRd+9aWNY.%)%@\L)a8'=NoWQ>"_rg0Tg!.2MWN%u9laGJVd\oT9n'K.#*7rn0h::faI'3LblTd&TftaZZ3)
%#VPO(dQ_=dL+>oE'7HE,It"mjo4,@H(>iXGc3%m\q\[UWI"o"i49"Sb(kd)qhNJ#cBco;U%]Q-R_RN$K^,gg0No30i[>e[236P_6
%E&\8$c!h6>Z"OSAJCo]?We5qu#;,7oJ*>reLu3qTQl`m3!%^k8)%=#3*U8<AU8mHrUFA5Tb$*(.L4o`).?LlE(XBpmen'bqd/fE[
%QOHYWT,oJZj_:qohTJ#UTH4&?IKC]l+W%:4RZo?-Us-hh.6KK:BkIpb#:()ASZ?Gnj;lB#Go=*SfiE&3@9SI0XY=!AZK#umrNF`Z
%KM6W^7c=TIrK"j1L'#/[$0]AAQE1K\h_N^@6c0X[^S8jc67tnM-I*ThQL?^Q?,i]UTt'ch$dW^BgQa%'a[E3QGSsR^]n5@NW'tkt
%]e%D5hU@q9RCWLmLHb\bL7c[=8t]uFrH4B6JH3bfjmCmR!+`%T>f.<cEC(G3)13(m1i5ur-?pu2B)n/sSC5Cu`(;o27W<@BC!e[M
%,\,6f(MY[h76)A.K:QgL(GWhp\qIgVh4]b$8R<qP"B17:H<:;cWlY;u3p2!omL5DMg-qt(L2-!^/X-FfcjG+%06H/#[nCt#3U/Dl
%P36D\G)_(E1j_.*Giq$Vb@pah8A!@d>'d3feP)Mgh_(R_lXu9^q!?Mg4GlCA^GLGEegHgh$Hg%kon.A:&SE>[VUi#b@,fug0]`To
%Xa[%'67!Y\r<o7KW>;l;+f6rX203n@[Emph:7kR67j2lal]_:Yg!N*aS49Cs6Nm<t1XP@G_m2%mn&`S.fWG[J):jW:$odg`jElX>
%A?!1t"A<j#%JPPCSs'j$@qREbD-&g2olh;=-:,o4G,c7Fk@RXDfa<</lY@jHDo"/fn>#LChrddU>Uu<`Nf!+AOWjMmmg"&RM'_:#
%*:qdcs+4a0qsuI#k-#0a7l]Z,TE!+79Lh5FoDe`<ZbKjgaT)6R%_;DJAc7V7S!mHJ&"N;s'T;F%<&O_hjn_@J\[=?Ol^$;JebK#m
%5LtCQ+sBsQ[BLdd8fQERAo3Y_1GL]^PZY9?MM-"GZ-Z)<"a>t%1DbLPeXUP6GLcZk@j]^ZHG.R^BPln%\[)i;alYK+/WfDS%(Q.W
%\(&IBVt[`kQ/L47DGN\)\.[?Tc0PmodVO8O7R4H>Alaau.Zufu;YGk">Tn=/>of@/-=P15?'mOP+^*>)cG-8o,,pm+(?&5^`N3.g
%g(Zl[Ah$\N:UaKi23Ns*At2h@\R0q].heR3WrYh-jia0#)$X`NEBg(WD_jo[nLC1m:4BgC2.ph#``9h--du@lfn6^&Eb>"=f^A%K
%dIH"(NMSC#^GBq;(p<ur9Qb]%=UFOf=#h,s.Gf2UWmL.2ZSJYYpfqaa<e5WfcMEHdjhLg@AiZ:X:iGZ<bl09mOamCF5Op&g0RatI
%NqXD%J_2<;87*uJ+Z#T];JGa'6U0JSZ1OA)e]qpp8aeT<\Oq!EonSTCij]oHJ4%?&5<^ducT?ZB6'Se,qcOpSi$$G9qd5ujls>rb
%YIQ=Pi61t@^L=mZ,R=+^"+4AlD!UQi[S.,Bh5C);lh=0OJ,cn)^9_&qlYfoY/kt#o*rE&gb;FdHXI#4Drd;DF0f,V<l\pgZcg.t@
%&5p+BDj;#[\Bb_rQ8r:(f)B:UEFpNW8p;^@X[J_c3&C)39ihRdq=DH#nca>p.)t-4-8K"mg!7gd>FVN/c:e4<^:bUPHcn?:O>heY
%P^`RAKI3Zr(A6f.k(U#u'*fNh+M5i#4G^Ick0-jlRoj;UK"(UTmTR\[HFJpY$F:1?ack*LO!uPEQXi4*=uM43]'M<P<gXfEk,_9'
%e(LY*;N7QL*8V[CGc6rH(X;C,XCUQJp%lLcK*bD:Lp]$[Un+]5W*sbmj#.,S$hl`_UaNl_U+SoAF)P*7<1rkp7YL5&oCM\KgO&D1
%\;V=po2aJ4&O*g6_>$]tfA!=8d];5`qa'#_AR362[5+;s6t5#15gB7^0?*FbB!cKqn2E;SQh?^#87-#DYP#@\?\G904Oh$FP7a"!
%"/$$f<i2\oLWVBtPd$0Ch(52uIS3;c7bBe#!6E`YXo@h_b[Dt(E_s]"-Joj&BHt7'7\$j"ScHHdR+OVd6*Tfj_=Lg4R'5]2^>X![
%_gXb&I/Wp9qKN(krUW6)&uioK'(m?mYFCLNrR4K\SO[L!InM%V:55dt4(kZHT0tFOCXm9+^"uu(D3JM8[H^,Y.hQRa*$+9CbZ_P\
%+(JQj2RqZX(?]RL'Ql+DN'k0UQWZn*qq#12UHBuYb7&)+F\-S@qg3q_bVfF_+rp['E&lr7CW>1SS/I`\IU>JP+@gsugK\>O;W"RS
%rj6WG1*RfBl<VNX5aJ>ED2sLNW0]MgWH!EU#Jm2&IWnfi<JnPY$h6d!NGN(,YiWSS!>ZIDdme#LcOS$Wl!%cg10(X+;Q!maU]oVA
%<QQ?*D8o"#h:6(cAdFb[bPbVShr_^d,$nlM2TD&sba]pPHC="T5qrJ.REa,jUd%'3G]RK&\@((m^9.T2QPi8k?T5oE*%B\-1=nI_
%O#8^Y'bTN/Q.8:7rg&,mjor2ulDki?AS"3-UYJnhj50`bM5h+ljK2hHX^0KP-2Zc<s-.s&Q[ACTs63iq,(dCd]WHI&M_^@dAL[Qu
%HBDE&R35Q.osC@Uk:lbU0;oY;T@*Ob6#1t(+ocY_X8R"=&rHL5aSGTB&,2)iS\+;#W8nYK^&-7\T5C#`1]@#'CA[hY5@M=!\EsfV
%YHqLmKE(i[Mo=j4b2:eUoIEs1EHJt7ML;78h+:ba;mhd&6kW%WPoKU>]n*?BL$a5&S[iI)[Hf`OHs+"&$H63S1!nn&g*2s0ml6[P
%(\M?>*+Zd@VMX;0f\9sA"g@;KPEb<W"%A^thP4>p$QL>n79!RT%/Ubl1\%-$&A$)X)0JK0esV:gS%d-$=>R.`D/PRCUU"cBk(.F)
%<PV.kL4kZ/D+87e>m60,(a]A"DR0C!n!DB;_K5IVO-roZ(/>3@/.sqZVI6hM\6*+%Eb`/obl$$J21/-2QqA.#q<Rh,KB652ZDKQ<
%VDFDL@-/-9b_2rXf;h.(LSK=XD2+i8q>P.eXj.p")3O8:LKZLiAqoYXB%#FnI[RO*,Gt>alG0f5af=7dT'sFcH-uNfDMD%"GK/r/
%m_kJp1P><oJ8VItkhN>@C[dCND^ud5E"u-3MDEb//#/qGARMg4lQ^=:g?0s<=,uaZk0*35hd=3Xe,!kL,1-%YX/OeLBkiW#3+6C_
%+B5+3Mpgk2Ukg`A"F*`:iGZK*,W,;?jQ$2tAeKc2U%P=CW"P#.SbeDn$7kBT`3#ehYJ,"\Id9'f7YkA;q;W,aNZ87N^4USR$4QU:
%^L9=%Kqjeq4J85nZh?W`__SVYYh=Ls^Vb*b+oNuDpQrhns8Gr+I!T3-MFOmP(ftQdXd+aGc1kOV*AcQp=hA/.9>.J#*R`N]RPr2>
%@t$3s]80s3>UQ!*bS^SpE"sRqc8/5=S(YiH4.:GX^$X#>WqL`0XL@\D3A\:&*:LY6'c._QbQ/i'gb2O\Q&k_r2c?_^XV+WXD2L"<
%S$p,%BALIl=e"NV^K0I>h;hFAG7(^!k";@!Ki`bnFVFf!m#>OT_'WV%gZL(^7V:)\Yb\[hq>)ZLJ(`3HaKai?cXfi)l*YtC'amrp
%\*@b.*N-BPE!RKfR%@@pF)NA9Uc*.f9oJGKS<XTRG4K-CD[GP%>N(PKLUPde'Hu:5'Q]K4_qW"+\ugpGErE,OO$[6FQ'iq'r`+Z!
%m['&!=7O9_fQc1@W7'ViV/]Hef.tfsj\[g'Wg_r6FN7JuRH<?%/Y2J$5=h\G(aP'`p^7N$'.!6K^Plk;]bm#';d%\K7@/-6'S5Ct
%$I.bc'_L!a8d2kUG"Cpt8JZ1E."D"k4ogqANspfc3)^oepl82,7Xk()qc!<P&PK)`s7!t%Xk;esql*Q;ZG62=o:\k>cUCaoK'1pM
%rb[K1WB0)<S\1XC5*N`I9t.4N<Y5+j'dE0Z-7bEAC+Nn.jR,&@K]7qo%/\pj;&RK(l&BZ3/NMjQ^2@kUnQg<"8rJUp7hYF=W_f$]
%]N'"RJR4\.X.4.BJWBI"@baYE;M*Nd]rY\=LZY^,E^G+5CF>;Hg"7pXns`n8U!-\I7Y]g\I1ot^/7$i.W-N;\1;K@LAI\*@bZWVq
%7+So8[?@uNfBi)Te+D8+XZD7TOq0kd;PsFCIRR.k^8BmY^uk*i2mKUH/5sX?>?1Y</gF@jpC$I_i7c(Q@<BQMh_;ag:"ElE+Y7o6
%g/(pa]TqOg`)KsAqF9r*CXnKUgiD!!k<ce_oZui!hl_>Gea'Eec4SL-\'EBcrG*9qj/Mi0.ONOBQ3O[I8t@]_YCncJIONS[8i'%q
%^1Hoc=36ekj36GpqQ2$PB"V>>m[K16p](&SN;_.,7$$6FWb,^0@T+LET*+Ip8rHAtTJQ5[6*Rtn4oXU87o/0/3Br"IRncDMr@-[f
%;(=;\-j!h1HoaeK_74l:ER0K:*=nPj7f)-Y:I'_kAV!!a/b;7"YCFG2\["9p_ZP8d,@T""r"%!#qTL_nr<7:np]'Y^^4d5=KuMkh
%r#a3:->c@jUbc%aS%U^KDk-d\^JZ;-e5G-/UZY<tCj@8#Y^'E#O&p7*A(t/\4E+HdPi3e\GB16Qml][4Hd;3528;0;SdR4;4)[1G
%RURr13u_DiRCU"Rc19.@^Bese<dd(Oh^R-3ju0s2,\J^OB@Dht.RhZn]>aZ4bGIi1n,@4eUr3ZZCuR=[Bk$Tm/b)CbV8N*?gRJcB
%8%\Oi&+9b;Q-62H5k`3Afha?f>[mK[^<;Y#DX1Q<39.WlBt%(MU<C+a:Yn,K>*j@batE"lJ90;TfXn6R_U)H[,19]IK%!otg=.)!
%<NJ(Gor^5gAaK@QQdE^\c!5'$?`UjkpVqCXDiNY+]4Y&]\aN9:ZG)EE$Bb'Uf>!=1d[WX_pNr;#n%JGhMj_dSrmu(PptpNAQ..gs
%Y@AlFch#2\A(5)-qQ/n[q,qua#a'[UT;)#hLeHU#5<\Ku,L&#=]/:k@iU;64mL;`XpkQW9D'X*Ms83Cc`82'>rTb$FB>Af=:qndD
%HtuRYq[XUp*'be2b-=F8>bMgJN#ZS3&5[:5kMgg#dlr1b2QdgAE^n>\oY'``5u7L#kJ8Up3o8$<&%R:?qB$^mhmP_TZT,"GTD78J
%f(tHNUgp!bY/_:'6_4d#e_sB;b0R=r@iOg:e2<t@F]jRPGl/M&Zr`Jsa]jUkDnZK<1*!71Gq3#/TDK)Ip+u!;2k[/?KW>@BfMb)r
%?e.p-C3[BD]e,XmRBl=IMjA',HK3+\V;DT0E&OVZb*6*"7MVNq7;lal+]Q<]ED(3.bGpLHrXEoBop9E\"NKT*C;eP=.jE5K]5Z==
%ldbiCV&t]`NTtGU`nMDEef&1$59;!'<okI7hOr94/EO"^'7'M&WUJ=4D,b<J.eK-i,[\Pm6J!,52m>dD7T^\g!n?ic0sNMi1!P"2
%(o;jY@&Z(W2rJl/SNlN!s6&#3Bq0*B!]7WMA/f8/$'\>K1',ZDq=H?O8dc2f:IfTSd!trKqeT;FQ0*k*&T>kTi/ae1H%'?4]96"B
%M5!Jjr%(.4Y"rDg5/E&)I,]DQU&-"F:S/m:roPT`Z"X/IRIo_g\*6-W_]g7Y8i"@9&Eh=?W));(=TB`sN-^XG!XM$.)2SI]j*Eg\
%nhN+9UhjRE\Vt)HS@?Kj4n-cIg`&&=5]7p2r%g[62_sO9AQ1'`Y?/"sAIZ8p1ntF$!&#iamW?-CC1oDQW3[t]cLnZJ?jiTpb=["h
%\4Xc0YCj6..sGY)[d$ehPbQIGd0(V1XpkJ@5]'SD'7'E/,t"DL`qWij:=Q^*"#@;i.E:+G-`#b'<VNsuqR1hkW$t)Hk<O3ZRQ;7Y
%nkXU,`$j@#T)+unRnN1K+q<DhX@]-.A),X/+NF'Yg_.F3]JYm"^A5O/]17@jAY#G^B;6&SNRqOci8_AMFH.?:cfD09.el'*3aM.3
%[XtHcb;q_+mC/@@J,brA$1k[917n9D=f[9`$3%s^Uh*e#%Hf*G2W?`FMH8O7&r#\3`2jYkPS+jHPMV[=2HnjcLprSYcl<#b`m1D\
%Q6X#YF+O>.R0_N!C?#1/\h?3#1tW!OHY+o*dbW95N$R3Rh`JOe<Th<W<H[VfV"<EbbfJ#LGj`6\q+&]cUm,Eg4*dVIHWg<=[#$s4
%75Ytq,HVTQC*7(g,#%^f@3"[\Vctr_m)SlFIYIigpGBt-Y+p[&Sp#U#8"Qep)tM:*fE'(&/\<i'<^fT_g3._%O-l.+.a5rWT&B&9
%^4$C;rU#HsUBB$EOo"s1D_)OWhafqY`[`2_O5itA)*auU^2Fc2__-5q"-Vpt78O(j5U/H3fX@>J[#fP5EKqp<8CnIRC`u(Va^0c[
%A2u2E.!al^[@JU"9:3#[P!cOA;B$`WE_#<L[PsG)QAM/bUN5%-qU3M`)#h"("UeRt$luB+c32]Y3k!n@Th%C'd<2[3X#T\\Oe:sm
%^KKY`b*Cq]4.dZ):K`0`Y/4RW)Gr#+<$M4"P2'B,HT:8iXMElX6^Cok67fqs>!>bXfgL*[LUMJkr'00FVn0ErUh"a<.=R8&!/AoM
%=iNhV+-,KsXF&CgYbf%]4Cr<$gCi]jC9HtQ5n1^uWeU(X*6#64]@.P_JqW9c,/5\a27Z4QQ-WG]eJE6gnJap(3SG\@_[G#"WbmBP
%8X#Mr\:nVe\>*aZaQ'W]TpY*$.nre,mUaKDR'8O@#-jVqftD3:(gD%C/g[=^?g7_:I6=Qp_sQFJ4Ho':ljH76*]jC=10e@oiIpH4
%'E&@jSeX954DpjfPISaiT#\_s:?[;P$G"`7/$6hi?)_2jSo6c!-#],mPpZg<Ak):ja*++V2!<%4S8k;mRKO.N^NTe?Hc!eG'%-=a
%,%E^K4"CTYkWH)$OE5c_K*7t/aDjJHWU#f+_uY_Aaj'f_ZN!>l)i,ml+a,7"lfKCtGRKEFM,/lW`l&&!66]?t/Wh;@jR;=]Z8ZK$
%8g@0"pGpB>R_*tW[V9:n*Gf`*H^16q(jC(]m\[a'AUeKokU<!7Fa#QQg7DQ0igK*"32*[IM%FWjk1JL0b/j..mN?[F/=RK6!V*0m
%fhj?F-V#+nT1k.2BORGIO-[d(LJT9i$WPeFfEgB?%s+(j+&,^II(6ea.YfHBC+#kMlh3J1%i_i(6[:)fWq;%K=$UfM8bK<7<_YD-
%Ob[MoX-Ye\8=j9W($sHrN>&TZ!VIk`hs7(1-6^U]da$.(0:5^Y6C=?BmtWuW^6.(:W0X1F:%7C)2Cg=(1h,)V6ec+0Cu5>830SLI
%'@K2M[`/_d#[!QZ-`p.nR,We\)X:j>,(f?jG;cZJ+QQje0b\kg&+"s%8.)Z,jC)Z^SuQ,(70SNVIq``[!tmm/et:!le1WmKRZZ.f
%gm1.US=1ajr08g^=q&nj#T@Tmqk1s<E(t.>Ck09EJV^07"8q3cbScgE2OhWl?XLY1n<^%AgA5j[A(U0LM&6Ssk*A4"%).1<D"*.$
%E@%.0_S4JE:KWdEll7:qO;RL$2CVOYkhojN_u?r704m?T!s]_'_ltRK^RQ:6=.?Mu7MN42.m6#6H8+'B=$nZ<l#Tfk<_(^,?io=9
%67geR'rbnjL..E:Y`7`R*Ejf8h:!\Y:\.aV@+TQI7jI"Nd6>L%dHk70gef7lRXI%">P>^)lmR-?h3Xfj^<#u-igqsm%Au*qD'/62
%AGX4G(>o*8gh`N*UM/PGAH@I1:A7%`79PbfGnP#p_8HRVfd/M?im6'.D_lM_c>"e3l_TP%MN1bYBAdc*JlXI7>_"d%8bEiT$WE'4
%r')af\uNm$b+-&sMlG-9=[$$3`gud7<*c'r-ULHVq2XkGEr*joHA^-OaG-j%AMLPRLc8A@^Z91UV:_-PG;!U1'=Q8s#I0!$=;:X*
%>+ILU]iEda9]DYG)iY=)jC$\ee0gL8AZ;i"pMQ<6,hI(@5J5@'`Q8u05Rp>?,!%^W7i@DkJJ:"8:X@"lB)3J/J+Tf1/"^@c0nF_@
%J=h#*0bb$qe8\$pG$^L],E(QjcAt+gH&4^F@WpI6`&>q\cu6J3g%h=9o]1PYq3@"pcW;EU]]um\Idd4&4Bd5^m*V75!,A?6M"eFg
%?U%YaH9KqB]^g<hV)i&(r/2CN$gGL&4hS82_n.J4mT,ltiniJ%A#nfBfi(AY,VX`;F>@10-\t1i<=CQ5NQShLQD/pCd+GT;A*`8P
%J4Wq0X0/-:q93<?<?+C_-i_r;=uRC$k,ed>]ssuR-kU1`mL:A=G6_8[EVGRclAQ(eUQ2(*miM9C'bQ)_Sp@?Y1lneI3.qHU>o]t_
%>]OWD?-i9m'G69ViMn@T`+71r/[+K9D/4-[/[$phmFuGjOWWk-'J&>ZC9a#d1?rT?]I>QK_>SQ-!QLbV;l.!86hM@5Mqujl'h/Y/
%H;(W?/8^?`VCdF8S^aJe>r=HIb%7Md1V#9,;Y-f5%f/d!$QP0>,L^ISq=mM.Z7KMIA.-bRXK8:O`(IO05SG=85RRn4ch<l.SVf`!
%#r>>cZ?S8\&J`%H?rU5nEec_pn%V$Zp:db28$K^[KLB0_obn^0r[1)-\uU>EX()h.)YP/rfkRLMrR>1Ks!1`idr68s%A(l[BUC8a
%W\rEZ`d'$&IJ*PeXmRWUR=k5DOQbJo]_7+N9GSdA[L+i+@HNoC3-mgmfUa+V'i=OcrpYn9,3UiZaHnu$qB)=he#uPcNI3>C1(3=N
%Au:7PK0Q&Enp)*&/K[K*LQf3qM6ApJ-e\nL#Qkf`*Gd/Pq`([`)OM82mI#`EFa4L"MDk3DD@Ij.\e]bs)=[,E)9T*\Aaj,AjYO],
%bs'Q5RqToNXj'BpI'o2?g9Nr\?s'hN014@\OPe@JBZE]Y\_f/rDoJ=lZ&[&nV4g=fM)EDZ<'0g0hM&gDHLb\k5"!H0L8(\7Y,R'E
%7!Zt3Dm22LP1Qd-82b3L8fGiSi2n>!4WqS'Q%+:]]0p]N_[Jud1)#LZ.1=UH]8!IeTI#gBX^bS6)&a&`=T^cV=c6^`oq^n*U*k.T
%=d*>$D.lkOk3d*:,g7Cd]g\p5-?jC.U%4j7<4."_HeUF8hh=7W(/f7=/ZRguJo<;d&+N^om`rBVTiPfA+L*bVTq/Ds?^9Ga<KsrE
%%QRs0+XMJ;M>m2B,ai=q9<?<<=83/DKu$cK99RUspV/7M2L%cg>2134T^<IDCsmnZ4p"()c@#X=5!<S\?[%)Qj.I*3m0#K[BmcKe
%\6=0W_Vl;"7u_P6Cff-m"fJSoJ*R5=4et=2c]4A<*/&!Hi]C=50/%=b^S#iOjFF9@g\\AJAW_du$#UM,l%"XV+=l<B<G_hE#V@2>
%BZ"kM=l/J8-]8n(&&X4!P,le58Y8;2i+-p<.G[9ZK@(arV%5;8K<-X]>=N)Pf\O#u?23YVY,tGgR$MKXE-+aVqJ+DT*\pn;L/s&X
%UJ+H<WD)^gKHtd>g`9[qQ;pp9SZB;>m$p%m4B&ICS.H[+J%DJ02;)d4^rOl]UFGZ9EC4`).0rs98fW%uB4)<8YITCc$4h7/Kgfps
%q(7S.j)g//PF,>c;!FtuM&#QjOZ]n3Ep;<G"$<h'@M@Y`^3F('WEECR;F&%B;ARSXfait^i+i.EUQIO;;(\%>+aM(niXm#Z4[YaL
%%OP29P9U$Xie4")Nf!M'UMSnn9mT\e>u.SL)S)<M2c]"O5K8lkAPK_9agH%G%jrZO+XMIm^:e;V3['u.p@'[PS<b1+.js#F.lLdH
%GSp.K_$Motnu^Sl8k:*A=#k6:MTrh%_VL-N)&J][&QI^;3pb\M`-f2hl7#k%C2qA[OjN5WJUS1fZU,LK%4(64]j:VZhcfJejjdUT
%Y(!S3Zsc!r!;UDJ)!n&)Z8)GZP)mOlN%35(mF.nm[882fJI0nk"(lCRs0F=VD!\pJK!E1S2XA9<mi^!65E)IGPXo8ZnSTZjBeb\Z
%AD`)``#hEdK(:kCqa6:=asl8Adbd?^s'RArD&&u_VK>gP5EBE1:3(\/<+:A@,pBEgVU6c-,^MnsLd@2DP$s0>B)=s^8sgj\;<9:[
%'C;Qik0K-'B!QbWjRrO:%EG\9P,-PuRACGZLo"ordfC:8hs]6'#tQ783/bDhNu5ZgT!Dai/M%O?T?U<9aPC"RQ:>\^[]=TB8I'G1
%\TUbG1NkE!#NkZdgehWen/MhuWG=I()?m[TajXeUNdZ)Hl&B_VX#gT/&4S2!Y8c;!cU;^d92SeA"4\hnf@=GeFjbl%=W%_/U"%l*
%<ZafZ\bdiQX%fHo#Mn)&ZMlYE%AXPP\[FMk]@a\@o%pGE.93P6fGu7qX>EFIOeo<s.Jfa:Mk(P@E@oa$b$)im&!r^)^rbG"G$]rX
%\4P!0&CIo9?G5F1,n2D9``:eE@!T*T2]/CIkC1N*K.HaD8]O%ULa$\TO8kq+U$8_%_$[_b=8YLDJM$aD>]&3[mttq^2]6F4LaZp8
%rIan;Ybcg%"0t6u>.j*>ZU-uNc-nc\#+Ls\FL<Tj_Y&?Mlh<jB1:bU&*fq5t<h:>9?LcPsn=0\lJ,&RAk;3_fm3`/*[F"n-%=D"s
%blWfq#%l)jV:A.R'&!k<J:%o2!nfNTgDd(A+=q3!o%G[SRZQZG+dn0"f0<[2F%`_V\D$E=13^Ng*$sSQ(?,ErU4G/-6aH;2A2d6V
%eRt!GZK8*7L(9q&Z_LE]bjLlefq]<`X@O=OQ_g1FHUk8Ab'&7O#aZJk[-hR7$=pG7AD>O-+L?J"COXMV2L<M$;KW.9"O'Z0iY]h@
%MdoFc=1^.L,rdS>3X\*gXH&IV2hn0p5Cm@pm&>Y9GRB#CeG1GeNKU5jpskoAc$'%cW&nj@?&-*.)Cs3[o,bDr;&J#lH=mE:;0B4o
%;Sl(g$uh<T<#0OM8gm-F,M:F2e;@i$)HHn_*Q=d+fiq:tOQ<Qq8>9k/E)J/j*j,JkI/cC_9C6IVY)i7Kl"UBB;Eg0"mU1H7BU?41
%$mNL?CGrE<S]a4``l?c7_a/YkguU?S%dl@q0ie`/cQ\K?'AVn@BfW6g52^"CEbY_dTV<?@fe5Icl7THtd"E19I3P#8luj<#dt$WR
%D?G.PDaN&F+_,[JORh)%I!XFC^[(sPbQNd,qS!S7I@OXN##37YBGcc9[>YJ-lJktG)T3<;7j]@1hPiV#?p2l2iSk^^Rb)n9Gl\Qd
%WZLcj!F#ROHusll$:G=LG/\WT"jJ1@5LsqEcTqG9+lJ[*lPn>YT56'e#V@<6LWkMafPn^/k'&5c.tQsfBbcbH:W(95=G*H&0p?Jl
%:`.3DZooLf`2o"=7&1%7oH.lYBF@b\koa<Cfc2#(K?bcU$PNn#m[P$$[b@I04Wn-HSqE3<7W[aWaW38C#>Cg'l!hu,_E)=.*;BOP
%Xe9KD=H^XS4_7os/..e0+[T/GSW]f%TgY(X;BbRU5MoRF'@WUNmLum!b\H\T;<M$Q[tSlb!3mhAAJQ^'NTEO9`\o#V+BTbsmj.XM
%#p))U=]`*@1K_E<-X=X9fAs%I.W:rJG/,U'Jo2+&9c9)D5ao>Dgb7bkTkAhi]`ZGZF$aL1/XWRhpE:@Mb;clK:sF\nZT@ed##\fA
%KhnZ$3a8kNHB$tI$2FY0BkLj\;p/l-`09Ko7Q=Pj+MmuYb2>9lb>sD@f&$5N1jBAF1*QtjmonKFe0dQhELJC_Ls$fPY#m*W%L\[`
%('_MXZ5_E^"1tpW733I[hYp!GlY<0iCZju"*tj-$5JFm.O4r<S4]ir$'sYI<'FkeSneFfogbaeMDb!XEQP&Z6f<^e\$)tH-?pUMl
%+[.ts%:.+7)`+O^AE^_<KNZ=]:Cl)U/k7PkX!0!g1HC<XJ,fM[q=_FMGl,heq#7mT4oYKBIp0Vai?/*!rmr6AqX6XsrkC,$>V6E^
%n1UF6r8lgbq>AjZIJN"%n,E7NkPtMOpA(VYIfAa+DdWKVrR6'7?[ht@k?ks9rVDkQrsn"\pB,m>iK+#O9(DpbYOJ"~>
%AI9_PrivateDataEnd
